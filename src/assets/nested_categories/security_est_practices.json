[
  {
    "id": 256,
    "count": 3,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/pro-main/angular-best-practices/security/http-level-vulnerabilities/",
    "name": "HTTP-level vulnerabilities",
    "slug": "http-level-vulnerabilities",
    "taxonomy": "category",

    "lang": "javascript",
    "postID": "ngx",
    "courseInfo": "Angular has built-in support to help prevent two common HTTP vulnerabilities, cross-site request forgery (CSRF or XSRF) and cross-site script inclusion (XSSI). Both of these must be mitigated primarily on the server side, but Angular provides helpers to make integration on the client side easier.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/translate.svg"
  },
  {
    "id": 263,
    "count": 9,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/pro-main/angular-best-practices/security/preventing-cross-site-scripting-xss/",
    "name": "Preventing cross-site scripting (XSS)",
    "slug": "preventing-cross-site-scripting-xss",

    "lang": "javascript",
    "postID": "ngx",
    "courseInfo": "Cross-site scripting (XSS) enables attackers to inject malicious code into web pages. Such code can then, for example, steal user and login data, or perform actions that impersonate the user. This is one of the most common attacks on the web.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/translate.svg"
  }
]
