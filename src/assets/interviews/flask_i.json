[
  {
    "id": 4589,
    "date": "2021-01-05T07:07:45",
    "date_gmt": "2021-01-05T07:07:45",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4589"
    },
    "modified": "2021-01-05T07:08:10",
    "modified_gmt": "2021-01-05T07:08:10",
    "slug": "what-is-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-is-flask/",
    "title": {
      "rendered": "What is Flask?"
    },
    "content": {
      "rendered": "\n<p>Flask is a web development framework created in Python language. This Framework is based on the robust foundation of Jinja2 templates engine and Werkzeug comprehensive WSGI web application library.</p>\n\n\n\n<p>Flask is created by Armin Ronacher and is developed as a part of the Pallets Projects, which is a collection of Python web development libraries such as Flask, Click, ItsDangerous, Jinja, MarkupSafe, and Werkzeug.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask is a web development framework created in Python language. This Framework is based on the robust foundation of Jinja2 templates engine and Werkzeug comprehensive WSGI web application library. Flask is created by Armin Ronacher and is developed as a part of the Pallets Projects, which is a collection of Python web development libraries such [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4589"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4589"
        }
      ],
      "version-history": [
        {
          "count": 2,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4589/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4592,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4589/revisions/4592"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4589"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4589"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4589"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4593,
    "date": "2021-01-05T07:08:45",
    "date_gmt": "2021-01-05T07:08:45",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4593"
    },
    "modified": "2021-01-05T07:08:45",
    "modified_gmt": "2021-01-05T07:08:45",
    "slug": "is-the-flask-framework-open-source",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/is-the-flask-framework-open-source/",
    "title": {
      "rendered": "Is the Flask framework open source?"
    },
    "content": {
      "rendered": "\n<p>Yes, the Flask framework is open-source. The source code of the Flask framework is available here . It is released under the BSD-3 Clause “New” or “Revised” License.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Yes, the Flask framework is open-source. The source code of the Flask framework is available here . It is released under the BSD-3 Clause “New” or “Revised” License.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4593"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4593"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4593/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4594,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4593/revisions/4594"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4593"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4593"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4593"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4595,
    "date": "2021-01-05T07:09:20",
    "date_gmt": "2021-01-05T07:09:20",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4595"
    },
    "modified": "2021-01-05T07:09:20",
    "modified_gmt": "2021-01-05T07:09:20",
    "slug": "how-to-get-the-development-version-of-the-flask-framework",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-get-the-development-version-of-the-flask-framework/",
    "title": {
      "rendered": "How to get the development version of the Flask framework?"
    },
    "content": {
      "rendered": "\n<p>The development version of the Flask framework can be obtained using the below-mentioned commands.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>git clone https://github.com/pallets/flask\r\ncd flask &amp;&amp; python3 setup.py develop</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The development version of the Flask framework can be obtained using the below-mentioned commands.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4595"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4595"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4595/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4596,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4595/revisions/4596"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4595"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4595"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4595"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4597,
    "date": "2021-01-05T07:10:09",
    "date_gmt": "2021-01-05T07:10:09",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4597"
    },
    "modified": "2021-01-05T07:10:09",
    "modified_gmt": "2021-01-05T07:10:09",
    "slug": "how-to-add-the-mailing-feature-in-the-flask-application",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-add-the-mailing-feature-in-the-flask-application/",
    "title": {
      "rendered": "How to add the mailing feature in the Flask Application?"
    },
    "content": {
      "rendered": "\n<p>To send emails, we need to install the Flask-Mail flask extension using the below-given command.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>pip install Flask-Mail</code></pre>\n\n\n\n<p>Once installed, then we need to use Flask Config API to configure MAIL-SERVER, MAIL_PORT, MAIL_USERNAME, MAIL_PASSWORD, etc. Then we need to import Message Class, instantiate it and form a message object before sending the email by using the mail.send() method.</p>\n\n\n\n<p><strong>An example is shown below.</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>from flask_mail import Mail, Messagefrom flask import Flask app = Flask(__name__)mail = Mail(app) @app.route(“/mail”)def email():msg = Message( “Hello Message”, sender=”admin@test.com”, recipients=&#91;“to@test.com”])mail.send(msg)</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To send emails, we need to install the Flask-Mail flask extension using the below-given command. Once installed, then we need to use Flask Config API to configure MAIL-SERVER, MAIL_PORT, MAIL_USERNAME, MAIL_PASSWORD, etc. Then we need to import Message Class, instantiate it and form a message object before sending the email by using the mail.send() method. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4597"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4597"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4597/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4598,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4597/revisions/4598"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4597"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4597"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4597"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4599,
    "date": "2021-01-05T07:10:43",
    "date_gmt": "2021-01-05T07:10:43",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4599"
    },
    "modified": "2021-01-05T07:10:43",
    "modified_gmt": "2021-01-05T07:10:43",
    "slug": "what-is-wsgi",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-is-wsgi/",
    "title": {
      "rendered": "What is WSGI?"
    },
    "content": {
      "rendered": "\n<p> WSGI stands for the Web Server Gateway Interface. It is a Python standard defined in PEP 3333. WSGI is pronounced as “Whiskey.” It is a specification that describes how a web server communicates with a web application.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p> WSGI stands for the Web Server Gateway Interface. It is a Python standard defined in PEP 3333. WSGI is pronounced as “Whiskey.” It is a specification that describes how a web server communicates with a web application.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4599"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4599"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4599/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4600,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4599/revisions/4600"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4599"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4599"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4599"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4601,
    "date": "2021-01-05T07:11:09",
    "date_gmt": "2021-01-05T07:11:09",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4601"
    },
    "modified": "2021-01-05T07:11:09",
    "modified_gmt": "2021-01-05T07:11:09",
    "slug": "who-created-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/who-created-flask/",
    "title": {
      "rendered": "Who created Flask?"
    },
    "content": {
      "rendered": "\n<p>Armin Ronacher created the Flask framework. Flask was born out of April fool Joke in 2011.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Armin Ronacher created the Flask framework. Flask was born out of April fool Joke in 2011.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4601"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4601"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4601/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4602,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4601/revisions/4602"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4601"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4601"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4601"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4603,
    "date": "2021-01-05T07:11:33",
    "date_gmt": "2021-01-05T07:11:33",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4603"
    },
    "modified": "2021-01-05T07:11:33",
    "modified_gmt": "2021-01-05T07:11:33",
    "slug": "why-do-we-use-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/why-do-we-use-flask/",
    "title": {
      "rendered": "Why do we use Flask?"
    },
    "content": {
      "rendered": "\n<p>Flask is used to create Web applications using Python programming language. Flask is a microframework that is also used for quick prototyping web and networking based applications.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask is used to create Web applications using Python programming language. Flask is a microframework that is also used for quick prototyping web and networking based applications.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4603"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4603"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4603/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4604,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4603/revisions/4604"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4603"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4603"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4603"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4605,
    "date": "2021-01-05T07:12:07",
    "date_gmt": "2021-01-05T07:12:07",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4605"
    },
    "modified": "2021-01-05T07:12:07",
    "modified_gmt": "2021-01-05T07:12:07",
    "slug": "how-to-install-flask-on-linux",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-install-flask-on-linux/",
    "title": {
      "rendered": "How to install Flask on Linux?"
    },
    "content": {
      "rendered": "\n<p>On Linux, Flask can be installed using Python’s package manager, pip.</p>\n\n\n\n<p><strong>Use the below command to install Flask.</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>pip install Flask</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>On Linux, Flask can be installed using Python’s package manager, pip. Use the below command to install Flask.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4605"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4605"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4605/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4606,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4605/revisions/4606"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4605"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4605"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4605"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4607,
    "date": "2021-01-05T07:12:36",
    "date_gmt": "2021-01-05T07:12:36",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4607"
    },
    "modified": "2021-01-05T07:12:36",
    "modified_gmt": "2021-01-05T07:12:36",
    "slug": "what-is-the-default-host-port-and-port-of-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-is-the-default-host-port-and-port-of-flask/",
    "title": {
      "rendered": "What is the default host port and port of Flask?"
    },
    "content": {
      "rendered": "\n<p>Flask default host is a localhost (127.0.0.1), and the default port is 5000.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask default host is a localhost (127.0.0.1), and the default port is 5000.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4607"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4607"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4607/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4608,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4607/revisions/4608"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4607"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4607"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4607"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4609,
    "date": "2021-01-05T07:13:28",
    "date_gmt": "2021-01-05T07:13:28",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4609"
    },
    "modified": "2021-01-05T07:13:28",
    "modified_gmt": "2021-01-05T07:13:28",
    "slug": "how-to-change-default-host-and-port-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-change-default-host-and-port-in-flask/",
    "title": {
      "rendered": "How to change default host and port in Flask?"
    },
    "content": {
      "rendered": "\n<p>Flask default host and port can be changed by passing the values to host and port parameters while calling run method on the app.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>from flask import Flaskapp = Flask(__name__) @app.route(\"/\")def index():return \"Hello, World!\" if __name__ == \"__main__\":app.run(host=\"0.0.0.0\", port=8080)</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask default host and port can be changed by passing the values to host and port parameters while calling run method on the app.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4609"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4609"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4609/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4610,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4609/revisions/4610"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4609"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4609"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4609"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4611,
    "date": "2021-01-05T07:13:55",
    "date_gmt": "2021-01-05T07:13:55",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4611"
    },
    "modified": "2021-01-05T07:13:55",
    "modified_gmt": "2021-01-05T07:13:55",
    "slug": "which-flask-extension-can-be-used-to-create-an-ajax-application",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/which-flask-extension-can-be-used-to-create-an-ajax-application/",
    "title": {
      "rendered": "Which Flask extension can be used to create an Ajax application?"
    },
    "content": {
      "rendered": "\n<p>We can use Flask-Sijax to create an Ajax application. Flask-Sijax is an extension that uses Python/JQuery. It is available on PyPI and can be installed using pip.</p>\n\n\n\n<p>Sijax stands for Simple Ajax. Once configured and initialized, it enables the use of @flask_sijax decorator, which we can use for making Ajax aware of the views in a Flask Application.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>We can use Flask-Sijax to create an Ajax application. Flask-Sijax is an extension that uses Python/JQuery. It is available on PyPI and can be installed using pip. Sijax stands for Simple Ajax. Once configured and initialized, it enables the use of @flask_sijax decorator, which we can use for making Ajax aware of the views in [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4611"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4611"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4611/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4612,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4611/revisions/4612"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4611"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4611"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4611"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4613,
    "date": "2021-01-05T07:14:21",
    "date_gmt": "2021-01-05T07:14:21",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4613"
    },
    "modified": "2021-01-05T07:14:21",
    "modified_gmt": "2021-01-05T07:14:21",
    "slug": "how-to-use-the-flask-commands",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-use-the-flask-commands/",
    "title": {
      "rendered": "How to use the Flask commands?"
    },
    "content": {
      "rendered": "\n<p>As a result of the Flask installation, we also get access to a command-line application called Flask. There are various commands that we can use.</p>\n\n\n\n<p>Use Flask –help on the command line to see all the options. Default commands are routes, run, and shell. This utility provides commands from Flask, extensions, and the application.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>As a result of the Flask installation, we also get access to a command-line application called Flask. There are various commands that we can use. Use Flask –help on the command line to see all the options. Default commands are routes, run, and shell. This utility provides commands from Flask, extensions, and the application.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4613"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4613"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4613/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4614,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4613/revisions/4614"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4613"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4613"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4613"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4615,
    "date": "2021-01-05T07:15:09",
    "date_gmt": "2021-01-05T07:15:09",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4615"
    },
    "modified": "2021-01-05T07:15:09",
    "modified_gmt": "2021-01-05T07:15:09",
    "slug": "how-to-get-query-string-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-get-query-string-in-flask/",
    "title": {
      "rendered": "How to get query String in Flask?"
    },
    "content": {
      "rendered": "\n<p>We can get the argument’s value using the request object in Flask.</p>\n\n\n\n<p><strong>An example is shown below.</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>from flask import Flaskfrom flask import request app = Flask(__name__) @app.route(\"/\")def index():val = request.args.get(\"var\")  return \"Hello, World! {}\".format(val) if __name__==\"__main__\":app.run(host=\"0.0.0.0\", port=8080)</code></pre>\n\n\n\n<p>When we use the browser to navigate with a request parameter, then we see the below result.</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://cdn.softwaretestinghelp.com/wp-content/qa/uploads/2020/08/interview_q_13.png\"><img src=\"https://cdn.softwaretestinghelp.com/wp-content/qa/uploads/2020/08/interview_q_13.png\" alt=\"request parameter - result\" class=\"wp-image-139438\"/></a></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>We can get the argument’s value using the request object in Flask. An example is shown below. When we use the browser to navigate with a request parameter, then we see the below result.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4615"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4615"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4615/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4616,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4615/revisions/4616"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4615"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4615"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4615"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4617,
    "date": "2021-01-05T07:15:55",
    "date_gmt": "2021-01-05T07:15:55",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4617"
    },
    "modified": "2021-01-05T07:15:55",
    "modified_gmt": "2021-01-05T07:15:55",
    "slug": "how-to-get-the-user-agent-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-get-the-user-agent-in-flask/",
    "title": {
      "rendered": "How to get the user agent in Flask?"
    },
    "content": {
      "rendered": "\n<p>We can use the request object to get the User-Agent in Flask.</p>\n\n\n\n<p><strong>Use the below-mentioned code for the same.</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>from flask import Flaskfrom flask import request app = Flask(__name__) @app.route(\"/\")def index():val = request.args.get(\"var\")user_agent = request.headers.get('User-Agent')    response = \"\"\"&amp;lt;p&amp;gt;Hello, World! {}&amp;lt;br/&amp;gt;You are accessing this app with {}&amp;lt;/p&amp;gt;\"\"\".format(val, user_agent)    return responseif __name__==\"__main__\":app.run(host=\"0.0.0.0\", port=8080)</code></pre>\n\n\n\n<p>Once you run this code and navigate to the required URL using the Chrome browser, you will see the result, as shown in the below image.</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://cdn.softwaretestinghelp.com/wp-content/qa/uploads/2020/08/interview_q_14_1.png\"><img src=\"https://cdn.softwaretestinghelp.com/wp-content/qa/uploads/2020/08/interview_q_14_1.png\" alt=\"Result in Chrome\" class=\"wp-image-139439\"/></a></figure>\n\n\n\n<p>The result in Firefox will look as shown in the below image.</p>\n\n\n\n<figure class=\"wp-block-image\"><a href=\"https://cdn.softwaretestinghelp.com/wp-content/qa/uploads/2020/08/interview_q_14_2.png\"><img src=\"https://cdn.softwaretestinghelp.com/wp-content/qa/uploads/2020/08/interview_q_14_2.png\" alt=\"Result in Firefox\" class=\"wp-image-139440\"/></a></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>We can use the request object to get the User-Agent in Flask. Use the below-mentioned code for the same. Once you run this code and navigate to the required URL using the Chrome browser, you will see the result, as shown in the below image. The result in Firefox will look as shown in the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4617"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4617"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4617/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4618,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4617/revisions/4618"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4617"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4617"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4617"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4619,
    "date": "2021-01-05T07:16:33",
    "date_gmt": "2021-01-05T07:16:33",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4619"
    },
    "modified": "2021-01-05T07:16:33",
    "modified_gmt": "2021-01-05T07:16:33",
    "slug": "how-to-use-url_for-in-the-flask-application",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-use-url_for-in-the-flask-application/",
    "title": {
      "rendered": "How to use url_for in the Flask application?"
    },
    "content": {
      "rendered": "\n<p>Flask’s url_for function helps in creating dynamic routes. We can make use of url_for in the Flask templates. We can call the view function with parameters and values to generate URLs.</p>\n\n\n\n<p><strong>For example,</strong>&nbsp;pass a function and its arguments, as shown below.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;a href=”{{ url_for(‘get_post_id’, post_id=post.id}}”>{{post.title}}&lt;a></code></pre>\n\n\n\n<p>View function for handling variables in routes.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>@app.route(“/blog/post/&lt;string:post_id>”)\r\ndef get_post_id(post_id):\r\nreturn post_id</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask’s url_for function helps in creating dynamic routes. We can make use of url_for in the Flask templates. We can call the view function with parameters and values to generate URLs. For example,&nbsp;pass a function and its arguments, as shown below. View function for handling variables in routes.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4619"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4619"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4619/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4620,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4619/revisions/4620"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4619"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4619"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4619"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4621,
    "date": "2021-01-05T07:17:14",
    "date_gmt": "2021-01-05T07:17:14",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4621"
    },
    "modified": "2021-01-05T07:17:14",
    "modified_gmt": "2021-01-05T07:17:14",
    "slug": "how-to-create-an-admin-interface-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-create-an-admin-interface-in-flask/",
    "title": {
      "rendered": "How to create an Admin interface in Flask?"
    },
    "content": {
      "rendered": "\n<p>We can create an Admin interface in Flask using the Flask-Admin extension. It helps in grouping individual views together in classes. We can use the Flask-Appbuilder extension too. Flask-Appbuilder already comes with an Admin interface.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>We can create an Admin interface in Flask using the Flask-Admin extension. It helps in grouping individual views together in classes. We can use the Flask-Appbuilder extension too. Flask-Appbuilder already comes with an Admin interface.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4621"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4621"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4621/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4622,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4621/revisions/4622"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4621"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4621"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4621"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4623,
    "date": "2021-01-05T07:17:38",
    "date_gmt": "2021-01-05T07:17:38",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4623"
    },
    "modified": "2021-01-05T07:17:38",
    "modified_gmt": "2021-01-05T07:17:38",
    "slug": "how-to-integrate-twitter-or-similar-api-with-the-flask-application",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-integrate-twitter-or-similar-api-with-the-flask-application/",
    "title": {
      "rendered": "How to integrate Twitter or Similar API with the Flask Application?"
    },
    "content": {
      "rendered": "\n<p>To integrate with Flask, we can make use of a Flask extension called Flask-Social. It not only helps in authenticating users from Twitter but also other social platforms or accounts such as Facebook and Google. We need to use Flask-Social along with Flask-Security.</p>\n\n\n\n<p>We need to install individual API libraries in Python and also need to get consumer and secret keys by registering the Flask application on the external account providers.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To integrate with Flask, we can make use of a Flask extension called Flask-Social. It not only helps in authenticating users from Twitter but also other social platforms or accounts such as Facebook and Google. We need to use Flask-Social along with Flask-Security. We need to install individual API libraries in Python and also need [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4623"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4623"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4623/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4624,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4623/revisions/4624"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4623"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4623"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4623"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4625,
    "date": "2021-01-05T07:18:12",
    "date_gmt": "2021-01-05T07:18:12",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4625"
    },
    "modified": "2021-01-05T07:18:12",
    "modified_gmt": "2021-01-05T07:18:12",
    "slug": "why-is-flask-called-a-microframework",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/why-is-flask-called-a-microframework/",
    "title": {
      "rendered": "Why is Flask called a Microframework?"
    },
    "content": {
      "rendered": "\n<p><strong> </strong>Flask is called a microframework because Flask only provides core features such as request, routing, and blueprints. For other features, such as Caching, ORM, forms, etc., we need to make use of Flask-Extensions.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p> Flask is called a microframework because Flask only provides core features such as request, routing, and blueprints. For other features, such as Caching, ORM, forms, etc., we need to make use of Flask-Extensions.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4625"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4625"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4625/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4626,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4625/revisions/4626"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4625"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4625"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4625"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4627,
    "date": "2021-01-05T07:18:44",
    "date_gmt": "2021-01-05T07:18:44",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4627"
    },
    "modified": "2021-01-05T07:18:44",
    "modified_gmt": "2021-01-05T07:18:44",
    "slug": "what-are-the-benefits-of-using-the-flask-framework",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-are-the-benefits-of-using-the-flask-framework/",
    "title": {
      "rendered": "What are the benefits of using the Flask framework?"
    },
    "content": {
      "rendered": "\n<p>Some benefits of using the Flask framework are:</p>\n\n\n\n<ul><li>It has an inbuilt development server.</li><li>It has vast third-party extensions.</li><li>It has a tiny API and can be quickly learned by a web developer.</li><li>It is WSGI compliant.</li><li>It supports Unicode.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Some benefits of using the Flask framework are: It has an inbuilt development server. It has vast third-party extensions. It has a tiny API and can be quickly learned by a web developer. It is WSGI compliant. It supports Unicode.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4627"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4627"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4627/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4628,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4627/revisions/4628"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4627"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4627"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4627"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4629,
    "date": "2021-01-05T07:19:13",
    "date_gmt": "2021-01-05T07:19:13",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4629"
    },
    "modified": "2021-01-05T07:19:13",
    "modified_gmt": "2021-01-05T07:19:13",
    "slug": "is-the-sqlite-database-built-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/is-the-sqlite-database-built-in-flask/",
    "title": {
      "rendered": "Is the SQLite database built-in Flask?"
    },
    "content": {
      "rendered": "\n<p>SQLite is in-built with Python. To use the database in Flask, we need not install any additional Flask-Extension. Inside the view, we can import SQLite and write SQL queries for interacting with the database.</p>\n\n\n\n<p>However, Flask developers generally make use of Flask-SQLAlchemy, which eliminates the need to write complex SQL queries and is an ORM to interact with the SQLite database.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>SQLite is in-built with Python. To use the database in Flask, we need not install any additional Flask-Extension. Inside the view, we can import SQLite and write SQL queries for interacting with the database. However, Flask developers generally make use of Flask-SQLAlchemy, which eliminates the need to write complex SQL queries and is an ORM [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4629"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4629"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4629/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4630,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4629/revisions/4630"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4629"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4629"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4629"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4631,
    "date": "2021-01-05T07:19:44",
    "date_gmt": "2021-01-05T07:19:44",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4631"
    },
    "modified": "2021-01-05T07:19:44",
    "modified_gmt": "2021-01-05T07:19:44",
    "slug": "what-do-you-mean-by-template-engines-in-the-flask-framework",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-do-you-mean-by-template-engines-in-the-flask-framework/",
    "title": {
      "rendered": "What do you mean by template engines in the Flask framework?"
    },
    "content": {
      "rendered": "\n<p>A template is a file that contains two types of data, i.e., static and dynamic. Dynamic data in a template is populated during run time. Flask makes use of Jinja2 template engine to let developers create HTML templates with placeholders for dynamic data.</p>\n\n\n\n<p>These placeholders can be filled during run time by using Flask’s render_template method with required parameters and values.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A template is a file that contains two types of data, i.e., static and dynamic. Dynamic data in a template is populated during run time. Flask makes use of Jinja2 template engine to let developers create HTML templates with placeholders for dynamic data. These placeholders can be filled during run time by using Flask’s render_template [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4631"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4631"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4631/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4632,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4631/revisions/4632"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4631"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4631"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4631"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4633,
    "date": "2021-01-05T07:20:11",
    "date_gmt": "2021-01-05T07:20:11",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4633"
    },
    "modified": "2021-01-05T07:20:11",
    "modified_gmt": "2021-01-05T07:20:11",
    "slug": "what-do-you-mean-by-thread-local-object-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-do-you-mean-by-thread-local-object-in-flask/",
    "title": {
      "rendered": "What do you mean by Thread local object in Flask?"
    },
    "content": {
      "rendered": "\n<p>In Flask, thread-safety has been provided out of the box. We can use objects such as current_app, g, and request without worrying about problems related to locking and concurrency. Moreover, we need not pass objects from methods to methods, and these objects are generally available within a valid request context.</p>\n\n\n\n<p>This attribute of Flask makes it a bit unique and provides a lot of convenience to the Flask developers while keeping Flask application thread-safe.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In Flask, thread-safety has been provided out of the box. We can use objects such as current_app, g, and request without worrying about problems related to locking and concurrency. Moreover, we need not pass objects from methods to methods, and these objects are generally available within a valid request context. This attribute of Flask makes [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4633"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4633"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4633/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4634,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4633/revisions/4634"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4633"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4633"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4633"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4635,
    "date": "2021-01-05T07:20:57",
    "date_gmt": "2021-01-05T07:20:57",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4635"
    },
    "modified": "2021-01-05T07:20:57",
    "modified_gmt": "2021-01-05T07:20:57",
    "slug": "what-is-the-difference-between-django-and-flask-why-should-one-choose-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-is-the-difference-between-django-and-flask-why-should-one-choose-flask/",
    "title": {
      "rendered": "What is the difference between Django and Flask? Why should one choose Flask?"
    },
    "content": {
      "rendered": "\n<p>Django is also a web development framework created in the Python programming language. It is a full-featured web application framework with a lot of features that are built into it, such as an Admin backend, and an ORM with migration capability. It is a little bit older and more mature.</p>\n\n\n\n<p>Flask is better for quick development use cases and is perfect for prototyping. Django has inspired even some Flask extensions that are written. Flask is more suitable for developing lightweight web applications that do not require a large codebase. It is apt for developing microservices or serverless applications.</p>\n\n\n\n<p>Flask is easy to learn and has fewer API’s when compared to Django. As the industry is following the trends towards microservices served as part of containers, it is excellent to keep Flask in your web development toolkit.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Django is also a web development framework created in the Python programming language. It is a full-featured web application framework with a lot of features that are built into it, such as an Admin backend, and an ORM with migration capability. It is a little bit older and more mature. Flask is better for quick [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4635"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4635"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4635/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4636,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4635/revisions/4636"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4635"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4635"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4635"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4637,
    "date": "2021-01-05T07:21:25",
    "date_gmt": "2021-01-05T07:21:25",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4637"
    },
    "modified": "2021-01-05T07:21:25",
    "modified_gmt": "2021-01-05T07:21:25",
    "slug": "describe-the-features-of-forms-extension-for-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/describe-the-features-of-forms-extension-for-flask/",
    "title": {
      "rendered": "Describe the features of Forms extension for Flask."
    },
    "content": {
      "rendered": "\n<p>&nbsp;Forms in Flask can be implemented by using an extension called Flask-WTF. Flask-WTF is created by integrating Flask with WTForms. WTForms is a python-based form rendering and validation library. It supports data validation, internationalization, and CSRF protection.</p>\n\n\n\n<p>Flask-WTF also provides reCAPTCHA support along with file uploads when tied with Flask-Uploads. You also can handle JavaScript requests, and customize the error response.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>&nbsp;Forms in Flask can be implemented by using an extension called Flask-WTF. Flask-WTF is created by integrating Flask with WTForms. WTForms is a python-based form rendering and validation library. It supports data validation, internationalization, and CSRF protection. Flask-WTF also provides reCAPTCHA support along with file uploads when tied with Flask-Uploads. You also can handle JavaScript [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4637"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4637"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4637/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4638,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4637/revisions/4638"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4637"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4637"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4637"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4639,
    "date": "2021-01-05T07:22:01",
    "date_gmt": "2021-01-05T07:22:01",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4639"
    },
    "modified": "2021-01-05T07:22:01",
    "modified_gmt": "2021-01-05T07:22:01",
    "slug": "how-to-use-a-session-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-use-a-session-in-flask/",
    "title": {
      "rendered": "How to use a session in Flask?"
    },
    "content": {
      "rendered": "\n<p>Whenever we want to save some data between requests, then we make use of session objects in Flask. We can set and get data from the session object, as shown below.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>fromflask import Flask, session app = Flask(__name__) @app.route('/use_session')def use_session()if 'song' not in session:session&#91;'songs'] = {'title': 'Tapestry', 'singer': 'Bruno Major'} return session.get('songs') @app.route('/delete_session')def delete_session()session.pop('song', None)return \"removed song from session\"</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Whenever we want to save some data between requests, then we make use of session objects in Flask. We can set and get data from the session object, as shown below.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4639"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4639"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4639/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4640,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4639/revisions/4640"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4639"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4639"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4639"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4641,
    "date": "2021-01-05T07:22:30",
    "date_gmt": "2021-01-05T07:22:30",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4641"
    },
    "modified": "2021-01-05T07:22:30",
    "modified_gmt": "2021-01-05T07:22:30",
    "slug": "what-is-the-g-object-in-flask-how-does-it-differ-from-the-session-object",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-is-the-g-object-in-flask-how-does-it-differ-from-the-session-object/",
    "title": {
      "rendered": "What is the g object in Flask? How does it differ from the session object?"
    },
    "content": {
      "rendered": "\n<p>Flask’s g object is used as a global namespace for holding any data during the application context. g object is not appropriate for storing the data between requests. The letter g, in a sense, stands for global.</p>\n\n\n\n<p>In situations, when you need to keep global variables during an application context, then rather than creating your global variable, it is best to use the g object as each request in Flask has a separate g object. Flask’s g object saves us from accidental modifications of self-defined global variables.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask’s g object is used as a global namespace for holding any data during the application context. g object is not appropriate for storing the data between requests. The letter g, in a sense, stands for global. In situations, when you need to keep global variables during an application context, then rather than creating your [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4641"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4641"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4641/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4642,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4641/revisions/4642"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4641"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4641"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4641"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4643,
    "date": "2021-01-05T07:23:03",
    "date_gmt": "2021-01-05T07:23:03",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4643"
    },
    "modified": "2021-01-05T07:23:03",
    "modified_gmt": "2021-01-05T07:23:03",
    "slug": "what-is-the-application-context-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-is-the-application-context-in-flask/",
    "title": {
      "rendered": "What is the application context in Flask?"
    },
    "content": {
      "rendered": "\n<p>The application context in Flask relates to the idea of a complete request/response cycle. It keeps a track of application-level data during a request or a CLI command. We make use of g and current_app proxies to achieve the same.</p>\n\n\n\n<p>There are situations when it is difficult to directly import the Flask app, such as in the case of a Flask extension or a Blueprint. Moreover, introducing applications may raise the problem of circular imports.</p>\n\n\n\n<p>Flask pushes the application context with each request. Therefore, during a request, functions have access to g and current_app to overcome the problem highlighted above.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The application context in Flask relates to the idea of a complete request/response cycle. It keeps a track of application-level data during a request or a CLI command. We make use of g and current_app proxies to achieve the same. There are situations when it is difficult to directly import the Flask app, such as [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4643"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4643"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4643/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4644,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4643/revisions/4644"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4643"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4643"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4643"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4645,
    "date": "2021-01-05T07:23:54",
    "date_gmt": "2021-01-05T07:23:54",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4645"
    },
    "modified": "2021-01-05T07:23:54",
    "modified_gmt": "2021-01-05T07:23:54",
    "slug": "in-what-ways-can-you-connect-to-a-database-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/in-what-ways-can-you-connect-to-a-database-in-flask/",
    "title": {
      "rendered": "In what ways can you connect to a database in Flask?"
    },
    "content": {
      "rendered": "\n<p>Flask works with most of the RDBMSs, such as PostgreSQL, SQLite, and MySQL. However, to connect with databases, we must make use of the Flask-SQLAlchemy extension.</p>\n\n\n\n<p>It makes database interaction and management easy during development without the need to write raw SQL queries. Moreover, raw SQL queries are prone to SQL injection attacks. For working with No-SQL data stores such as MongoDB, we can make use of the Flask-MongoEngine extension.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask works with most of the RDBMSs, such as PostgreSQL, SQLite, and MySQL. However, to connect with databases, we must make use of the Flask-SQLAlchemy extension. It makes database interaction and management easy during development without the need to write raw SQL queries. Moreover, raw SQL queries are prone to SQL injection attacks. For working [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4645"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4645"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4645/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4646,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4645/revisions/4646"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4645"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4645"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4645"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4647,
    "date": "2021-01-05T07:24:31",
    "date_gmt": "2021-01-05T07:24:31",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4647"
    },
    "modified": "2021-01-05T07:24:31",
    "modified_gmt": "2021-01-05T07:24:31",
    "slug": "how-to-create-a-restful-application-in-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-create-a-restful-application-in-flask/",
    "title": {
      "rendered": "How to create a RESTful application in Flask?"
    },
    "content": {
      "rendered": "\n<p>A RESTful application can be created in Flask with the help of many extensions.</p>\n\n\n\n<p><strong>Some proven Flask extensions are listed below.</strong></p>\n\n\n\n<ol><li>Flask-API</li><li>Flask-RESTful</li><li>Flask-RESTX</li><li>Connexion</li></ol>\n\n\n\n<p>However, we need to evaluate these extensions and see which one is more appropriate based on our project requirements and constraints.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A RESTful application can be created in Flask with the help of many extensions. Some proven Flask extensions are listed below. Flask-API Flask-RESTful Flask-RESTX Connexion However, we need to evaluate these extensions and see which one is more appropriate based on our project requirements and constraints.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4647"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4647"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4647/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4648,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4647/revisions/4648"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4647"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4647"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4647"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4649,
    "date": "2021-01-05T07:25:17",
    "date_gmt": "2021-01-05T07:25:17",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4649"
    },
    "modified": "2021-01-05T07:25:17",
    "modified_gmt": "2021-01-05T07:25:17",
    "slug": "how-to-debug-a-flask-application",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/how-to-debug-a-flask-application/",
    "title": {
      "rendered": "How to debug a Flask Application?"
    },
    "content": {
      "rendered": "\n<p>Flask comes with a development server, and the development server has a Debug Mode. The Debug mode can be set to true when we call the run method of the Flask Application object.</p>\n\n\n\n<p><strong>Given below is an example.</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>from flask import Flask app = Flask(__name__)app.run(host='127.0.0.1', debug=True)</code></pre>\n\n\n\n<p>However, we need to disable the debug mode before deploying the application on production to avoid full stack trace display in the browser. Such a stack trace can reveal a lot of essential details and is prone to exploitation by bad actors.</p>\n\n\n\n<p>Further, we can make use of the Flask-DebugToolbar extension for easy debugging in the browser. We can also make use of Python’s pdb module and the debugging statement import pdb;pdb.set_trace() to support the debugging process.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flask comes with a development server, and the development server has a Debug Mode. The Debug mode can be set to true when we call the run method of the Flask Application object. Given below is an example. However, we need to disable the debug mode before deploying the application on production to avoid full [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4649"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4649"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4649/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4650,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4649/revisions/4650"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4649"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4649"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4649"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4651,
    "date": "2021-01-05T07:25:59",
    "date_gmt": "2021-01-05T07:25:59",
    "guid": {
      "rendered": "http://python3.foobrdigital.com/?p=4651"
    },
    "modified": "2021-01-05T07:25:59",
    "modified_gmt": "2021-01-05T07:25:59",
    "slug": "what-type-of-applications-can-we-create-with-flask",
    "status": "publish",
    "type": "post",
    "link": "https://python3.foobrdigital.com/what-type-of-applications-can-we-create-with-flask/",
    "title": {
      "rendered": "What type of Applications can we create with Flask?"
    },
    "content": {
      "rendered": "\n<p>With Flask, we can create almost all types of web applications. We can create Single Page Application, RESTful API based Applications, SAS applications, Small to medium size websites, static websites, Microservices, and serverless apps.</p>\n\n\n\n<p>Flask is so versatile and flexible as it can be integrated with other technologies very quickly to achieve the same.&nbsp;<strong>For example,</strong>&nbsp;Flask can be combined with the NodeJS serverless, AWS lambda, and similar other third party services to build new-age systems.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>With Flask, we can create almost all types of web applications. We can create Single Page Application, RESTful API based Applications, SAS applications, Small to medium size websites, static websites, Microservices, and serverless apps. Flask is so versatile and flexible as it can be integrated with other technologies very quickly to achieve the same.&nbsp;For example,&nbsp;Flask [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [161],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4651"
        }
      ],
      "collection": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/comments?post=4651"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4651/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4652,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/posts/4651/revisions/4652"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/media?parent=4651"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/categories?post=4651"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://python3.foobrdigital.com/wp-json/wp/v2/tags?post=4651"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  }
]
