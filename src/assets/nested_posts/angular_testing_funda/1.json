[
  {
    "id": 4535,
    "date": "2021-02-25T10:51:33",
    "date_gmt": "2021-02-25T10:51:33",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4535"
    },
    "modified": "2021-02-25T10:51:33",
    "modified_gmt": "2021-02-25T10:51:33",
    "slug": "set-up-testing",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/set-up-testing/",
    "title": {
      "rendered": "Set up testing"
    },
    "content": {
      "rendered": "\n<p>The Angular CLI downloads and installs everything you need to test an Angular application with the\u00a0Jasmine test framework.</p>\n\n\n\n<p>The project you create with the CLI is immediately ready to test. Just run the\u00a0<code>ng test</code>\u00a0CLI command:</p>\n\n\n\n<pre class=\"wp-block-preformatted\">content_copy<code>ng test</code></pre>\n\n\n\n<p>The\u00a0<code>ng test</code>\u00a0command builds the app in\u00a0<em>watch mode</em>, and launches the\u00a0Karma test runner.</p>\n\n\n\n<p>The console output looks a bit like this:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>content_copy<code>10% building modules 1/1 modules 0 active\n...INFO &#91;karma]: Karma v1.7.1 server started at http://0.0.0.0:9876/\n...INFO &#91;launcher]: Launching browser Chrome ...\n...INFO &#91;launcher]: Starting browser Chrome\n...INFO &#91;Chrome ...]: Connected on socket ...\nChrome ...: Executed 3 of 3 SUCCESS (0.135 secs / 0.205 secs)</code></code></pre>\n\n\n\n<p>The last line of the log is the most important. It shows that Karma ran three tests that all passed.</p>\n\n\n\n<p>A Chrome browser also opens and displays the test output in the &#8220;Jasmine HTML Reporter&#8221; like this.</p>\n\n\n\n<figure class=\"wp-block-image\"><img src=\"https://angular.io/generated/images/guide/testing/initial-jasmine-html-reporter.png\" alt=\"Jasmine HTML Reporter in the browser\"/></figure>\n\n\n\n<p>Most people find this browser output easier to read than the console log. You can click on a test row to re-run just that test or click on a description to re-run the tests in the selected test group (&#8220;test suite&#8221;).</p>\n\n\n\n<p>Meanwhile, the&nbsp;<code>ng test</code>&nbsp;command is watching for changes.</p>\n\n\n\n<p>To see this in action, make a small change to&nbsp;<code>app.component.ts</code>&nbsp;and save. The tests run again, the browser refreshes, and the new test results appear.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The Angular CLI downloads and installs everything you need to test an Angular application with the\u00a0Jasmine test framework. The project you create with the CLI is immediately ready to test. Just run the\u00a0ng test\u00a0CLI command: content_copyng test The\u00a0ng test\u00a0command builds the app in\u00a0watch mode, and launches the\u00a0Karma test runner. The console output looks a bit [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4535"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4535"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4535/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4537,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4535/revisions/4537"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4535"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4535"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4535"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4532,
    "date": "2021-02-25T10:52:01",
    "date_gmt": "2021-02-25T10:52:01",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4532"
    },
    "modified": "2021-02-25T10:52:01",
    "modified_gmt": "2021-02-25T10:52:01",
    "slug": "configuration",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/configuration/",
    "title": {
      "rendered": "Configuration"
    },
    "content": {
      "rendered": "\n<p>The CLI takes care of Jasmine and Karma configuration for you.</p>\n\n\n\n<p>You can fine-tune many options by editing the&nbsp;<code>karma.conf.js</code>&nbsp;in the root folder of the project and the&nbsp;<code>test.ts</code>&nbsp;files in the&nbsp;<code>src/</code>&nbsp;folder.</p>\n\n\n\n<p>The&nbsp;<code>karma.conf.js</code>&nbsp;file is a partial Karma configuration file. The CLI constructs the full runtime configuration in memory, based on application structure specified in the&nbsp;<code>angular.json</code>&nbsp;file, supplemented by&nbsp;<code>karma.conf.js</code>.</p>\n\n\n\n<p>Search the web for more details about Jasmine and Karma configuration.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The CLI takes care of Jasmine and Karma configuration for you. You can fine-tune many options by editing the&nbsp;karma.conf.js&nbsp;in the root folder of the project and the&nbsp;test.ts&nbsp;files in the&nbsp;src/&nbsp;folder. The&nbsp;karma.conf.js&nbsp;file is a partial Karma configuration file. The CLI constructs the full runtime configuration in memory, based on application structure specified in the&nbsp;angular.json&nbsp;file, supplemented by&nbsp;karma.conf.js. Search [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4532"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4532"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4532/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4538,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4532/revisions/4538"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4532"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4532"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4532"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4534,
    "date": "2021-02-25T10:52:12",
    "date_gmt": "2021-02-25T10:52:12",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4534"
    },
    "modified": "2021-02-25T10:52:12",
    "modified_gmt": "2021-02-25T10:52:12",
    "slug": "other-test-frameworks",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/other-test-frameworks/",
    "title": {
      "rendered": "Other test frameworks"
    },
    "content": {
      "rendered": "\n<p>You can also unit test an Angular app with other testing libraries and test runners. Each library and runner has its own distinctive installation procedures, configuration, and syntax.</p>\n\n\n\n<p>Search the web to learn more.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>You can also unit test an Angular app with other testing libraries and test runners. Each library and runner has its own distinctive installation procedures, configuration, and syntax. Search the web to learn more.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4534"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4534"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4534/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4539,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4534/revisions/4539"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4534"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4534"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4534"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4536,
    "date": "2021-02-25T10:52:26",
    "date_gmt": "2021-02-25T10:52:26",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4536"
    },
    "modified": "2021-02-25T10:52:26",
    "modified_gmt": "2021-02-25T10:52:26",
    "slug": "test-file-name-and-location",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/test-file-name-and-location/",
    "title": {
      "rendered": "Test file name and location"
    },
    "content": {
      "rendered": "\n<p>Look inside the&nbsp;<code>src/app</code>&nbsp;folder.</p>\n\n\n\n<p>The CLI generated a test file for the&nbsp;<code>AppComponent</code>&nbsp;named&nbsp;<code>app.component.spec.ts</code>.</p>\n\n\n\n<p>The test file extension&nbsp;<strong>must be&nbsp;<code>.spec.ts</code></strong>&nbsp;so that tooling can identify it as a file with tests (AKA, a&nbsp;<em>spec</em>&nbsp;file).</p>\n\n\n\n<p>The&nbsp;<code>app.component.ts</code>&nbsp;and&nbsp;<code>app.component.spec.ts</code>&nbsp;files are siblings in the same folder. The root file names (<code>app.component</code>) are the same for both files.</p>\n\n\n\n<p>Adopt these two conventions in your own projects for&nbsp;<em>every kind</em>&nbsp;of test file.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Look inside the&nbsp;src/app&nbsp;folder. The CLI generated a test file for the&nbsp;AppComponent&nbsp;named&nbsp;app.component.spec.ts. The test file extension&nbsp;must be&nbsp;.spec.ts&nbsp;so that tooling can identify it as a file with tests (AKA, a&nbsp;spec&nbsp;file). The&nbsp;app.component.ts&nbsp;and&nbsp;app.component.spec.ts&nbsp;files are siblings in the same folder. The root file names (app.component) are the same for both files. Adopt these two conventions in your own projects for&nbsp;every [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4536"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4536"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4536/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4540,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4536/revisions/4540"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4536"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4536"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4536"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4529,
    "date": "2021-02-25T10:52:39",
    "date_gmt": "2021-02-25T10:52:39",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4529"
    },
    "modified": "2021-02-25T10:52:39",
    "modified_gmt": "2021-02-25T10:52:39",
    "slug": "place-your-spec-file-next-to-the-file-it-tests",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/place-your-spec-file-next-to-the-file-it-tests/",
    "title": {
      "rendered": "Place your spec file next to the file it tests"
    },
    "content": {
      "rendered": "\n<p>It&#8217;s a good idea to put unit test spec files in the same folder as the application source code files that they test:</p>\n\n\n\n<ul><li>Such tests are easy to find.</li><li>You see at a glance if a part of your application lacks tests.</li><li>Nearby tests can reveal how a part works in context.</li><li>When you move the source (inevitable), you remember to move the test.</li><li>When you rename the source file (inevitable), you remember to rename the test file.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>It&#8217;s a good idea to put unit test spec files in the same folder as the application source code files that they test: Such tests are easy to find. You see at a glance if a part of your application lacks tests. Nearby tests can reveal how a part works in context. When you move [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4529"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4529"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4529/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4541,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4529/revisions/4541"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4529"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4529"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4529"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4533,
    "date": "2021-02-25T10:52:52",
    "date_gmt": "2021-02-25T10:52:52",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4533"
    },
    "modified": "2021-02-25T10:52:52",
    "modified_gmt": "2021-02-25T10:52:52",
    "slug": "place-your-spec-files-in-a-test-folder",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/place-your-spec-files-in-a-test-folder/",
    "title": {
      "rendered": "Place your spec files in a test folder"
    },
    "content": {
      "rendered": "\n<p>Application integration specs can test the interactions of multiple parts spread across folders and modules. They don&#8217;t really belong to any part in particular, so they don&#8217;t have a natural home next to any one file.</p>\n\n\n\n<p>It&#8217;s often better to create an appropriate folder for them in the&nbsp;<code>tests</code>&nbsp;directory.</p>\n\n\n\n<p>Of course specs that test the test helpers belong in the&nbsp;<code>test</code>&nbsp;folder, next to their corresponding helper files.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Application integration specs can test the interactions of multiple parts spread across folders and modules. They don&#8217;t really belong to any part in particular, so they don&#8217;t have a natural home next to any one file. It&#8217;s often better to create an appropriate folder for them in the&nbsp;tests&nbsp;directory. Of course specs that test the test [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4533"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4533"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4533/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4542,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4533/revisions/4542"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4533"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4533"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4533"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4530,
    "date": "2021-02-25T10:53:04",
    "date_gmt": "2021-02-25T10:53:04",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4530"
    },
    "modified": "2021-02-25T10:53:04",
    "modified_gmt": "2021-02-25T10:53:04",
    "slug": "set-up-continuous-integration",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/set-up-continuous-integration/",
    "title": {
      "rendered": "Set up continuous integration"
    },
    "content": {
      "rendered": "\n<p>One of the best ways to keep your project bug-free is through a test suite, but it&#8217;s easy to forget to run tests all the time. Continuous integration (CI) servers let you set up your project repository so that your tests run on every commit and pull request.</p>\n\n\n\n<p>There are paid CI services like Circle CI and Travis CI, and you can also host your own for free using Jenkins and others. Although Circle CI and Travis CI are paid services, they are provided free for open source projects. You can create a public project on GitHub and add these services without paying. Contributions to the Angular repo are automatically run through a whole suite of Circle CI tests.</p>\n\n\n\n<p>This article explains how to configure your project to run Circle CI and Travis CI, and also update your test configuration to be able to run tests in the Chrome browser in either environment.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>One of the best ways to keep your project bug-free is through a test suite, but it&#8217;s easy to forget to run tests all the time. Continuous integration (CI) servers let you set up your project repository so that your tests run on every commit and pull request. There are paid CI services like Circle [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4530"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4530"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4530/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4543,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4530/revisions/4543"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4530"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4530"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4530"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4531,
    "date": "2021-02-25T10:53:43",
    "date_gmt": "2021-02-25T10:53:43",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4531"
    },
    "modified": "2021-02-25T10:53:43",
    "modified_gmt": "2021-02-25T10:53:43",
    "slug": "configure-project-for-circle-ci",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/configure-project-for-circle-ci/",
    "title": {
      "rendered": "Configure Project for Circle CI"
    },
    "content": {
      "rendered": "\n<p>Step 1: Create a folder called&nbsp;<code>.circleci</code>&nbsp;at the project root.</p>\n\n\n\n<p>Step 2: In the new folder, create a file called&nbsp;<code>config.yml</code>&nbsp;with the following content:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>content_copy<code>version: 2\njobs:\n  build:\n    working_directory: ~/my-project\n    docker:\n      - image: circleci/node:10-browsers\n    steps:\n      - checkout\n      - restore_cache:\n          key: my-project-{{ .Branch }}-{{ checksum \"package-lock.json\" }}\n      - run: npm install\n      - save_cache:\n          key: my-project-{{ .Branch }}-{{ checksum \"package-lock.json\" }}\n          paths:\n            - \"node_modules\"\n      - run: npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI\n      - run: npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js</code></code></pre>\n\n\n\n<p>This configuration caches\u00a0<code>node_modules/</code>\u00a0and uses\u00a0<code>npm run</code>\u00a0to run CLI commands, because\u00a0<code>@angular/cli</code>\u00a0is not installed globally. The double dash (<code>--</code>) is needed to pass arguments into the\u00a0<code>npm</code>\u00a0script.</p>\n\n\n\n<p>Step 3: Commit your changes and push them to your repository.</p>\n\n\n\n<p>Step 4:\u00a0Sign up for Circle CI\u00a0and\u00a0add your project. Your project should start building.</p>\n\n\n\n<ul><li>Learn more about Circle CI from\u00a0Circle CI documentation.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Step 1: Create a folder called&nbsp;.circleci&nbsp;at the project root. Step 2: In the new folder, create a file called&nbsp;config.yml&nbsp;with the following content: This configuration caches\u00a0node_modules/\u00a0and uses\u00a0npm run\u00a0to run CLI commands, because\u00a0@angular/cli\u00a0is not installed globally. The double dash (&#8211;) is needed to pass arguments into the\u00a0npm\u00a0script. Step 3: Commit your changes and push them to your [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4531"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4531"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4531/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4544,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4531/revisions/4544"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4531"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4531"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4531"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4528,
    "date": "2021-02-25T10:54:11",
    "date_gmt": "2021-02-25T10:54:11",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4528"
    },
    "modified": "2021-02-25T10:54:11",
    "modified_gmt": "2021-02-25T10:54:11",
    "slug": "configure-project-for-travis-ci",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/configure-project-for-travis-ci/",
    "title": {
      "rendered": "Configure project for Travis CI"
    },
    "content": {
      "rendered": "\n<p>Step 1: Create a file called&nbsp;<code>.travis.yml</code>&nbsp;at the project root, with the following content:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>content_copy<code>dist: trusty\nsudo: false\n\nlanguage: node_js\nnode_js:\n  - \"10\"\n\naddons:\n  apt:\n    sources:\n      - google-chrome\n    packages:\n      - google-chrome-stable\n\ncache:\n  directories:\n     - ./node_modules\n\ninstall:\n  - npm install\n\nscript:\n  - npm run test -- --no-watch --no-progress --browsers=ChromeHeadlessCI\n  - npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js</code></code></pre>\n\n\n\n<p>This does the same things as the CircleCI configuration, except that Travis doesn&#8217;t come with Chrome, so use Chromium instead.</p>\n\n\n\n<p>Step 2: Commit your changes and push them to your repository.</p>\n\n\n\n<p>Step 3:\u00a0Sign up for Travis CI\u00a0and\u00a0add your project. You&#8217;ll need to push a new commit to trigger a build.</p>\n\n\n\n<ul><li>Learn more about Travis CI testing from\u00a0Travis CI documentation.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Step 1: Create a file called&nbsp;.travis.yml&nbsp;at the project root, with the following content: This does the same things as the CircleCI configuration, except that Travis doesn&#8217;t come with Chrome, so use Chromium instead. Step 2: Commit your changes and push them to your repository. Step 3:\u00a0Sign up for Travis CI\u00a0and\u00a0add your project. You&#8217;ll need to [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4528"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4528"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4528/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4545,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4528/revisions/4545"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4528"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4528"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4528"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 4527,
    "date": "2021-02-25T10:55:02",
    "date_gmt": "2021-02-25T10:55:02",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=4527"
    },
    "modified": "2021-02-25T10:55:02",
    "modified_gmt": "2021-02-25T10:55:02",
    "slug": "configure-cli-for-ci-testing-in-chrome",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/configure-cli-for-ci-testing-in-chrome/",
    "title": {
      "rendered": "Configure CLI for CI testing in Chrome"
    },
    "content": {
      "rendered": "\n<p>When the CLI commands&nbsp;<code>ng test</code>&nbsp;and&nbsp;<code>ng e2e</code>&nbsp;are generally running the CI tests in your environment, you might still need to adjust your configuration to run the Chrome browser tests.</p>\n\n\n\n<p>There are configuration files for both the&nbsp;<a href=\"https://karma-runner.github.io/latest/config/configuration-file.html\">Karma JavaScript test runner</a>&nbsp;and&nbsp;<a href=\"https://www.protractortest.org/#/api-overview\">Protractor</a>&nbsp;end-to-end testing tool, which you must adjust to start Chrome without sandboxing.</p>\n\n\n\n<p>We&#8217;ll be using&nbsp;<a href=\"https://developers.google.com/web/updates/2017/04/headless-chrome#cli\">Headless Chrome</a>&nbsp;in these examples.</p>\n\n\n\n<ul><li>In the Karma configuration file,&nbsp;<code>karma.conf.js</code>, add a custom launcher called ChromeHeadlessCI below browsers:</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>content_copy<code>browsers: &#91;'ChromeHeadlessCI'],\ncustomLaunchers: {\n  ChromeHeadlessCI: {\n    base: 'ChromeHeadless',\n    flags: &#91;'--no-sandbox']\n  }\n},</code></code></pre>\n\n\n\n<ul><li>In the root folder of your e2e tests project, create a new file named&nbsp;<code>protractor-ci.conf.js</code>. This new file extends the original&nbsp;<code>protractor.conf.js</code>.</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>content_copy<code>const config = require('./protractor.conf').config;\n\nconfig.capabilities = {\n  browserName: 'chrome',\n  chromeOptions: {\n    args: &#91;'--headless', '--no-sandbox']\n  }\n};\n\nexports.config = config;</code></code></pre>\n\n\n\n<p>Now you can run the following commands to use the&nbsp;<code>--no-sandbox</code>&nbsp;flag:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>content_copy<code>ng test --no-watch --no-progress --browsers=ChromeHeadlessCI\nng e2e --protractor-config=e2e/protractor-ci.conf.js</code></code></pre>\n\n\n\n<p><strong>Note:</strong>\u00a0Right now, you&#8217;ll also want to include the\u00a0<code>--disable-gpu</code>\u00a0flag if you&#8217;re running on Windows. See\u00a0crbug.com/737678.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>When the CLI commands&nbsp;ng test&nbsp;and&nbsp;ng e2e&nbsp;are generally running the CI tests in your environment, you might still need to adjust your configuration to run the Chrome browser tests. There are configuration files for both the&nbsp;Karma JavaScript test runner&nbsp;and&nbsp;Protractor&nbsp;end-to-end testing tool, which you must adjust to start Chrome without sandboxing. We&#8217;ll be using&nbsp;Headless Chrome&nbsp;in these examples. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [240],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4527"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=4527"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4527/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 4546,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/4527/revisions/4546"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=4527"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=4527"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=4527"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  }
]
