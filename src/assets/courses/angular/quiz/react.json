[
	{
		"title" : "Everything in React is a _____________",
		"detail" : "",
		"output" : "Component",
		"options" : {
			"a" : "Module",
			"b" : "Component",
			"c" : "Package",
			"d" : "Class"
		},
		"correct": "B"
	},

		{
		"title" : "In which directory React Components are saved?",
		"detail" : "",
		"output" : "Inside js/components/",
		"options" : {
			"a" : "Inside js/components/",
			"b" : "Inside vendor/components/",
			"c" : "Inside vendor/components/",
			"d" : "Inside vendor/"
		},
		"correct": "A"
	},

		{
		"title" : "What is Babel?",
		"detail" : "",
		"output" : "Both Compiler and Transpilar",
		"options" : {
			"a" : "A transpiler.",
			"b" : "An interpreter",
			"c" : "A Compiler",
			"d" : "Both Compiler and Transpilar"
		},
		"correct": "D"
	},

		{
		"title" : "How many elements does a react component return?",
		"detail" : "",
		"output" : "Multiple Elements",
		"options" : {
			"a" : "1 Element",
			"b" : "2 Elements",
			"c" : "Multiple Elements",
			"d" : "None of the above"
		},
		"correct": "C"
	},

		{
		"title" : "What does the 'webpack' command do?",
		"detail" : "",
		"output" : "A module bundler",
		"options" : {
			"a" : "A module bundler",
			"b" : "Runs react local development server.",
			"c" : "Transpiles all the Javascript down into one file",
			"d" : "None of the above"
		},
		"correct": "A"
	},

		{
		"title" : "What is ReactJS?",
		"detail" : "",
		"output" : "A Library for building interaction interfaces",
		"options" : {
			"a" : "Server-side Framework",
			"b" : "User-interface framework",
			"c" : "A Library for building interaction interfaces",
			"d" : "None of the Above"
		},
		"correct": "C"
	},

		{
		"title" : "What are the limitations of ReactJS?",
		"detail" : "",
		"output" : "All of these",
		"options" : {
			"a" : "React is only for view layer of the app so we still need the help of other technologies to get a complete tooling set for development",
			"b" : "React is using inline templating and JSX. This can seem awkward to some developers",
			"c" : "The library of react is too large",
			"d" : "All of these"
		},
		"correct": "D"
	},

		{
		"title" : "How can you access the state of a component from inside of a member function?",
		"detail" : "",
		"output" : "this.values",
		"options" : {
			"a" : "this.getState()",
			"b" : "this.prototype.stateValue",
			"c" : "this.state",
			"d" : "this.values"
		},
		"correct": "D"
	},

	{
		"title" : "Props are __________ into other components",
		"detail" : "",
		"output" : "Methods",
		"options" : {
			"a" : "Injected",
			"b" : "Methods",
			"c" : "Both A and B",
			"d" : "All of these"
		},
		"correct": "B"
	},

		{
		"title" : "Which of the following API is a MUST for every ReactJS component?",
		"detail" : "",
		"output" : "renderComponent",
		"options" : {
			"a" : "getInitialState",
			"b" : "render",
			"c" : "renderComponent",
			"d" : "None of the Above"
		},
		"correct": "C"
	},

		{
		"title" : "What port is the default where the webpack-dev-server will run?",
		"detail" : "",
		"output" : "8080",
		"options" : {
			"a" : "3000",
			"b" : "3306",
			"c" : "8080",
			"d" : "None of the above"
		},
		"correct": "C"
	},

		{
		"title" : "In React what is used to pass data to a component from outside?",
		"detail" : "",
		"output" : "Props are used to pass data to a component from outside",
		"options" : {
			"a" : "setState",
			"b" : "props",
			"c" : "PropTypes",
			"d" : "render with arguments"
		},
		"correct": "B"
	},

		{
		"title" : "What is a react.js in MVC?",
		"detail" : "",
		"output" : "Controller",
		"options" : {
			"a" : "Model",
			"b" : "Controller",
			"c" : "Router",
			"d" : "Middleware"
		},
		"correct": "B"
	},

		{
		"title" : "ReactJS uses _____ to increase performance",
		"detail" : "",
		"output" : "Virtual DOM",
		"options" : {
			"a" : "Virtual DOM",
			"b" : "Original DOM",
			"c" : "Both 1 & 2",
			"d" : "None of the above"
		},
		"correct": "A"
	},
	


	
		{
			"title" : "Keys are given to a list of elements in react. These keys should be -",
			"detail" : "",
			"output" : "Unique among the siblings only",
			"options" : {
				"a" : "Unique in the DOM",
				"b" : "Do not requires to be unique",
				"c" : "Unique among the siblings only",
				"d" : "All of the above"
			},
			"correct": "C"
		},
	
			{
			"title" : "Which of the following is the correct data flow sequence of flux concept?",
			"detail" : "",
			"output" : "Action->Dispatcher->Store->View",
			"options" : {
				"a" : "Dispatcher->Action->Store->View",
				"b" : "Action->Dispatcher->Store->View",
				"c" : "Action->Dispatcher->View->Store",
				"d" : "Action->Store->Dispatcher->View"
			},
			"correct": "B"
		},
	
			{
			"title" : "What is the name of React.js Developer ?",
			"detail" : "",
			"output" : "Jordan Walke",
			"options" : {
				"a" : "Tim Lee",
				"b" : "Jordan Lee",
				"c" : "Jordan mike",
				"d" : "Jordan Walke"
			},
			"correct": "D"
		},
	
			{
			"title" : "Who Develop React.js?",
			"detail" : "",
			"output" : "Facebook",
			"options" : {
				"a" : "Google",
				"b" : "Apple",
				"c" : "Facebook",
				"d" : "Twitter"
			},
			"correct": "C"
		},
	
			{
			"title" : ".............. helps react for keeping their data unidirectional",
			"detail" : "",
			"output" : "Flux",
			"options" : {
				"a" : "JSX",
				"b" : "Flux",
				"c" : "Dom",
				"d" : "Props"
			},
			"correct": "B"
		},
	
			{
			"title" : "At the highest level, React components have lifecycle events that fall into",
			"detail" : "",
			"output" : "All of these",
			"options" : {
				"a" : "Initialization",
				"b" : "State/Property Updates",
				"c" : "Destruction",
				"d" : "All of these"
			},
			"correct": "D"
		},
	
			{
			"title" : "If you want to import just the Component from the React library, what syntax do you use?",
			"detail" : "",
			"output" : "import { Component } from 'react'",
			"options" : {
				"a" : "import React.Component from 'react'",
				"b" : "import [ Component ] from 'react'",
				"c" : "import Component from 'react'",
				"d" : "import { Component } from 'react'"
			},
			"correct": "D"
		},
	
			{
			"title" : "If a function component should always render the same way given the same props, what is a simple performance optimization available for it?",
			"detail" : "",
			"output" : "Wrap it in the React.memo higher-order component.",
			"options" : {
				"a" : "Wrap it in the React.memo higher-order component.",
				"b" : "Implement the useReducer Hook.",
				"c" : "Implement the shouldComponentUpdate lifecycle method.",
				"d" : "Implement the useMemo Hook."
			},
			"correct": "A"
		},
	
		{
			"title" : "How do you fix the syntax error that results from running this code?",
			"detail" : "",
			"output" : "Wrap the object in parentheses.",
			"options" : {
				"a" : "Wrap the object in parentheses.",
				"b" : "Call the function from another file.",
				"c" : "Replace the with an array",
				"d" : "Add a return statement before the first curly brace."
			},
			"correct": "A"
		},
	
			{
			"title" : "If you see the following import in a file, what is being used for state management in the component?\nimport React, {useState} from 'react';",
			"detail" : "",
			"output" : "React Hooks",
			"options" : {
				"a" : "stateful components",
				"b" : "class components",
				"c" : "math",
				"d" : "React Hooks"
			},
			"correct": "D"
		},
	
			{
			"title" : "Using object literal enhancement, you can put values back into an object. When you log person to the console, what is the output?\nconst name = 'Venkat';\nconst age = 30;\nconst person = { name, age };\nconsole.log(person);\n",
			"detail" : "",
			"output" : "{name: 'Venkat', age: 30}",
			"options" : {
				"a" : "{{name: 'Venkat', age: 30}} ",
				"b" : "{name: 'Venkat', age: 30}",
				"c" : "{person: 'Venkat', person: 30}}",
				"d" : "{person: {name: 'Venkat', age: 30}} "
			},
			"correct": "B"
		},
	
			{
			"title" : "How do you access a function fetch() from a h1 element in JSX?",
			"detail" : "",
			"output" : "<h1>{fetch()}</h1> ",
			"options" : {
				"a" : "<h1>{fetch()}</h1> ",
				"b" : "<h1>${fetch()}</h1> ",
				"c" : "<h1>{fetch}</h1> ",
				"d" : "<h1>${fetch}</h1> "
			},
			"correct": "A"
		},
	
			{
			"title" : "What happens when the following render() method executes?\nrender(){\nlet langs = [\"Ruby\",\"ES6\",\"Scala\"]\nreturn (<div>\n{langs.map(it => <p>{it}</p>)}\n</div>)\n}",
			"detail" : "",
			"output" : "Displays the list of languages in the array",
			"options" : {
				"a" : "Error. Cannot use direct JavaScript code in JSX",
				"b" : "Error. Should be replaced with a for..loop for correct output",
				"c" : "Displays the list of languages in the array",
				"d" : "Displays nothing"
			},
			"correct": "C"
		},
	
			{
			"title" : "How do you write an inline style specifying the font-size:12px and color:red; in JSX",
			"detail" : "",
			"output" : "style={{fontSize:'12px',color:'red'}}",
			"options" : {
				"a" : "style={{font-size:12,color:'red'}} ",
				"b" : "style={{fontSize:'12px',color:'red'}}",
				"c" : "style={fontSize:'12px',color:'red'} ",
				"d" : "style={{font-size:12px,color:'red'}} "
			},
			"correct": "B"
		},
	
			{
			"title" : "Which method in a React Component should you override to stop the component from updating?",
			"detail" : "",
			"output" : "shouldComponentUpdate",
			"options" : {
				"a" : "willComponentUpdate",
				"b" : "shouldComponentUpdate",
				"c" : "componentDidUpdate",
				"d" : "componentDidMount"
			},
			"correct": "B"
		},
	
			{
			"title" : "What happens when you call setState() inside render() method?",
			"detail" : "",
			"output" : "Stack overflow error",
			"options" : {
				"a" : "Repetitive output appears on the screen",
				"b" : "Nothing happens. Life goes on!",
				"c" : "Duplicate key error",
				"d" : "Stack overflow error"
			},
			"correct": "D"
		},
	
		
	
		
			{
				"title" : "React is a ______",
				"detail" : "",
				"output" : "Javascript library",
				"options" : {
					"a" : "Javascript library",
					"b" : "Javascript framework",
					"c" : "Both of above",
					"d" : "None of the above"
				},
				"correct": "A"
			},
		
				{
				"title" : "ReactJS covers _____",
				"detail" : "",
				"output" : "User Interface layer in an application",
				"options" : {
					"a" : "User Interface layer in an application",
					"b" : "Data layer in an application",
					"c" : "Both A and B",
					"d" : "None of the above"
				},
				"correct": "A"
			},
		
				{
				"title" : "Number of elements, a valid react component can return ",
				"detail" : "",
				"output" : "1",
				"options" : {
					"a" : "1",
					"b" : "2",
					"c" : "3",
					"d" : "4"
				},
				"correct": "A"
			},
		
				{
				"title" : "props in react can________",
				"detail" : "",
				"output" : "Not be changed in the component",
				"options" : {
					"a" : "Be changed inside the component",
					"b" : "Not be changed in the component",
					"c" : "Be changed in side other component",
					"d" : "None of the above"
				},
				"correct": "B"
			},
		
				{
				"title" : "What is the testing library most often associated with React?",
				"detail" : "",
				"output" : "Jest",
				"options" : {
					"a" : "Mocha",
					"b" : "Sinon",
					"c" : "Chai",
					"d" : "Jest"
				},
				"correct": "D"
			},
		
				{
				"title" : "What is state in react? ",
				"detail" : "",
				"output" : "Internal storage of the component",
				"options" : {
					"a" : "Internal storage of the component",
					"b" : "A prement storage",
					"c" : "Both A and B",
					"d" : "None of the above"
				},
				"correct": "A"
			},
		
				{
				"title" : "What will happen if you render an input element with disabled = {false} ",
				"detail" : "",
				"output" : "It will be rendered as enabled",
				"options" : {
					"a" : "It will be rendered as disabled",
					"b" : "It will be rendered as enabled",
					"c" : "It will not be rendered at all",
					"d" : "None of the above"
				},
				"correct": "B"
			},
		
				{
				"title" : "To get the first item from the array ('cooking') using array destructuring, how do you adjust this line?\nconst topics = ['cooking', 'art', 'history'];",
				"detail" : "",
				"output" : "const [first] = ['cooking', 'art', 'history'] ",
				"options" : {
					"a" : "const first = ['cooking', 'art', 'history'] ",
					"b" : "const [] = ['cooking', 'art', 'history'] ",
					"c" : "const [, first]['cooking', 'art', 'history'] ",
					"d" : "const [first] = ['cooking', 'art', 'history'] "
				},
				"correct": "D"
			},
		
			{
				"title" : "How do you handle passing through the component tree without having to pass props down manually at every level?",
				"detail" : "",
				"output" : "React Context",
				"options" : {
					"a" : "React Send",
					"b" : "React Pinpoint",
					"c" : "React Router",
					"d" : "React Context"
				},
				"correct": "D"
			},
		
				{
				"title" : "What should the console read when the following code is run?\nconst [, , animal] = ['Horse', 'Mouse', 'Cat'];\nconsole.log(animal);",
				"detail" : "",
				"output" : "Cat",
				"options" : {
					"a" : "Horse",
					"b" : "Cat ",
					"c" : "Mouse",
					"d" : "None of the above"
				},
				"correct": "B"
			}
]