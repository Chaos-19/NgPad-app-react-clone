[
	{
		"title" : "Which of the following is true about Laravel?",
		"detail" : "",
		"output" : "Laravel is an open-source PHP framework, which is robust and easy to understand.",
		"options" : {
			"a" : " Laravel is an open-source PHP framework",
			"b" : "Laravel is robust",
			"c" : " Laravel is easy to understand",
			"d" : "All of the above"
		},
		"correct": "D"
	},

		{
		"title" : "ORM (Object Relational Mapper) and ActiveRecord implementation called?",
		"detail" : "",
		"output" : "ORM (Object Relational Mapper) and ActiveRecord implementation called Eloquent.",
		"options" : {
			"a" : "Eloquent",
			"b" : "Query Builder",
			"c" : "Schema Builder",
			"d" : "Blade Template"
		},
		"correct": "A"
	},

		{
		"title" : " ______________ acts as a bridge between a request and a response.",
		"detail" : "",
		"output" : " Middleware acts as a bridge between a request and a response.",
		"options" : {
			"a" : " Routing",
			"b" : "Middleware",
			"c" : "Namespaces",
			"d" : "Request"
		},
		"correct": "B"
	},

		{
		"title" : "How many types of Middleware in Laravel?",
		"detail" : "",
		"output" : "There are two types of Middleware in Laravel : Global Middleware and Route Middleware.",
		"options" : {
			"a" : "2",
			"b" : "3",
			"c" : "4",
			"d" : "5"
		},
		"correct": " A"
	},

		{
		"title" : "________________ can be defined as a class of elements in which each element has a unique name to that associated class.",
		"detail" : "",
		"output" : " Namespaces can be defined as a class of elements in which each element has a unique name to that associated class.",
		"options" : {
			"a" : "Routing",
			"b" : "Cookie",
			"c" : "Namespaces",
			"d" : "Request"
		},
		"correct": "C"
	},

		{
		"title" : " In the MVC framework, the letter 'C' stands for?",
		"detail" : "",
		"output" : "In the MVC framework, the letter ‘C’ stands for Controller. It acts as a directing traffic between Views and Models. In this chapter, you will learn about Controllers in Laravel.",
		"options" : {
			"a" : "Cookie",
			"b" : "Configuration",
			"c" : "command prompt",
			"d" : "Controller"
		},
		"correct": " D"
	},

		{
		"title" : "Cookie can be created by global cookie helper of Laravel.",
		"detail" : "",
		"output" : "Cookie can be created by global cookie helper of Laravel. It is an instance of SymfonyComponentHttpFoundationCookie.",
		"options" : {
			"a" : "TRUE",
			"b" : "FALSE",
			"c" : "Can be true or false",
			"d" : "Can not say"
		},
		"correct": "A"
	},

		{
		"title" : "How many arguments cookie() method will take?",
		"detail" : "",
		"output" : "Cookie() method will take 3 arguments. First argument is the name of the cookie, second argument is the value of the cookie and the third argument is the duration of the cookie after which the cookie will get deleted automatically.",
		"options" : {
			"a" : "2",
			"b" : "4",
			"c" : "1",
			"d" : "3"
		},
		"correct": "D"
	},

	{
		"title" : "Which method will automatically convert the array into appropriate json response?",
		"detail" : "",
		"output" : "JSON response can be sent using the json method. This method will automatically set the Content-Type header to application/json. The json method will automatically convert the array into appropriate json response.",
		"options" : {
			"a" : " application.json",
			"b" : " json",
			"c" : " routes",
			"d" : " test"
		},
		"correct": "B"
	},

		{
		"title" : "Which version introduces the concept of using Blade?",
		"detail" : "",
		"output" : "Laravel 5.1 introduces the concept of using Blade, a templating engine to design a unique layout. ",
		"options" : {
			"a" : " Laravel 2.1",
			"b" : "Laravel 3.1",
			"c" : "Laravel 4.1",
			"d" : "Laravel 5.1"
		},
		"correct": "D"
	},

		{
		"title" : "Command line interface used in Laravel is called?",
		"detail" : "",
		"output" : "Command line interface used in Laravel is called Artisan.",
		"options" : {
			"a" : "composer",
			"b" : "Artisan",
			"c" : "Symphony",
			"d" : "ORM"
		},
		"correct": "B"
	},

		{
		"title" : " Laravel uses ___________ to connect to an existing session and general-purpose cache",
		"detail" : "",
		"output" : " Laravel uses Redis to connect to an existing session and general-purpose cache. Redis interacts with session directly.",
		"options" : {
			"a" : "Queues",
			"b" : "Cron",
			"c" : "Redis",
			"d" : "Command Bus"
		},
		"correct": "C"
	},

		{
		"title" : "Which command is used to create Middleware?",
		"detail" : "",
		"output" : "Middleware can be created by executing the following command : php artisan make:middleware <middleware-name>",
		"options" : {
			"a" : " php make:middleware <middleware-name>",
			"b" : "php artisan middleware <middleware-name>",
			"c" : " php middleware <middleware-name>",
			"d" : "php artisan make:middleware <middleware-name>"
		},
		"correct": "D"
	},

		{
		"title" : "The _______________ will run on every HTTP request of the application",
		"detail" : "",
		"output" : "The Global Middleware will run on every HTTP request of the application, whereas the Route Middleware will be assigned to a specific route.",
		"options" : {
			"a" : "Global Middleware",
			"b" : "Route Middleware",
			"c" : "Both A and B",
			"d" : "None of the above"
		},
		"correct": "A"
	},

		{
		"title" : " Which keyword allows the developers to shorten the namespace?",
		"detail" : "",
		"output" : "The use keyword allows the developers to shorten the namespace.",
		"options" : {
			"a" : "extend",
			"b" : "use",
			"c" : "artisan",
			"d" : "class"
		},
		"correct": "B"
	},

		{
		"title" : "Execute the below command to create a new controller called?",
		"detail" : "",
		"output" : "Execute the below command to create a new controller called UriController.\nphp artisan make:controller UriController –plain",
		"options" : {
			"a" : "UrlController",
			"b" : "pathController",
			"c" : "UriController",
			"d" : "routeController"
		},
		"correct": "C"
	},




    {
		"title" : "The cookie can be attached to the response using the ?",
		"detail" : "",
		"output" : "The cookie can be attached to the response using the withCookie() method. Create a response instance of IlluminateHttpResponse class to call the withCookie() method. Cookie generated by the Laravel are encrypted and signed and it can’t be modified or read by the client.",
		"options" : {
			"a" : " isCookie() method",
			"b" : "withCookie() method",
			"c" : " getCookie() method",
			"d" : "putCookie() method"
		},
		"correct": "B"
	},

		{
		"title" : "By default, all cookies generated by Laravel are encrypted and signed so that they can not be modified or read by the client.",
		"detail" : "",
		"output" : " By default, all cookies generated by Laravel are encrypted and signed so that they can not be modified or read by the client.",
		"options" : {
			"a" : "TRUE",
			"b" : "FALSE",
			"c" : "Can be true or false",
			"d" : "Can not say"
		},
		"correct": "A"
	},

		{
		"title" : " In MVC framework, the letter 'V' stands for Value.",
		"detail" : "",
		"output" : " In MVC framework, the letter “V” stands for Views. It separates the application logic and the presentation logic.",
		"options" : {
			"a" : " TRUE",
			"b" : "FALSE",
			"c" : "Can be true or false",
			"d" : "Can not say"
		},
		"correct": "B"
	},

		{
		"title" : " Laravel uses the Blade @extends directive for defining the child elements",
		"detail" : "",
		"output" : "True, Laravel uses the Blade @extends directive for defining the child elements.",
		"options" : {
			"a" : "TRUE",
			"b" : "FALSE",
			"c" : "Can be true or false",
			"d" : "Can not say"
		},
		"correct": "A"
	}

	

]