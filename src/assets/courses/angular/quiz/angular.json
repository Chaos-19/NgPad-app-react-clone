[
	{
		"title" : "Which of the following is correct about TypeScript?",
		"detail" : "",
		"output" : "All of the above.",
		"options" : {
			"a" : "Angular is based on TypeScript.",
			"b" : "This is a superset of JavaScript.",
			"c" : "TypeScript is maintained by Microsoft.",
			"d" : "All of the above."
		},
		"correct": "D"
	},

		{
		"title" : "What is .subscribe?",
		"detail" : "",
		"output" : "Both",
		"options" : {
			"a" : "Streams data in asynchronously",
			"b" : "Streams data in synchronously",
			"c" : "Both",
			"d" : "None of above"
		},
		"correct": "C"
	},

		{
		"title" : "What does AOT stand for?",
		"detail" : "",
		"output" : "Ahead-Of-Time Compilation",
		"options" : {
			"a" : "Ahead-Of-Time Compilation",
			"b" : "Angular Object Templates",
			"c" : "Both",
			"d" : "None of above"
		},
		"correct": "A"
	},

		{
		"title" : "Which of the following is not a hook application life cycle?",
		"detail" : "",
		"output" : "ngViewStart",
		"options" : {
			"a" : "ngOnChanges",
			"b" : "ngViewStart",
			"c" : "ngOnInit",
			"d" : "None of the above"
		},
		"correct": "B"
	},

		{
		"title" : "Router is part of which of the following module?",
		"detail" : "",
		"output" : "@angular/router",
		"options" : {
			"a" : "@angular/core",
			"b" : "@angular/router",
			"c" : "Both",
			"d" : "None of the above"
		},
		"correct": "B"
	},

		{
		"title" : "RxJS can be used for?",
		"detail" : "",
		"output" : "Both",
		"options" : {
			"a" : "Browser",
			"b" : "Server Side",
			"c" : "Both",
			"d" : "None of the above"
		},
		"correct": "C"
	},

		{
		"title" : "Which angular decorator allows us to define the pipe name that is globally available for use in any template in the across application?",
		"detail" : "",
		"output" : "Pipe",
		"options" : {
			"a" : "pipeName",
			"b" : "pipeDeco",
			"c" : "Pipe",
			"d" : "None of the above"
		},
		"correct": "C"
	},

		{
		"title" : "What is the decorator used for configuring your module class?",
		"detail" : "",
		"output" : "@NgModule",
		"options" : {
			"a" : "@NgModule",
			"b" : "@NgApp",
			"c" : "Both",
			"d" : "None of the above"
		},
		"correct": "A"
	},

	{
		"title" : "What is used .angular-cli.json",
		"detail" : "",
		"output" : "Used to configure your angular 2 project",
		"options" : {
			"a" : "Used to link external files",
			"b" : "Used to configure your angular 2 project",
			"c" : "used to install required project packages",
			"d" : "None of the above"
		},
		"correct": "B"
	},

		{
		"title" : "Which file is responsible for startup of angular 2 project ?",
		"detail" : "",
		"output" : "main.ts",
		"options" : {
			"a" : "main.ts",
			"b" : "index.js",
			"c" : "app.ts",
			"d" : "angular.cli.json"
		},
		"correct": "A"
	},

		{
		"title" : "Which of the following is the correct way to apply a filter?",
		"detail" : "",
		"output" : "Property-value | filter",
		"options" : {
			"a" : "Property-value | filter",
			"b" : "Property-value || filter",
			"c" : "Property-value && filter",
			"d" : "None of the above"
		},
		"correct": "A"
	},

		{
		"title" : "Interpolation in angular 2 is done using",
		"detail" : "",
		"output" : "{{}}",
		"options" : {
			"a" : "{{}}",
			"b" : "{{{}}}",
			"c" : "{{|var}}",
			"d" : "!!!!"
		},
		"correct": "A"
	},

		{
		"title" : "Which of the following filter is used to convert input to all uppercase?",
		"detail" : "",
		"output" : "uppercase",
		"options" : {
			"a" : "upper",
			"b" : "uppercase",
			"c" : "toUpper",
			"d" : "None of the above"
		},
		"correct": "B"
	},

		{
		"title" : "Which of the following is not a hook in Angular 2 application life cycle.",
		"detail" : "",
		"output" : "ngViewStart",
		"options" : {
			"a" : "ngOnInit",
			"b" : "ngOnChanges",
			"c" : "ngAfterViewInit",
			"d" : "ngViewStart"
		},
		"correct": "D"
	},
	


	{
		"title" : "Which of the following service has Angular 2, that allows us to dynamically load a component in a certain position on the page?",
		"detail" : "",
		"output" : "DynamicComponentLoader",
		"options" : {
			"a" : "DynamicComponentLoader",
			"b" : "DynamicControlLoader",
			"c" : "DynamicControllerLoader",
			"d" : "None of the above"
		},
		"correct": "A"
	},

		{
		"title" : "Which of the following option is using Angular 2 to detect changes.",
		"detail" : "",
		"output" : "zone.js",
		"options" : {
			"a" : "Scope.js",
			"b" : "zone$.js",
			"c" : "zone.js",
			"d" : "zones.js"
		},
		"correct": "C"
	},

		{
		"title" : "Needs cleanup step before compiling",
		"detail" : "",
		"output" : "Detect error at build time",
		"options" : {
			"a" : "Need to maintain AOT version of bootstrap file",
			"b" : "Works only with HTML and CSS",
			"c" : "Detect error at build time",
			"d" : "None of the above"
		},
		"correct": "C"
	},

		{
		"title" : "Which of the following is not a feature of Angular 2?",
		"detail" : "",
		"output" : "Multithread",
		"options" : {
			"a" : "Components",
			"b" : "Multithread",
			"c" : "TypeScript",
			"d" : "Services"
		},
		"correct": "B"
	},

		{
		"title" : "To start working with Angular 2, we need to install the _____________components.",
		"detail" : "",
		"output" : "All of the above",
		"options" : {
			"a" : "Npm",
			"b" : "Editor",
			"c" : "GIT",
			"d" : "All of the above"
		},
		"correct": "D"
	},

		{
		"title" : "Which of the following option is correct about tsconfig.json?",
		"detail" : "",
		"output" : "This file is used to give the options about TypeScript used for the Angular JS project.",
		"options" : {
			"a" : "This file contains information about Angular 2 project.",
			"b" : "This file contains the system files required for Angular JS application.",
			"c" : "This file is used to give the options about TypeScript used for the Angular JS project.",
			"d" : "All of the above"
		},
		"correct": "C"
	},

		{
		"title" : "How does Angular 4 improved error handling, when an error is caused by something in a template?",
		"detail" : "",
		"output" : "By creating flattened versions of Angular modules",
		"options" : {
			"a" : "By enabling TypeScript's StrictNullChecks",
			"b" : "By creating flattened versions of Angular modules",
			"c" : "By generating source maps in terms of original template",
			"d" : "None of the above"
		},
		"correct": "B"
	},

		{
		"title" : "Observables help you manage . . . . . . . . data.",
		"detail" : "",
		"output" : "asynchronous",
		"options" : {
			"a" : "synchronous",
			"b" : "asynchronous",
			"c" : "Both  ( synchronous & asynchronous )",
			"d" : "None of the above"
		},
		"correct": "B"
	},

	{
		"title" : "Where would you put it?",
		"detail" : "",
		"output" : "In the Injectable decorator",
		"options" : {
			"a" : "In the Component",
			"b" : "In the Template",
			"c" : "In the Injectable decorator",
			"d" : "In the module"
		},
		"correct": "C"
	},

		{
		"title" : "How would you display a list of Employees on a webpage along with where they were in the list?",
		"detail" : "",
		"output" : "Loop through and print the index and the employee",
		"options" : {
			"a" : "Loop through and print the index",
			"b" : "Loop through and print the employees",
			"c" : "Pass both the index and the employee to a web service",
			"d" : "Loop through and print the index and the employee"
		},
		"correct": "D"
	},

		{
		"title" : "If you chain multiple pipes together, they are executed",
		"detail" : "",
		"output" : "in the order in which you specify them",
		"options" : {
			"a" : "in parallel",
			"b" : "LIFO order",
			"c" : "in the order in which you specify them",
			"d" : "None of the above"
		},
		"correct": "C"
	},

		{
		"title" : "The number pipe is location sensitive, which means that the same format argument will produce differently formatted results based on the . . . . . . .",
		"detail" : "",
		"output" : "",
		"options" : {
			"a" : "user's format setting",
			"b" : "user's locale setting",
			"c" : "user's currency setting",
			"d" : "All of the above"
		},
		"correct": "B"
	},

		{
		"title" : "How would you retrieve a list of items from a server's URL?",
		"detail" : "",
		"output" : "Create a URL transaction",
		"options" : {
			"a" : "Create a URL transaction",
			"b" : "Use the HTTP get method",
			"c" : "Create a get SQL statement",
			"d" : "Use an HTTP package"
		},
		"correct": "A"
	},

		{
		"title" : "Which of the following is not built-in pipe in Angular?",
		"detail" : "",
		"output" : "DataPipe",
		"options" : {
			"a" : "DatePipe",
			"b" : "CurrencyPipe",
			"c" : "DataPipe",
			"d" : "PercentPipe"
		},
		"correct": "C"
	},

		{
		"title" : "How would you debug and evaluate the response of the http.get function (using HttpClient) using a debugger?",
		"detail" : "",
		"output" : "Place a breakpoint inside one of the functions inside the pipe call",
		"options" : {
			"a" : "You cannot place breakpoints on asynchronous operators",
			"b" : "Place a breakpoint on the function that calls the http.get",
			"c" : "Place a breakpoint on the http.get",
			"d" : "Place a breakpoint inside one of the functions inside the pipe call"
		},
		"correct": "D"
	},

		{
		"title" : "What does this syntax do? routerLink='/crisis-center'",
		"detail" : "",
		"output" : "It navigates to the component with a path matching the assigned string",
		"options" : {
			"a" : "It navigates to the component with a name matching the assigned string",
			"b" : "It links a route to a service by matching the assigned string to a service class name",
			"c" : "It links a route with data by matching the assigned string to a property name",
			"d" : "It navigates to the component with a path matching the assigned string"
		},
		"correct": "D"
	},



	{
		"title" : "What is the correct syntax to associate an external template file orders.component.html to an OrdersComponent , when both are in the same orders/ folder?",
		"detail" : "",
		"output" : "@Component({\ntemplateUrl: './orders.component.html'\n })",
		"options" : {
			"a" : "@Component({\ntemplateUrl: './orders.component.html'\n })",
			"b" : "@Component({\ntemplate: './orders.component.html\n})",
			"c" : "@Component({\n templateUrl: './orders/orders.component.html'\n})",
			"d" : "\n@Component({\ntemplate: `\n./orders/orders.component.html`\n})"
		},
		"correct": "A"
	},

		{
		"title" : "The purpose of the providers array of an Angular module is to define the set of:",
		"detail" : "",
		"output" : "objects available for dependency injection.",
		"options" : {
			"a" : "libraries used by the application including Angular system and third-party libraries.",
			"b" : "objects available for dependency injection.",
			"c" : "components that the application provides to other parts of the application.",
			"d" : "components, custom directives, and custom pipes."
		},
		"correct": "B"
	},

	{
		"title" : "What command will create a new Angular app with a root routing module?",
		"detail" : "",
		"output" : "ng new my-dream-app --routing",
		"options" : {
			"a" : "ng new my-dream-app --routing",
			"b" : "ng new my-dream-app --module",
			"c" : "ng generate my-dream-app --routing",
			"d" : "ng generate my-dream-app"
		},
		"correct": "A"
	},

		{
		"title" : "You apply a style selector in a component's CSS file. Which matching elements will be affected?",
		"detail" : "",
		"output" : "All matching elements in the component, only",
		"options" : {
			"a" : "All matching elements in the application",
			"b" : "All matching elements in the component and its child components",
			"c" : "All matching elements in the module",
			"d" : "All matching elements in the component, only"
		},
		"correct": "D"
	},

		{
		"title" : "How would you write code to modify the response from an http.get ?",
		"detail" : "",
		"output" : "Using the map function inside of the pipe operator chained to the http.get",
		"options" : {
			"a" : "Using the modify operator chained to the http.get",
			"b" : "Using the map function inside of the pipe operator chained to the http.get",
			"c" : "Using the transform operator chained to the http.get",
			"d" : "Subscribing to the http.get and setting the response to a local variable"
		},
		"correct": "B"
	},

		{
		"title" : "Where would the following code likely be found in an Angular application? routerLink='/crisis-center'",
		"detail" : "",
		"output" : "In the template",
		"options" : {
			"a" : "In the component metadata",
			"b" : "In a service",
			"c" : "In the template",
			"d" : "In the component class"
		},
		"correct": "C"
	},

		{
		"title" : "What is a routerOutlet?",
		"detail" : "",
		"output" : "A directive defined in the HTML indicating where a route's view should display",
		"options" : {
			"a" : "A directive defined in the HTML identifying the route to activate",
			"b" : "A directive defined in the HTML indicating where a route's view should display",
			"c" : "A decorator defining the template to display when a route is activated",
			"d" : "A property of a component class used to activate a route"
		},
		"correct": "B"
	},

		{
		"title" : "According to the Angular Style Guide, what type of code should a component delegate to a service?",
		"detail" : "",
		"output" : "Complex logic",
		"options" : {
			"a" : "Event handlers",
			"b" : "Complex logic",
			"c" : "DOM manipulation",
			"d" : "Debugging logic"
		},
		"correct": "B"
	},

		{
		"title" : "How do you load an NgModule into its own bundle?",
		"detail" : "",
		"output" : "Use lazy loading with the route that leads to the NgModule",
		"options" : {
			"a" : "Use lazy loading with the route that leads to the NgModule",
			"b" : "Add a route to each component in the NgModule",
			"c" : "Tell the route to point to the symbol of the NgModule",
			"d" : "ng build --lazy"
		},
		"correct": "A"
	},

		{
		"title" : "What advantage does AOT give your app with regard to compilation?",
		"detail" : "",
		"output" : "Precompiles at build time, instead of in the browser",
		"options" : {
			"a" : "Precompiles when the code is served, instead of in the browser",
			"b" : "Precompiles at build time, instead of in the browser",
			"c" : "Tree shakes all unused code when the app is served",
			"d" : "Compiles in the browser"
		},
		"correct": "B"
	}


]