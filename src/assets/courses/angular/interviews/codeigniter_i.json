[
  {
    "id": 3536,
    "date": "2021-01-14T11:16:38",
    "date_gmt": "2021-01-14T11:16:38",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3536"
    },
    "modified": "2021-01-14T11:16:38",
    "modified_gmt": "2021-01-14T11:16:38",
    "slug": "what-is-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-is-codeigniter/",
    "title": {
      "rendered": "What is Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>Codeigniter based on the MVC pattern is an open sourced framework which develops websites for PHP.  </p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Codeigniter based on the MVC pattern is an open sourced framework which develops websites for PHP.  </p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3536"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3536"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3536/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3537,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3536/revisions/3537"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3536"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3536"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3536"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3538,
    "date": "2021-01-14T11:17:20",
    "date_gmt": "2021-01-14T11:17:20",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3538"
    },
    "modified": "2021-01-14T11:17:20",
    "modified_gmt": "2021-01-14T11:17:20",
    "slug": "what-are-hooks-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-are-hooks-in-codeigniter/",
    "title": {
      "rendered": "What are Hooks in Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>Hooks are a feature in codeigniter which help the user to change the inner working without having to change the core files. They are represented by application/config/hooks.php.file. Hooks are more often to be used in executing a script with a particular path within codeigniter.  </p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Hooks are a feature in codeigniter which help the user to change the inner working without having to change the core files. They are represented by application/config/hooks.php.file. Hooks are more often to be used in executing a script with a particular path within codeigniter.  </p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3538"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3538"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3538/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3539,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3538/revisions/3539"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3538"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3538"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3538"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3544,
    "date": "2021-01-14T11:19:52",
    "date_gmt": "2021-01-14T11:19:52",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3544"
    },
    "modified": "2021-01-14T11:19:52",
    "modified_gmt": "2021-01-14T11:19:52",
    "slug": "what-is-routing-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-is-routing-in-codeigniter/",
    "title": {
      "rendered": "What is Routing in Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>Routing is defined as serving PHP files in an alternative way rather than accessing it from the browser. This allows the user to gain unlimited freedom in customizing the default URL pattern to fit his own requirement.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Routing is defined as serving PHP files in an alternative way rather than accessing it from the browser. This allows the user to gain unlimited freedom in customizing the default URL pattern to fit his own requirement.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3544"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3544"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3544/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3545,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3544/revisions/3545"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3544"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3544"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3544"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3546,
    "date": "2021-01-14T11:20:24",
    "date_gmt": "2021-01-14T11:20:24",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3546"
    },
    "modified": "2021-01-14T11:20:24",
    "modified_gmt": "2021-01-14T11:20:24",
    "slug": "what-are-the-security-parameters-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-are-the-security-parameters-in-codeigniter/",
    "title": {
      "rendered": "What are the Security Parameters in Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>To prevent hacking and other malicious activities codigniter applies a cross site scripting hack filter which will automatically start to filter all post and cookie data while comparing it to existing methods that are used to trigger javascript and once an anomaly is detected it is automatically converted into character entries.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To prevent hacking and other malicious activities codigniter applies a cross site scripting hack filter which will automatically start to filter all post and cookie data while comparing it to existing methods that are used to trigger javascript and once an anomaly is detected it is automatically converted into character entries.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3546"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3546"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3546/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3547,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3546/revisions/3547"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3546"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3546"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3546"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3548,
    "date": "2021-01-14T11:44:02",
    "date_gmt": "2021-01-14T11:44:02",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3548"
    },
    "modified": "2021-01-14T11:44:02",
    "modified_gmt": "2021-01-14T11:44:02",
    "slug": "how-to-do-you-link-images-from-a-view-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-to-do-you-link-images-from-a-view-in-codeigniter/",
    "title": {
      "rendered": "How to Do You Link Images From a View in Codeigniter?"
    },
    "content": {
      "rendered": "\n<p>To link images from a view in a codeigniter first use an absolute path to the resources required and link the image from a view in codeigniter /css/styles.css /js/query.php /img/news/566.gpg  </p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To link images from a view in a codeigniter first use an absolute path to the resources required and link the image from a view in codeigniter /css/styles.css /js/query.php /img/news/566.gpg  </p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3548"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3548"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3548/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3549,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3548/revisions/3549"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3548"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3548"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3548"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3550,
    "date": "2021-01-14T11:44:40",
    "date_gmt": "2021-01-14T11:44:40",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3550"
    },
    "modified": "2021-01-14T11:44:40",
    "modified_gmt": "2021-01-14T11:44:40",
    "slug": "what-is-an-inhibitor-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-is-an-inhibitor-in-codeigniter/",
    "title": {
      "rendered": "What is an Inhibitor in Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>Inhibitor is a specialist class in codeigniter which primarily functions as a means to combat or handle errors and is primarily comprised of functions such as set_exception_handler set_error_handler register_shutdown_function which are useful in handling parse errors exceptions and fatal errors.  </p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Inhibitor is a specialist class in codeigniter which primarily functions as a means to combat or handle errors and is primarily comprised of functions such as set_exception_handler set_error_handler register_shutdown_function which are useful in handling parse errors exceptions and fatal errors.  </p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3550"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3550"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3550/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3551,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3550/revisions/3551"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3550"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3550"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3550"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3552,
    "date": "2021-01-14T11:45:42",
    "date_gmt": "2021-01-14T11:45:42",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3552"
    },
    "modified": "2021-01-14T11:45:42",
    "modified_gmt": "2021-01-14T11:45:42",
    "slug": "what-is-the-default-url-pattern-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-is-the-default-url-pattern-in-codeigniter/",
    "title": {
      "rendered": "What is the Default URL Pattern in Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>The default URL patter in codeigniter is split up into four functions which start with the server name,controller class controller name and finally function parameters To accesses the URL pattern in codeigniter you have to use a URL helper.  </p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The default URL patter in codeigniter is split up into four functions which start with the server name,controller class controller name and finally function parameters To accesses the URL pattern in codeigniter you have to use a URL helper.  </p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3552"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3552"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3552/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3553,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3552/revisions/3553"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3552"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3552"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3552"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3554,
    "date": "2021-01-14T11:46:21",
    "date_gmt": "2021-01-14T11:46:21",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3554"
    },
    "modified": "2021-01-14T11:46:21",
    "modified_gmt": "2021-01-14T11:46:21",
    "slug": "how-can-you-extend-the-class-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-can-you-extend-the-class-in-codeigniter/",
    "title": {
      "rendered": "How Can You Extend the Class in Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>To extend a native input class the user must first build a file which is to be named application/core/MY_Input.php And then proceed to declare the class with Class MY_Input extends CI_Input { }  </p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To extend a native input class the user must first build a file which is to be named application/core/MY_Input.php And then proceed to declare the class with Class MY_Input extends CI_Input { }  </p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3554"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3554"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3554/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3555,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3554/revisions/3555"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3554"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3554"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3554"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3556,
    "date": "2021-01-14T11:47:05",
    "date_gmt": "2021-01-14T11:47:05",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3556"
    },
    "modified": "2021-01-14T11:47:05",
    "modified_gmt": "2021-01-14T11:47:05",
    "slug": "how-do-you-prevent-codeigniter-from-crsf",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-do-you-prevent-codeigniter-from-crsf/",
    "title": {
      "rendered": "How Do You Prevent Codeigniter From CRSF ?"
    },
    "content": {
      "rendered": "\n<p>The most common way to protect codeigniter form CRSF is to use a hidden field in every form of the website. This hidden field will be used as a CRSF token which in a random value which changes each and every HTTP request sent. When inserted into a website form it is saved in the user session if the request is the same it becomes legit.  </p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The most common way to protect codeigniter form CRSF is to use a hidden field in every form of the website. This hidden field will be used as a CRSF token which in a random value which changes each and every HTTP request sent. When inserted into a website form it is saved in the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3556"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3556"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3556/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3557,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3556/revisions/3557"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3556"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3556"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3556"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3558,
    "date": "2021-01-14T11:48:05",
    "date_gmt": "2021-01-14T11:48:05",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3558"
    },
    "modified": "2021-01-14T11:48:05",
    "modified_gmt": "2021-01-14T11:48:05",
    "slug": "how-do-you-enable-crsf-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-do-you-enable-crsf-in-codeigniter/",
    "title": {
      "rendered": "How Do You Enable CRSF in Codeigniter ?"
    },
    "content": {
      "rendered": "\n<p>To enable CRSF the user must follow these steps application/config/config.php file and setting it to $config [ ‘csrf_protection’] = TRUE;</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To enable CRSF the user must follow these steps application/config/config.php file and setting it to $config [ ‘csrf_protection’] = TRUE;</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3558"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3558"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3558/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3559,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3558/revisions/3559"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3558"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3558"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3558"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3560,
    "date": "2021-01-14T11:48:47",
    "date_gmt": "2021-01-14T11:48:47",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3560"
    },
    "modified": "2021-01-14T11:48:47",
    "modified_gmt": "2021-01-14T11:48:47",
    "slug": "what-are-the-most-prominent-features-of-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-are-the-most-prominent-features-of-codeigniter/",
    "title": {
      "rendered": "What are the most prominent features of CodeIgniter?"
    },
    "content": {
      "rendered": "\n<p>There are many features that are prominent and are availed to us by the Codeigniter.<br>Here is a list of the most important features of the Codeigniter depicted below:</p>\n\n\n\n<ul><li>CodeIgniter is basically an open source framework that is generally free to use.</li><li>Codeigniter is known for being the most light-weighted framework.</li><li>Model View Controller (MVC) pattern is the pattern on which the codeigniter is based.</li><li>It generally possesses the full featured database classes and is known to support for several platforms.</li><li>Codeigniter is extensible that simply means that the programmers can extend the system very easily just by the use of their libraries, helpers.</li><li>It is mostly known for its excellent documentation.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>There are many features that are prominent and are availed to us by the Codeigniter.Here is a list of the most important features of the Codeigniter depicted below: CodeIgniter is basically an open source framework that is generally free to use. Codeigniter is known for being the most light-weighted framework. Model View Controller (MVC) pattern [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3560"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3560"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3560/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3561,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3560/revisions/3561"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3560"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3560"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3560"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3562,
    "date": "2021-01-14T11:49:29",
    "date_gmt": "2021-01-14T11:49:29",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3562"
    },
    "modified": "2021-01-14T11:50:04",
    "modified_gmt": "2021-01-14T11:50:04",
    "slug": "elaborate-mvc-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/elaborate-mvc-in-codeigniter/",
    "title": {
      "rendered": "Elaborate MVC in CodeIgniter."
    },
    "content": {
      "rendered": "\n<p>MVC is the pattern on which the whole of codeIgniter framework is based. Now let’s get to know the MVC, it is basically a software that delivers the users a separate logical view from the presentation view.</p>\n\n\n\n<p>This results in a web page that contains the minimal scripting.</p>\n\n\n\n<ul><li><strong>Model &#8211;</strong>&nbsp;The models are basically managed by the controller. The data structure of the programmer is generally represented by the model. Model classes consist of the functions by the help of which programmers can insert, retrieve or update information in their database.</li><li><strong>View &#8211;</strong>&nbsp;The information that is generally displayed in front of the users is known as the view. A view can be either a web page or parts of the page such as header and footer.</li><li><strong>Controllers &#8211;</strong>&nbsp;The intermediary that is present between the models and the view that is used to process HTTP request and in generating a web page is known as the controller. Models and view are the one that process the information of the requests that are received by the controller and passed on to them.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>MVC is the pattern on which the whole of codeIgniter framework is based. Now let’s get to know the MVC, it is basically a software that delivers the users a separate logical view from the presentation view. This results in a web page that contains the minimal scripting. Model &#8211;&nbsp;The models are basically managed by [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3562"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3562"
        }
      ],
      "version-history": [
        {
          "count": 2,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3562/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3565,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3562/revisions/3565"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3562"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3562"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3562"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3566,
    "date": "2021-01-14T11:51:01",
    "date_gmt": "2021-01-14T11:51:01",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3566"
    },
    "modified": "2021-01-14T11:51:01",
    "modified_gmt": "2021-01-14T11:51:01",
    "slug": "what-do-you-mean-by-the-model-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-do-you-mean-by-the-model-in-codeigniter/",
    "title": {
      "rendered": "What do you mean by the model in CodeIgniter."
    },
    "content": {
      "rendered": "\n<p>Model in the CodeIgniter is generally responsible to handle all the data logic and the representation and loading of the data that are present in the views. The model in the CodeIgniter is generally stored in the application/models folder.</p>\n\n\n\n<p>Here is the basic structure of a model file is depicted below for you to understand:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>class ModelName extends CI_Model\r\n{\r\n\tpublic function MethodName()\r\n\t{\r\n\t\r\n\t}\r\n}\n</code></pre>\n\n\n\n<p>In the above mentioned structure, the ‘ModelName’ is representing the name of the programmer’s model file. Please note that the class first letter should be in an uppercase letter that should be followed by the various other lowercase letters, and it should be generally the same as the name of the file of the programmer. All the built-in methods of parent Model file basically gets inherited to the newly created file as the base CodeIgniter Model is extended by the model name.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Model in the CodeIgniter is generally responsible to handle all the data logic and the representation and loading of the data that are present in the views. The model in the CodeIgniter is generally stored in the application/models folder. Here is the basic structure of a model file is depicted below for you to understand: [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3566"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3566"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3566/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3567,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3566/revisions/3567"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3566"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3566"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3566"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3568,
    "date": "2021-01-14T11:51:33",
    "date_gmt": "2021-01-14T11:51:33",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3568"
    },
    "modified": "2021-01-14T11:51:33",
    "modified_gmt": "2021-01-14T11:51:33",
    "slug": "how-can-the-user-can-connect-models-to-a-database-manually",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-can-the-user-can-connect-models-to-a-database-manually/",
    "title": {
      "rendered": "How can the user can connect models to a database manually?"
    },
    "content": {
      "rendered": "\n<p>In order to connect the models to a database manually the following depicted syntax is used:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$this->load->database();</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In order to connect the models to a database manually the following depicted syntax is used:</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3568"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3568"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3568/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3569,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3568/revisions/3569"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3568"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3568"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3568"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3570,
    "date": "2021-01-14T11:52:28",
    "date_gmt": "2021-01-14T11:52:28",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3570"
    },
    "modified": "2021-01-14T11:52:28",
    "modified_gmt": "2021-01-14T11:52:28",
    "slug": "elaborate-the-views-in-the-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/elaborate-the-views-in-the-codeigniter/",
    "title": {
      "rendered": "Elaborate the views in the CodeIgniter."
    },
    "content": {
      "rendered": "\n<p>All the markup files like header, footer, sidebar, etc are present in the view folder. In order to reuse them the programmer has to embed them in the controller file anywhere. This is to be done as they can&#8217;t be called directly hence, they have to be loaded in the controller&#8217;s file.<strong>Syntax of the view:</strong></p>\n\n\n\n<p>In order to view the syntax the programmers have to create a file and have to save that in the application/views folder. For a better understanding please review the following example:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;!DOCTYPE html>\r\n&lt;html>\r\n&lt;head>\r\n\t&lt;title>Codeigniter View&lt;/title>\r\n&lt;/head>\r\n&lt;body>\r\n\t&lt;h1>Codeigntier View&lt;/h1>\r\n&lt;/body>\r\n&lt;/html></code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>All the markup files like header, footer, sidebar, etc are present in the view folder. In order to reuse them the programmer has to embed them in the controller file anywhere. This is to be done as they can&#8217;t be called directly hence, they have to be loaded in the controller&#8217;s file.Syntax of the view: [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3570"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3570"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3570/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3571,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3570/revisions/3571"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3570"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3570"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3570"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3572,
    "date": "2021-01-14T11:53:23",
    "date_gmt": "2021-01-14T11:53:23",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3572"
    },
    "modified": "2021-01-14T11:53:23",
    "modified_gmt": "2021-01-14T11:53:23",
    "slug": "how-can-you-load-a-view-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-can-you-load-a-view-in-codeigniter/",
    "title": {
      "rendered": "How can you load a view in CodeIgniter?"
    },
    "content": {
      "rendered": "\n<p>In the Codeigniter, the View can&#8217;t be accessed directly as of the fact that it is loaded in the controller file for always. Here is the function that is depicted below is used to load a view page:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$this->load->view('page_name'); </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In the Codeigniter, the View can&#8217;t be accessed directly as of the fact that it is loaded in the controller file for always. Here is the function that is depicted below is used to load a view page:</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3572"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3572"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3572/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3573,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3572/revisions/3573"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3572"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3572"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3572"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3574,
    "date": "2021-01-14T11:54:27",
    "date_gmt": "2021-01-14T11:54:27",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3574"
    },
    "modified": "2021-01-14T11:54:27",
    "modified_gmt": "2021-01-14T11:54:27",
    "slug": "what-do-you-mean-by-the-controller-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-do-you-mean-by-the-controller-in-codeigniter/",
    "title": {
      "rendered": "What do you mean by the controller in CodeIgniter."
    },
    "content": {
      "rendered": "\n<p>The intermediary present between the models and the views to process the HTTP request and is used to generate a web page is known as a controller. It is basically known as the center of each request that exists on the web application of the user.</p>\n\n\n\n<p>Please consider the following URL in this reference,</p>\n\n\n\n<pre class=\"wp-block-code\"><code>projectName/index.php/welcome/</code></pre>\n\n\n\n<p>In this URL the CodeIgniteris basically trying to find the welcome.php file and the Welcome class.<strong>Controller Syntax</strong></p>\n\n\n\n<pre class=\"wp-block-code\"><code>class ControllerName extends CI_Controller\r\n{\r\n\tpublic function __construct()\r\n\t{\r\n\tparent::__construct();\r\n\t}\r\n\tpublic function MethodName()\r\n\t{\r\n\t\r\n\t}\r\n}\n</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The intermediary present between the models and the views to process the HTTP request and is used to generate a web page is known as a controller. It is basically known as the center of each request that exists on the web application of the user. Please consider the following URL in this reference, In [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3574"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3574"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3574/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3575,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3574/revisions/3575"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3574"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3574"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3574"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3576,
    "date": "2021-01-14T11:55:46",
    "date_gmt": "2021-01-14T11:55:46",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3576"
    },
    "modified": "2021-01-14T11:55:46",
    "modified_gmt": "2021-01-14T11:55:46",
    "slug": "what-is-the-default-controller-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-is-the-default-controller-in-codeigniter/",
    "title": {
      "rendered": "What is the default controller in CodeIgniter?"
    },
    "content": {
      "rendered": "\n<p>Whenever there is no file name is mentioned in the URL then the file will be specified in the default controller loaded by default. By default, the file name is welcome.php that is known as the first page that is to be seen after installing CodeIgniter.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>localhost/codeigniter/  </code></pre>\n\n\n\n<p>In this case the Welcome.php will generally be loaded as if there is no file name mentioned in the URL provided.</p>\n\n\n\n<p>The programmer can generally change the default controller that is present in the file application/config/routes.php as per his/her need.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$route&#91;'default_controller'] = ' '; </code></pre>\n\n\n\n<p>In the above syntax the programmer has to specify the file name that he/she basically wants to get loaded as the default.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Whenever there is no file name is mentioned in the URL then the file will be specified in the default controller loaded by default. By default, the file name is welcome.php that is known as the first page that is to be seen after installing CodeIgniter. In this case the Welcome.php will generally be loaded [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3576"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3576"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3576/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3577,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3576/revisions/3577"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3576"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3576"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3576"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3578,
    "date": "2021-01-14T11:56:23",
    "date_gmt": "2021-01-14T11:56:23",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3578"
    },
    "modified": "2021-01-14T11:56:23",
    "modified_gmt": "2021-01-14T11:56:23",
    "slug": "how-can-a-constructor-be-called-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-can-a-constructor-be-called-in-codeigniter/",
    "title": {
      "rendered": "How can a constructor be called in CodeIgniter?"
    },
    "content": {
      "rendered": "\n<p>In order to use a constructor, the programmer has the need to mention the below depicted line of code,</p>\n\n\n\n<pre class=\"wp-block-code\"><code>parent::__construct()</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In order to use a constructor, the programmer has the need to mention the below depicted line of code,</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3578"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3578"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3578/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3579,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3578/revisions/3579"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3578"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3578"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3578"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3580,
    "date": "2021-01-14T11:57:09",
    "date_gmt": "2021-01-14T11:57:09",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3580"
    },
    "modified": "2021-01-14T11:57:09",
    "modified_gmt": "2021-01-14T11:57:09",
    "slug": "what-is-the-basic-codeigniter-url-structure",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-is-the-basic-codeigniter-url-structure/",
    "title": {
      "rendered": "What is the basic CodeIgniter URL structure?"
    },
    "content": {
      "rendered": "\n<p>The basic CodeIgniter URL structure generally uses a segment based approach instead of using the &#8216;query-string&#8217; approach.</p>\n\n\n\n<p>The basic CodeIgniter URL structure is as depicted below:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>projectName/index.php/class/method/ID</code></pre>\n\n\n\n<p>A controller class that generally needs to be invoked is represented by the&nbsp;<strong>Class</strong>.</p>\n\n\n\n<p><strong>ID</strong>&nbsp;is basically an additional segment that is passed to the controllers.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The basic CodeIgniter URL structure generally uses a segment based approach instead of using the &#8216;query-string&#8217; approach. The basic CodeIgniter URL structure is as depicted below: A controller class that generally needs to be invoked is represented by the&nbsp;Class. ID&nbsp;is basically an additional segment that is passed to the controllers.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3580"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3580"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3580/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3581,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3580/revisions/3581"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3580"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3580"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3580"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3582,
    "date": "2021-01-14T11:58:40",
    "date_gmt": "2021-01-14T11:58:40",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3582"
    },
    "modified": "2021-01-14T11:58:40",
    "modified_gmt": "2021-01-14T11:58:40",
    "slug": "what-do-you-mean-by-an-inhibitor-of-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-do-you-mean-by-an-inhibitor-of-codeigniter/",
    "title": {
      "rendered": "What do you mean by an inhibitor of CodeIgniter ?"
    },
    "content": {
      "rendered": "\n<p>Inhibitor is generally known to be an error handler class in the CodeIgniter that basically uses the native PHP functions such as set_error_handler, set_exception_handler, register_shutdown_function in order to handle the parse errors, exceptions, and the fatal errors.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Inhibitor is generally known to be an error handler class in the CodeIgniter that basically uses the native PHP functions such as set_error_handler, set_exception_handler, register_shutdown_function in order to handle the parse errors, exceptions, and the fatal errors.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3582"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3582"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3582/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3583,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3582/revisions/3583"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3582"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3582"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3582"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3584,
    "date": "2021-01-14T12:02:27",
    "date_gmt": "2021-01-14T12:02:27",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3584"
    },
    "modified": "2021-01-14T12:02:27",
    "modified_gmt": "2021-01-14T12:02:27",
    "slug": "how-can-the-programmer-load-multiple-helper-files",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-can-the-programmer-load-multiple-helper-files/",
    "title": {
      "rendered": "How can the programmer load multiple helper files?"
    },
    "content": {
      "rendered": "\n<p>In order to load the multiple helper files the programmer generally have to specify them in an array just like depicted below:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$this->load->helper(array('helper1', 'helper2', 'helper3')); </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In order to load the multiple helper files the programmer generally have to specify them in an array just like depicted below:</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3584"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3584"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3584/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3585,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3584/revisions/3585"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3584"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3584"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3584"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3587,
    "date": "2021-01-16T05:52:53",
    "date_gmt": "2021-01-16T05:52:53",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3587"
    },
    "modified": "2021-01-16T05:52:53",
    "modified_gmt": "2021-01-16T05:52:53",
    "slug": "elaborate-the-codeigniter-library-how-will-you-load-it",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/elaborate-the-codeigniter-library-how-will-you-load-it/",
    "title": {
      "rendered": "Elaborate the CodeIgniter library. How will you load it?"
    },
    "content": {
      "rendered": "\n<p>A rich set of libraries is generally availed by the CodeIgniter. As it generally enhances the developing speed of an application hence, it is known as the essential part of the CodeIgniter. The normal location of this in the CodeIgniter is the system/library.<br>Here is how a programmer can load it, just by following the code depicted below:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>$this->load->library('class_name');</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A rich set of libraries is generally availed by the CodeIgniter. As it generally enhances the developing speed of an application hence, it is known as the essential part of the CodeIgniter. The normal location of this in the CodeIgniter is the system/library.Here is how a programmer can load it, just by following the code [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3587"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3587"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3587/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3588,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3587/revisions/3588"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3587"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3587"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3587"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3589,
    "date": "2021-01-16T05:53:35",
    "date_gmt": "2021-01-16T05:53:35",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3589"
    },
    "modified": "2021-01-16T05:53:35",
    "modified_gmt": "2021-01-16T05:53:35",
    "slug": "how-can-the-programmer-create-a-library-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/how-can-the-programmer-create-a-library-in-codeigniter/",
    "title": {
      "rendered": "How can the programmer create a library in CodeIgniter?"
    },
    "content": {
      "rendered": "\n<p>There are generally three methods that can be used to create a library that are depicted below:</p>\n\n\n\n<ul><li>By creating an entire new library</li><li>By extending native libraries</li><li>By replacing native libraries</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>There are generally three methods that can be used to create a library that are depicted below: By creating an entire new library By extending native libraries By replacing native libraries</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3589"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3589"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3589/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3590,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3589/revisions/3590"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3589"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3589"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3589"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3592,
    "date": "2021-01-16T05:56:00",
    "date_gmt": "2021-01-16T05:56:00",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3592"
    },
    "modified": "2021-01-16T05:56:00",
    "modified_gmt": "2021-01-16T05:56:00",
    "slug": "where-is-a-library-that-is-newly-created-stored-in-codeigniter-structure",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/where-is-a-library-that-is-newly-created-stored-in-codeigniter-structure/",
    "title": {
      "rendered": "Where is a library that is newly created stored in CodeIgniter structure?"
    },
    "content": {
      "rendered": "\n<p>A library that is newly created in CodeIgniter structure should generally be placed in application/libraries folder.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A library that is newly created in CodeIgniter structure should generally be placed in application/libraries folder.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3592"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3592"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3592/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3593,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3592/revisions/3593"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3592"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3592"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3592"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3594,
    "date": "2021-01-16T05:56:44",
    "date_gmt": "2021-01-16T05:56:44",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3594"
    },
    "modified": "2021-01-16T05:56:44",
    "modified_gmt": "2021-01-16T05:56:44",
    "slug": "can-a-programmer-extend-the-native-libraries-in-codeigniter",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/can-a-programmer-extend-the-native-libraries-in-codeigniter/",
    "title": {
      "rendered": "Can a programmer extend the native libraries in CodeIgniter?"
    },
    "content": {
      "rendered": "\n<p>The answer is indeed, a programmer can add some of the extended functionality to a native library just by adding one or two methods in it. These methods will replace the entire library with the programmer’s version. Hence, it is always better to extend the class. Please note that the extending and replacing in codeIgniter is almost known to be identical with only exceptions that are depicted below:</p>\n\n\n\n<ul><li>This exception includes that the class declaration must enlarge the parent class.</li><li>Every new class name and the filename must be prefixed with MY_ in this exception.</li></ul>\n\n\n\n<p></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The answer is indeed, a programmer can add some of the extended functionality to a native library just by adding one or two methods in it. These methods will replace the entire library with the programmer’s version. Hence, it is always better to extend the class. Please note that the extending and replacing in codeIgniter [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3594"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3594"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3594/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3595,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3594/revisions/3595"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3594"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3594"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3594"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3597,
    "date": "2021-01-16T05:59:53",
    "date_gmt": "2021-01-16T05:59:53",
    "guid": {
      "rendered": "http://php.foobrdigital.com/?p=3597"
    },
    "modified": "2021-01-16T05:59:53",
    "modified_gmt": "2021-01-16T05:59:53",
    "slug": "what-is-fuelphpframework",
    "status": "publish",
    "type": "post",
    "link": "https://php.foobrdigital.com/what-is-fuelphpframework/",
    "title": {
      "rendered": "What is FuelPHPFramework?"
    },
    "content": {
      "rendered": "\n<p>FuelPHP Framework is an open source web application and written in PHP scripting language.</p>\n\n\n\n<p>It is based on the HMVC (Hierarchical Model View Controller) design pattern.</p>\n\n\n\n<p>It was released on January 1, 2014 by GitHub repository named FuelPHP.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>FuelPHP Framework is an open source web application and written in PHP scripting language. It is based on the HMVC (Hierarchical Model View Controller) design pattern. It was released on January 1, 2014 by GitHub repository named FuelPHP.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [78],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3597"
        }
      ],
      "collection": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/comments?post=3597"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3597/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3598,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/posts/3597/revisions/3598"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/media?parent=3597"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/categories?post=3597"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://php.foobrdigital.com/wp-json/wp/v2/tags?post=3597"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  }
]
