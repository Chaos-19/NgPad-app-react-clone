[
  {
    "id": 2834,
    "date": "2020-10-23T06:54:49",
    "date_gmt": "2020-10-23T06:54:49",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2834"
    },
    "modified": "2020-10-23T06:54:49",
    "modified_gmt": "2020-10-23T06:54:49",
    "slug": "differentiate-between-real-dom-and-virtual-dom",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/differentiate-between-real-dom-and-virtual-dom/",
    "title": {
      "rendered": "Differentiate between Real DOM and Virtual DOM."
    },
    "content": {
      "rendered": "\n<figure class=\"wp-block-table\"><table><tbody><tr><th><strong>Real DOM</strong></th><th><strong>Virtual &nbsp;DOM</strong></th></tr><tr><td>1. It updates slow.</td><td>1. It updates faster.</td></tr><tr><td>2. Can directly update HTML.</td><td>2. Can’t directly update HTML.</td></tr><tr><td>3. Creates a new DOM if element updates.</td><td>3. Updates the JSX if element updates.</td></tr><tr><td>4. DOM manipulation is very expensive.</td><td>4. DOM manipulation is very easy.</td></tr><tr><td>5. Too much of memory wastage.</td><td>5. No memory wastage.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Real DOM Virtual &nbsp;DOM 1. It updates slow. 1. It updates faster. 2. Can directly update HTML. 2. Can’t directly update HTML. 3. Creates a new DOM if element updates. 3. Updates the JSX if element updates. 4. DOM manipulation is very expensive. 4. DOM manipulation is very easy. 5. Too much of memory wastage. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2834"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2834"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2834/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2835,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2834/revisions/2835"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2834"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2834"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2834"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2832,
    "date": "2020-10-23T06:55:03",
    "date_gmt": "2020-10-23T06:55:03",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2832"
    },
    "modified": "2020-10-23T06:55:03",
    "modified_gmt": "2020-10-23T06:55:03",
    "slug": "what-is-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-is-react/",
    "title": {
      "rendered": "What is React?"
    },
    "content": {
      "rendered": "\n<ul><li>React is a front-end JavaScript library developed by Facebook in 2011.</li><li>It follows the component based approach which helps in building reusable UI components.</li><li>It is used for developing complex and interactive web and mobile UI.</li><li>Even though it was open-sourced only in 2015, it has one of the largest communities supporting it.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>React is a front-end JavaScript library developed by Facebook in 2011. It follows the component based approach which helps in building reusable UI components. It is used for developing complex and interactive web and mobile UI. Even though it was open-sourced only in 2015, it has one of the largest communities supporting it.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2832"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2832"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2832/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2836,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2832/revisions/2836"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2832"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2832"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2832"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2833,
    "date": "2020-10-23T06:55:16",
    "date_gmt": "2020-10-23T06:55:16",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2833"
    },
    "modified": "2020-10-23T06:55:16",
    "modified_gmt": "2020-10-23T06:55:16",
    "slug": "what-are-the-features-of-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-the-features-of-react/",
    "title": {
      "rendered": "What are the features of React?"
    },
    "content": {
      "rendered": "\n<p>Major features of React are listed below:</p>\n\n\n\n<ol><li>It uses the&nbsp;<strong>virtual DOM</strong>&nbsp;instead of the real DOM.</li><li>It uses&nbsp;<strong>server-side rendering</strong>.</li><li>It follows&nbsp;<strong>uni-directional data flow</strong>&nbsp;or data binding.</li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Major features of React are listed below: It uses the&nbsp;virtual DOM&nbsp;instead of the real DOM. It uses&nbsp;server-side rendering. It follows&nbsp;uni-directional data flow&nbsp;or data binding.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2833"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2833"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2833/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2837,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2833/revisions/2837"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2833"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2833"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2833"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2830,
    "date": "2020-10-23T06:55:32",
    "date_gmt": "2020-10-23T06:55:32",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2830"
    },
    "modified": "2020-10-23T06:55:32",
    "modified_gmt": "2020-10-23T06:55:32",
    "slug": "list-some-of-the-major-advantages-of-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/list-some-of-the-major-advantages-of-react/",
    "title": {
      "rendered": "List some of the major advantages of React."
    },
    "content": {
      "rendered": "\n<p>Some of the major advantages of React are:</p>\n\n\n\n<ol><li>It increases the application’s performance</li><li>It can be conveniently used on the client as well as server side</li><li>Because of JSX, code’s readability increases</li><li>React is easy to integrate with other frameworks like Meteor, Angular, etc</li><li>Using React, writing UI test cases become extremely easy</li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Some of the major advantages of React are: It increases the application’s performance It can be conveniently used on the client as well as server side Because of JSX, code’s readability increases React is easy to integrate with other frameworks like Meteor, Angular, etc Using React, writing UI test cases become extremely easy</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2830"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2830"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2830/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2838,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2830/revisions/2838"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2830"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2830"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2830"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2831,
    "date": "2020-10-23T06:55:48",
    "date_gmt": "2020-10-23T06:55:48",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2831"
    },
    "modified": "2020-10-23T06:55:48",
    "modified_gmt": "2020-10-23T06:55:48",
    "slug": "what-are-the-limitations-of-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-the-limitations-of-react/",
    "title": {
      "rendered": "What are the limitations of React?"
    },
    "content": {
      "rendered": "\n<p>Limitations of React are listed below:</p>\n\n\n\n<ol><li>React is just a library, not a full-blown framework</li><li>Its library is very large and takes time to understand</li><li>It can be little difficult for the novice programmers to understand</li><li>Coding gets complex as it uses inline templating and JSX</li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Limitations of React are listed below: React is just a library, not a full-blown framework Its library is very large and takes time to understand It can be little difficult for the novice programmers to understand Coding gets complex as it uses inline templating and JSX</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2831"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2831"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2831/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2839,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2831/revisions/2839"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2831"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2831"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2831"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2829,
    "date": "2020-10-23T06:56:38",
    "date_gmt": "2020-10-23T06:56:38",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2829"
    },
    "modified": "2020-10-23T06:56:38",
    "modified_gmt": "2020-10-23T06:56:38",
    "slug": "what-do-you-understand-by-virtual-dom-explain-its-working",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-do-you-understand-by-virtual-dom-explain-its-working/",
    "title": {
      "rendered": "What do you understand by Virtual DOM? Explain its working."
    },
    "content": {
      "rendered": "\n<p>A virtual DOM is a lightweight JavaScript object which originally is just the copy of the real DOM.&nbsp;It is a node tree that lists the elements, their attributes and content as Objects and their properties.&nbsp;React’s render function creates a node tree out of the React components. It then updates this tree in response to the mutations in the data model which&nbsp;is caused by various actions done by the&nbsp;user or by the system.<br>This Virtual DOM works in three simple steps.</p>\n\n\n\n<ol><li>Whenever any underlying data changes, the entire UI is re-rendered in Virtual DOM representation.<img loading=\"lazy\" src=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/1dom.png\" alt=\"Virtual DOM 1 - What Is ReactJS? - Edureka\" width=\"454\" height=\"166\" srcset=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/1dom.png 1363w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/1dom-150x55.png 150w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/1dom-300x110.png 300w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/1dom-768x281.png 768w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/1dom-528x193.png 528w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/1dom-492x180.png 492w\"></li><li>Then the difference between the previous DOM representation and the new one is calculated.<img loading=\"lazy\" src=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/2dom.png\" alt=\"Virtual DOM 2 - React Interview Questions - Edureka\" width=\"382\" height=\"160\" srcset=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/2dom.png 1079w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/2dom-150x63.png 150w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/2dom-300x126.png 300w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/2dom-768x322.png 768w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/2dom-528x221.png 528w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/2dom-430x180.png 430w\"></li><li>Once the calculations are done, the real DOM will be updated with only the things that have actually changed.&nbsp;<img loading=\"lazy\" src=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/3dom.png\" alt=\"Virtual DOM 3 - React Interview Questions - Edureka\" width=\"196\" height=\"169\" srcset=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/3dom.png 531w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/3dom-150x129.png 150w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/3dom-300x258.png 300w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/3dom-349x300.png 349w, https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/08/3dom-209x180.png 209w\"></li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A virtual DOM is a lightweight JavaScript object which originally is just the copy of the real DOM.&nbsp;It is a node tree that lists the elements, their attributes and content as Objects and their properties.&nbsp;React’s render function creates a node tree out of the React components. It then updates this tree in response to the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2829"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2829"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2829/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2840,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2829/revisions/2840"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2829"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2829"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2829"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2828,
    "date": "2020-10-23T06:56:52",
    "date_gmt": "2020-10-23T06:56:52",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2828"
    },
    "modified": "2020-10-23T06:56:52",
    "modified_gmt": "2020-10-23T06:56:52",
    "slug": "why-cant-browsers-read-jsx",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/why-cant-browsers-read-jsx/",
    "title": {
      "rendered": "Why can’t browsers read JSX?"
    },
    "content": {
      "rendered": "\n<p>Browsers can only read JavaScript objects but JSX in not a regular JavaScript object. Thus to enable a browser to read JSX, first, we need to transform JSX file into a JavaScript object using JSX transformers like Babel and then pass it to the browser.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Browsers can only read JavaScript objects but JSX in not a regular JavaScript object. Thus to enable a browser to read JSX, first, we need to transform JSX file into a JavaScript object using JSX transformers like Babel and then pass it to the browser.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2828"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2828"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2828/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2841,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2828/revisions/2841"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2828"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2828"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2828"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2826,
    "date": "2020-10-23T06:57:12",
    "date_gmt": "2020-10-23T06:57:12",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2826"
    },
    "modified": "2020-10-23T06:57:12",
    "modified_gmt": "2020-10-23T06:57:12",
    "slug": "what-do-you-understand-from-in-react-everything-is-a-component",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-do-you-understand-from-in-react-everything-is-a-component/",
    "title": {
      "rendered": "What do you understand from “In React, everything is a component."
    },
    "content": {
      "rendered": "\n<p>Components are the building blocks of a React application’s UI. These components split up the entire UI into small independent and reusable pieces. Then it renders each of these components independent of each other without affecting the rest of the UI.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Components are the building blocks of a React application’s UI. These components split up the entire UI into small independent and reusable pieces. Then it renders each of these components independent of each other without affecting the rest of the UI.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2826"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2826"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2826/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2842,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2826/revisions/2842"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2826"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2826"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2826"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2827,
    "date": "2020-10-23T06:57:28",
    "date_gmt": "2020-10-23T06:57:28",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2827"
    },
    "modified": "2020-10-23T06:57:28",
    "modified_gmt": "2020-10-23T06:57:28",
    "slug": "explain-the-purpose-of-render-in-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/explain-the-purpose-of-render-in-react/",
    "title": {
      "rendered": "Explain the purpose of render() in React."
    },
    "content": {
      "rendered": "\n<p>Each React component must have a <strong>render() </strong>mandatorily. It returns a single React element which is the representation of the native DOM component. If more than one HTML element needs to be rendered, then they must be grouped together inside one enclosing tag such as <strong>&lt;form>, &lt;group>,&lt;div></strong> etc. This function must be kept pure i.e., it must return the same result each time it is invoked.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Each React component must have a render() mandatorily. It returns a single React element which is the representation of the native DOM component. If more than one HTML element needs to be rendered, then they must be grouped together inside one enclosing tag such as &lt;form>, &lt;group>,&lt;div> etc. This function must be kept pure i.e., it must return the same [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2827"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2827"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2827/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2843,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2827/revisions/2843"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2827"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2827"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2827"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2824,
    "date": "2020-10-23T06:57:42",
    "date_gmt": "2020-10-23T06:57:42",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2824"
    },
    "modified": "2020-10-23T06:57:42",
    "modified_gmt": "2020-10-23T06:57:42",
    "slug": "what-is-props",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-is-props/",
    "title": {
      "rendered": "What is Props?"
    },
    "content": {
      "rendered": "\n<p>Props is the shorthand for Properties in React. They are read-only components which must be kept pure i.e. immutable. They are always passed down from the parent to the child components throughout the application. A child component can never send a prop back to the parent component. This help in maintaining the unidirectional data flow and are generally used to render the dynamically generated data.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Props is the shorthand for Properties in React. They are read-only components which must be kept pure i.e. immutable. They are always passed down from the parent to the child components throughout the application. A child component can never send a prop back to the parent component. This help in maintaining the unidirectional data flow [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2824"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2824"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2824/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2844,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2824/revisions/2844"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2824"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2824"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2824"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2825,
    "date": "2020-10-23T06:57:56",
    "date_gmt": "2020-10-23T06:57:56",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2825"
    },
    "modified": "2020-10-23T06:57:56",
    "modified_gmt": "2020-10-23T06:57:56",
    "slug": "what-is-a-state-in-react-and-how-is-it-used",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-is-a-state-in-react-and-how-is-it-used/",
    "title": {
      "rendered": "What is a state in React and how is it used?"
    },
    "content": {
      "rendered": "\n<p>States are the heart of React components. States are the source of data and must be kept as simple as possible. Basically, states are the objects which determine components rendering and behavior. They are mutable unlike the props and create dynamic and interactive components. They are accessed via <strong>this.state().</strong></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>States are the heart of React components. States are the source of data and must be kept as simple as possible. Basically, states are the objects which determine components rendering and behavior. They are mutable unlike the props and create dynamic and interactive components. They are accessed via this.state().</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2825"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2825"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2825/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2845,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2825/revisions/2845"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2825"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2825"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2825"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2823,
    "date": "2020-10-23T06:58:16",
    "date_gmt": "2020-10-23T06:58:16",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2823"
    },
    "modified": "2020-10-23T06:58:16",
    "modified_gmt": "2020-10-23T06:58:16",
    "slug": "what-are-the-different-phases-of-react-components-lifecycle",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-the-different-phases-of-react-components-lifecycle/",
    "title": {
      "rendered": "What are the different phases of React component’s lifecycle?"
    },
    "content": {
      "rendered": "\n<p>There are three different phases of React component’s lifecycle:</p>\n\n\n\n<ol><li><em>Initial Rendering Phase:</em>&nbsp;This is the phase when the component is about to start its life journey and make its way to the DOM.</li><li><em>Updating Phase:&nbsp;</em>Once the component gets added to the DOM, it can potentially update and re-render only when a prop or state change occurs. That happens only in this phase.</li><li><em>Unmounting Phase:&nbsp;</em>This is the final phase of a component’s life cycle in which&nbsp;the component is destroyed and removed from the DOM.</li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>There are three different phases of React component’s lifecycle: Initial Rendering Phase:&nbsp;This is the phase when the component is about to start its life journey and make its way to the DOM. Updating Phase:&nbsp;Once the component gets added to the DOM, it can potentially update and re-render only when a prop or state change occurs. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2823"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2823"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2823/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2846,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2823/revisions/2846"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2823"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2823"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2823"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2822,
    "date": "2020-10-23T06:58:31",
    "date_gmt": "2020-10-23T06:58:31",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2822"
    },
    "modified": "2020-10-23T06:58:31",
    "modified_gmt": "2020-10-23T06:58:31",
    "slug": "explain-the-lifecycle-methods-of-react-components-in-detail",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/explain-the-lifecycle-methods-of-react-components-in-detail/",
    "title": {
      "rendered": "Explain the lifecycle methods of React components in detail."
    },
    "content": {
      "rendered": "\n<p>Some of the most important lifecycle methods are:</p>\n\n\n\n<ol><li><em><strong>componentWillMount</strong></em><strong><em>()</em>&nbsp;</strong>–Executed just before rendering takes place both on the client as well as server-side.</li><li><em><strong>componentDidMount</strong></em><strong><em>()</em>&nbsp;</strong>–Executed on the client side only after the first render.</li><li><em><strong>componentWillReceiveProps</strong></em><strong><em>()&nbsp;</em></strong>– Invoked as soon as the props are received from the parent class and before another render is called.</li><li><em><strong>shouldComponentUpdate</strong></em><strong><em>()</em>&nbsp;</strong>–Returns&nbsp;true or false value based on certain conditions. If you want your component to update, return&nbsp;<strong>true</strong>&nbsp;else return&nbsp;<strong>false</strong>. By default, it returns false.</li><li><em><strong>componentWillUpdate</strong></em><strong><em>()</em>&nbsp;</strong>– Called just before rendering takes place in the DOM.</li><li><em><strong>componentDidUpdate</strong></em><strong><em>()</em>&nbsp;</strong>–Called immediately after rendering takes place.</li><li><em><strong>componentWillUnmount</strong></em><strong><em>()</em>&nbsp;</strong>– Called after the component is unmounted from the DOM. It is used to clear up the memory spaces.</li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Some of the most important lifecycle methods are: componentWillMount()&nbsp;–Executed just before rendering takes place both on the client as well as server-side. componentDidMount()&nbsp;–Executed on the client side only after the first render. componentWillReceiveProps()&nbsp;– Invoked as soon as the props are received from the parent class and before another render is called. shouldComponentUpdate()&nbsp;–Returns&nbsp;true or false value [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2822"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2822"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2822/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2847,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2822/revisions/2847"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2822"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2822"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2822"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2821,
    "date": "2020-10-23T06:58:46",
    "date_gmt": "2020-10-23T06:58:46",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2821"
    },
    "modified": "2020-10-23T06:58:46",
    "modified_gmt": "2020-10-23T06:58:46",
    "slug": "what-is-an-event-in-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-is-an-event-in-react/",
    "title": {
      "rendered": "What is an event in React?"
    },
    "content": {
      "rendered": "\n<p>In React, events are the triggered reactions to specific actions like mouse hover, mouse click, key press, etc.&nbsp;Handling these events are similar to handling events in DOM elements. But there are some syntactical differences like:</p>\n\n\n\n<ol><li>Events are named using camel case instead of just using the lowercase.</li><li>Events are passed as functions instead of strings.</li></ol>\n\n\n\n<p>The event argument contains a set of properties, which are specific to an event. Each event type contains its own properties and behavior which can be accessed via its event handler only.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In React, events are the triggered reactions to specific actions like mouse hover, mouse click, key press, etc.&nbsp;Handling these events are similar to handling events in DOM elements. But there are some syntactical differences like: Events are named using camel case instead of just using the lowercase. Events are passed as functions instead of strings. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2821"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2821"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2821/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2848,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2821/revisions/2848"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2821"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2821"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2821"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2820,
    "date": "2020-10-23T06:59:04",
    "date_gmt": "2020-10-23T06:59:04",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2820"
    },
    "modified": "2020-10-23T06:59:04",
    "modified_gmt": "2020-10-23T06:59:04",
    "slug": "what-are-synthetic-events-in-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-synthetic-events-in-react/",
    "title": {
      "rendered": "What are synthetic events in React?"
    },
    "content": {
      "rendered": "\n<p>Synthetic events are the objects which act as a cross-browser wrapper around the browser’s native event. They combine the behavior of different browsers into one API. This is done to make sure that the events show consistent properties across different browsers.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Synthetic events are the objects which act as a cross-browser wrapper around the browser’s native event. They combine the behavior of different browsers into one API. This is done to make sure that the events show consistent properties across different browsers.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2820"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2820"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2820/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2849,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2820/revisions/2849"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2820"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2820"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2820"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2819,
    "date": "2020-10-23T06:59:15",
    "date_gmt": "2020-10-23T06:59:15",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2819"
    },
    "modified": "2020-10-23T06:59:15",
    "modified_gmt": "2020-10-23T06:59:15",
    "slug": "what-do-you-understand-by-refs-in-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-do-you-understand-by-refs-in-react/",
    "title": {
      "rendered": "What do you understand by refs in React?"
    },
    "content": {
      "rendered": "\n<p>Refs is the short hand for References in React. It is an attribute which helps to store a reference to a particular React element or component, which will be returned by the components render configuration function. It is used to return references to a particular element or component returned by render(). They come in handy when we need DOM measurements or to add methods to the components.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Refs is the short hand for References in React. It is an attribute which helps to store a reference to a particular React element or component, which will be returned by the components render configuration function. It is used to return references to a particular element or component returned by render(). They come in handy [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2819"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2819"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2819/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2850,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2819/revisions/2850"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2819"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2819"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2819"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2818,
    "date": "2020-10-23T06:59:35",
    "date_gmt": "2020-10-23T06:59:35",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2818"
    },
    "modified": "2020-10-23T06:59:35",
    "modified_gmt": "2020-10-23T06:59:35",
    "slug": "list-some-of-the-cases-when-you-should-use-refs",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/list-some-of-the-cases-when-you-should-use-refs/",
    "title": {
      "rendered": "List some of the cases when you should use Refs."
    },
    "content": {
      "rendered": "\n<p>Following are the cases when refs should be used:</p>\n\n\n\n<ul><li>When you need to manage focus, select text or media playback</li><li>To trigger imperative animations</li><li>Integrate with third-party DOM libraries</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Following are the cases when refs should be used: When you need to manage focus, select text or media playback To trigger imperative animations Integrate with third-party DOM libraries</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2818"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2818"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2818/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2851,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2818/revisions/2851"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2818"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2818"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2818"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2817,
    "date": "2020-10-23T06:59:52",
    "date_gmt": "2020-10-23T06:59:52",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2817"
    },
    "modified": "2020-10-23T06:59:52",
    "modified_gmt": "2020-10-23T06:59:52",
    "slug": "what-are-higher-order-componentshoc",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-higher-order-componentshoc/",
    "title": {
      "rendered": "What are Higher Order Components(HOC)?"
    },
    "content": {
      "rendered": "\n<p>Higher Order Component is an advanced way of reusing the component logic. Basically, it’s a pattern that is derived from React’s compositional nature. HOC are custom components which wrap another component within it. They can accept any dynamically provided child component but they won’t modify or copy any behavior from their input components. You can say that HOC are ‘pure’ components.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Higher Order Component is an advanced way of reusing the component logic. Basically, it’s a pattern that is derived from React’s compositional nature. HOC are custom components which wrap another component within it. They can accept any dynamically provided child component but they won’t modify or copy any behavior from their input components. You can say [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2817"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2817"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2817/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2852,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2817/revisions/2852"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2817"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2817"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2817"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2816,
    "date": "2020-10-23T07:00:05",
    "date_gmt": "2020-10-23T07:00:05",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2816"
    },
    "modified": "2020-10-23T07:00:05",
    "modified_gmt": "2020-10-23T07:00:05",
    "slug": "what-can-you-do-with-hoc",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-can-you-do-with-hoc/",
    "title": {
      "rendered": "What can you do with HOC?"
    },
    "content": {
      "rendered": "\n<p>HOC can be used for many tasks like:</p>\n\n\n\n<ul><li>Code reuse, logic and bootstrap abstraction</li><li>Render High jacking</li><li>State abstraction and manipulation</li><li>Props manipulation</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HOC can be used for many tasks like: Code reuse, logic and bootstrap abstraction Render High jacking State abstraction and manipulation Props manipulation</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2816"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2816"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2816/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2853,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2816/revisions/2853"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2816"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2816"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2816"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2815,
    "date": "2020-10-23T07:00:25",
    "date_gmt": "2020-10-23T07:00:25",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2815"
    },
    "modified": "2020-10-23T07:00:25",
    "modified_gmt": "2020-10-23T07:00:25",
    "slug": "what-are-pure-components",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-pure-components/",
    "title": {
      "rendered": "What are Pure Components?"
    },
    "content": {
      "rendered": "\n<p><em>Pure </em>components are the simplest and fastest components which can be written. They can replace any component which only has a <strong>render(). </strong>These components enhance the simplicity of the code and performance of the application.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Pure components are the simplest and fastest components which can be written. They can replace any component which only has a render(). These components enhance the simplicity of the code and performance of the application.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2815"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2815"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2815/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2854,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2815/revisions/2854"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2815"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2815"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2815"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2814,
    "date": "2020-10-23T07:00:45",
    "date_gmt": "2020-10-23T07:00:45",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2814"
    },
    "modified": "2020-10-23T07:00:45",
    "modified_gmt": "2020-10-23T07:00:45",
    "slug": "what-is-the-significance-of-keys-in-react",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-is-the-significance-of-keys-in-react/",
    "title": {
      "rendered": "What is the significance of keys in React?"
    },
    "content": {
      "rendered": "\n<p>Keys are used for identifying unique Virtual DOM Elements with their corresponding data driving the UI. They help React to optimize the rendering by recycling all the existing elements in the DOM. These keys must be a unique number or string, using which React just reorders the elements instead of re-rendering them. This leads to increase in application’s performance.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Keys are used for identifying unique Virtual DOM Elements with their corresponding data driving the UI. They help React to optimize the rendering by recycling all the existing elements in the DOM. These keys must be a unique number or string, using which React just reorders the elements instead of re-rendering them. This leads to increase in [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2814"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2814"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2814/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2855,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2814/revisions/2855"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2814"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2814"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2814"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2813,
    "date": "2020-10-23T07:01:03",
    "date_gmt": "2020-10-23T07:01:03",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2813"
    },
    "modified": "2020-10-23T07:01:03",
    "modified_gmt": "2020-10-23T07:01:03",
    "slug": "what-were-the-major-problems-with-mvc-framework",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-were-the-major-problems-with-mvc-framework/",
    "title": {
      "rendered": "What were the major problems with MVC framework?"
    },
    "content": {
      "rendered": "\n<p>Following are some of the major problems with MVC framework:</p>\n\n\n\n<ul><li>DOM manipulation was very expensive</li><li>Applications were slow and inefficient</li><li>There was huge memory wastage</li><li>Because of circular dependencies, a complicated model was created around models and views</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Following are some of the major problems with MVC framework: DOM manipulation was very expensive Applications were slow and inefficient There was huge memory wastage Because of circular dependencies, a complicated model was created around models and views</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2813"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2813"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2813/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2856,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2813/revisions/2856"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2813"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2813"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2813"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2812,
    "date": "2020-10-23T07:01:21",
    "date_gmt": "2020-10-23T07:01:21",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2812"
    },
    "modified": "2020-10-23T07:01:21",
    "modified_gmt": "2020-10-23T07:01:21",
    "slug": "explain-flux",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/explain-flux/",
    "title": {
      "rendered": "Explain Flux."
    },
    "content": {
      "rendered": "\n<p>Flux is an architectural pattern which enforces the uni-directional data flow. It controls derived data and enables communication between multiple components using a central Store which has authority for all data.&nbsp;Any update in data throughout the application must occur here only. Flux provides stability to the application and reduces run-time errors.</p>\n\n\n\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/09/flux.png\" alt=\"flux -React Interview Questions - Edureka\" class=\"wp-image-52084\"/></figure></div>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Flux is an architectural pattern which enforces the uni-directional data flow. It controls derived data and enables communication between multiple components using a central Store which has authority for all data.&nbsp;Any update in data throughout the application must occur here only. Flux provides stability to the application and reduces run-time errors.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2812"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2812"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2812/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2857,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2812/revisions/2857"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2812"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2812"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2812"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2811,
    "date": "2020-10-23T07:01:46",
    "date_gmt": "2020-10-23T07:01:46",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2811"
    },
    "modified": "2020-10-23T07:01:46",
    "modified_gmt": "2020-10-23T07:01:46",
    "slug": "what-is-redux",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-is-redux/",
    "title": {
      "rendered": "What is Redux?"
    },
    "content": {
      "rendered": "\n<p>Redux is one of the hottest libraries for front-end development in today’s marketplace. It is a predictable state container for JavaScript applications and is used for the entire applications state management. Applications developed with Redux are easy to test and can run in different environments showing consistent behavior.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Redux is one of the hottest libraries for front-end development in today’s marketplace. It is a predictable state container for JavaScript applications and is used for the entire applications state management. Applications developed with Redux are easy to test and can run in different environments showing consistent behavior.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2811"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2811"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2811/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2858,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2811/revisions/2858"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2811"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2811"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2811"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2810,
    "date": "2020-10-23T07:02:01",
    "date_gmt": "2020-10-23T07:02:01",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2810"
    },
    "modified": "2020-10-23T07:02:01",
    "modified_gmt": "2020-10-23T07:02:01",
    "slug": "what-are-the-three-principles-that-redux-follows",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-the-three-principles-that-redux-follows/",
    "title": {
      "rendered": "What are the three principles that Redux follows?"
    },
    "content": {
      "rendered": "\n<ol><li><em><strong>Single source of truth:&nbsp;</strong></em>The&nbsp;state&nbsp;of the entire application is stored in an object/ state tree within a single&nbsp;store.&nbsp;The single state tree makes it easier to keep track of changes over time and debug or inspect the application.</li><li><strong><em>State</em><em>&nbsp;is read-only:&nbsp;</em></strong>The only way to change the state is to trigger an&nbsp;action.&nbsp;An action is a plain JS object describing the change. Just like state is the minimal representation of data, the action is the minimal representation of the change to that data.&nbsp;</li><li><em><strong>Changes are made with pure functions:</strong></em>&nbsp;In order to specify how the state tree is transformed by actions, you need pure functions. Pure functions are&nbsp;those whose return value depends solely on the values of their arguments.</li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Single source of truth:&nbsp;The&nbsp;state&nbsp;of the entire application is stored in an object/ state tree within a single&nbsp;store.&nbsp;The single state tree makes it easier to keep track of changes over time and debug or inspect the application. State&nbsp;is read-only:&nbsp;The only way to change the state is to trigger an&nbsp;action.&nbsp;An action is a plain JS object describing [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2810"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2810"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2810/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2859,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2810/revisions/2859"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2810"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2810"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2810"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2809,
    "date": "2020-10-23T07:02:15",
    "date_gmt": "2020-10-23T07:02:15",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2809"
    },
    "modified": "2020-10-23T07:02:15",
    "modified_gmt": "2020-10-23T07:02:15",
    "slug": "what-do-you-understand-by-single-source-of-truth",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-do-you-understand-by-single-source-of-truth/",
    "title": {
      "rendered": "What do you understand by “Single source of truth”?"
    },
    "content": {
      "rendered": "\n<p>Redux uses ‘Store’ for storing the application’s entire state at one place. So all the component’s state are stored in the Store and they receive updates from the Store itself. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Redux uses ‘Store’ for storing the application’s entire state at one place. So all the component’s state are stored in the Store and they receive updates from the Store itself. The single state tree makes it easier to keep track of changes over time and debug or inspect the application.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2809"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2809"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2809/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2860,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2809/revisions/2860"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2809"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2809"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2809"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2808,
    "date": "2020-10-23T07:02:33",
    "date_gmt": "2020-10-23T07:02:33",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2808"
    },
    "modified": "2020-10-23T07:02:33",
    "modified_gmt": "2020-10-23T07:02:33",
    "slug": "list-down-the-components-of-redux",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/list-down-the-components-of-redux/",
    "title": {
      "rendered": "List down the components of Redux."
    },
    "content": {
      "rendered": "\n<p>Redux is composed of the following components:</p>\n\n\n\n<ol><li><strong>Action</strong>&nbsp;– It’s an object that describes what happened.</li><li><strong>Reducer&nbsp;</strong>– &nbsp;It is a place to determine how the state will change.</li><li><strong>Store</strong>&nbsp;– State/ Object tree of the entire application is saved in the Store.</li><li><strong>View</strong>&nbsp;– Simply displays the data provided by the Store.</li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Redux is composed of the following components: Action&nbsp;– It’s an object that describes what happened. Reducer&nbsp;– &nbsp;It is a place to determine how the state will change. Store&nbsp;– State/ Object tree of the entire application is saved in the Store. View&nbsp;– Simply displays the data provided by the Store.</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2808"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2808"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2808/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2861,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2808/revisions/2861"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2808"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2808"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2808"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2807,
    "date": "2020-10-23T07:02:51",
    "date_gmt": "2020-10-23T07:02:51",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2807"
    },
    "modified": "2020-10-23T07:02:51",
    "modified_gmt": "2020-10-23T07:02:51",
    "slug": "show-how-the-data-flows-through-redux",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/show-how-the-data-flows-through-redux/",
    "title": {
      "rendered": "Show how the data flows through Redux?"
    },
    "content": {
      "rendered": "\n<div class=\"wp-block-image\"><figure class=\"aligncenter\"><img src=\"https://d1jnx9ba8s6j9r.cloudfront.net/blog/wp-content/uploads/2017/09/flowda.png\" alt=\"Data Flow in Redux - React Interview Questions - Edureka\" class=\"wp-image-52035\"/></figure></div>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2807"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2807"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2807/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2862,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2807/revisions/2862"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2807"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2807"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2807"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2806,
    "date": "2020-10-23T07:03:12",
    "date_gmt": "2020-10-23T07:03:12",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2806"
    },
    "modified": "2020-10-23T07:03:12",
    "modified_gmt": "2020-10-23T07:03:12",
    "slug": "explain-the-role-of-reducer",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/explain-the-role-of-reducer/",
    "title": {
      "rendered": "Explain the role of Reducer."
    },
    "content": {
      "rendered": "\n<p>Reducers are pure functions which specify how the application’s state changes in response to an ACTION. Reducers work by taking in the previous state and action, and then it returns a new state. It determines what sort of update needs to be done based on the type of the action, and then returns new values. It returns the previous state as it is, if no work needs to be done.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Reducers are pure functions which specify how the application’s state changes in response to an ACTION. Reducers work by taking in the previous state and action, and then it returns a new state. It determines what sort of update needs to be done based on the type of the action, and then returns new values. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2806"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2806"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2806/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2863,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2806/revisions/2863"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2806"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2806"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2806"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2805,
    "date": "2020-10-23T07:03:26",
    "date_gmt": "2020-10-23T07:03:26",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2805"
    },
    "modified": "2020-10-23T07:03:26",
    "modified_gmt": "2020-10-23T07:03:26",
    "slug": "what-is-the-significance-of-store-in-redux",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-is-the-significance-of-store-in-redux/",
    "title": {
      "rendered": "What is the significance of Store in Redux?"
    },
    "content": {
      "rendered": "\n<p>A store is a JavaScript object which can hold the application’s state and provide a few helper methods to access the state, dispatch actions and register listeners. The entire state/ object tree of an application is saved in a single store. As a result of this, Redux is very simple and predictable. We can pass middleware to the store to handle the processing of data as well as to keep a log of various actions that change the state of stores. All the actions return a new state via reducers.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>A store is a JavaScript object which can hold the application’s state and provide a few helper methods to access the state, dispatch actions and register listeners. The entire state/ object tree of an application is saved in a single store. As a result of this, Redux is very simple and predictable. We can pass [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2805"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2805"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2805/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2864,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2805/revisions/2864"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2805"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2805"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2805"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2804,
    "date": "2020-10-23T07:03:48",
    "date_gmt": "2020-10-23T07:03:48",
    "guid": {
      "rendered": "http://react.foobrdigital.com/?p=2804"
    },
    "modified": "2020-10-23T07:03:48",
    "modified_gmt": "2020-10-23T07:03:48",
    "slug": "what-are-the-advantages-of-redux",
    "status": "publish",
    "type": "post",
    "link": "https://react.foobrdigital.com/what-are-the-advantages-of-redux/",
    "title": {
      "rendered": "What are the advantages of Redux?"
    },
    "content": {
      "rendered": "\n<ul><li><strong>Predictability of outcome –&nbsp;</strong>Since there is always one source of truth, i.e. the store, there is no confusion about how to sync the current state with actions and other parts of the application.</li><li><strong>Maintainability –&nbsp;</strong>The code becomes easier to maintain with a predictable outcome and strict structure.</li><li><strong>Server-side rendering –</strong>&nbsp;You just need to pass the store created on the server, to the client side. This&nbsp;is very useful for initial render and&nbsp;provides a better user experience as it optimizes the application performance.</li><li><strong>Developer tools –&nbsp;</strong>From actions to&nbsp;state changes, developers can track everything going on in the application in real time.</li><li><strong>Community and ecosystem –&nbsp;</strong>Redux has a huge community behind it which makes it even more captivating to use. A large community of talented individuals contribute to the betterment of the library and develop various applications with it.</li><li><strong>Ease of testing –&nbsp;</strong>Redux’s code is mostly functions which are small, pure and isolated.&nbsp;This makes the code testable and independent.</li><li><strong>Organization –&nbsp;</strong>Redux is precise about how code should be organized, this makes the code more consistent and easier when a team works with it.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Predictability of outcome –&nbsp;Since there is always one source of truth, i.e. the store, there is no confusion about how to sync the current state with actions and other parts of the application. Maintainability –&nbsp;The code becomes easier to maintain with a predictable outcome and strict structure. Server-side rendering –&nbsp;You just need to pass the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 3,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [40],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2804"
        }
      ],
      "collection": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/users/3"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/comments?post=2804"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2804/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2865,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/posts/2804/revisions/2865"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/media?parent=2804"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/categories?post=2804"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://react.foobrdigital.com/wp-json/wp/v2/tags?post=2804"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  }
]
