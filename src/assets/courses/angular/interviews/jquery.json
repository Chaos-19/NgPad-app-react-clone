[
  {
    "id": 5911,
    "date": "2021-06-27T06:59:34",
    "date_gmt": "2021-06-27T06:59:34",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5911"
    },
    "modified": "2021-06-27T06:59:34",
    "modified_gmt": "2021-06-27T06:59:34",
    "slug": "what-is-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-is-jquery/",
    "title": {
      "rendered": "What is jQuery?"
    },
    "content": {
      "rendered": "\n<p>jQuery is a open source and most popular library for simiplifying interactions between DOM and JavaScript.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>jQuery is a open source and most popular library for simiplifying interactions between DOM and JavaScript.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5911"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5911"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5911/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5912,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5911/revisions/5912"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5911"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5911"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5911"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5913,
    "date": "2021-06-27T07:00:05",
    "date_gmt": "2021-06-27T07:00:05",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5913"
    },
    "modified": "2021-06-27T07:00:05",
    "modified_gmt": "2021-06-27T07:00:05",
    "slug": "what-are-the-advantages-of-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-are-the-advantages-of-jquery/",
    "title": {
      "rendered": "What are the advantages of jQuery?"
    },
    "content": {
      "rendered": "\n<ul><li>Most popular and open source</li><li>Very fast and easily extensible</li><li>Used to develop cross browser compatible web applications as jQuery works in almost the same manner for different kinds of browsers.</li><li>Improves the performance of an application when using the minimised version of the jQuery library. The size of the minimized js file is almost 50% less than the normal js file. Reduction in the file size makes the web page load and work faster.</li><li>Commonly implemented UI related functionalities are written using minimal lines of codes</li></ul>\n\n\n\n<p></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Most popular and open source Very fast and easily extensible Used to develop cross browser compatible web applications as jQuery works in almost the same manner for different kinds of browsers. Improves the performance of an application when using the minimised version of the jQuery library. The size of the minimized js file is almost [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5913"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5913"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5913/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5914,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5913/revisions/5914"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5913"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5913"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5913"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5915,
    "date": "2021-06-27T07:00:22",
    "date_gmt": "2021-06-27T07:00:22",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5915"
    },
    "modified": "2021-06-27T07:00:22",
    "modified_gmt": "2021-06-27T07:00:22",
    "slug": "is-jquery-a-javascript-or-json-library-file",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/is-jquery-a-javascript-or-json-library-file/",
    "title": {
      "rendered": "Is jQuery a JavaScript or JSON library file?"
    },
    "content": {
      "rendered": "\n<p>jQuery is said to be a library of single JavaScript file which consists of DOM/CSS manipulations, event effects or animations, AJAX functions and various commonly used plugins.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>jQuery is said to be a library of single JavaScript file which consists of DOM/CSS manipulations, event effects or animations, AJAX functions and various commonly used plugins.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5915"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5915"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5915/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5916,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5915/revisions/5916"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5915"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5915"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5915"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5917,
    "date": "2021-06-27T07:00:48",
    "date_gmt": "2021-06-27T07:00:48",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5917"
    },
    "modified": "2021-06-27T07:00:48",
    "modified_gmt": "2021-06-27T07:00:48",
    "slug": "does-jquery-work-for-both-html-and-xml-documents",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/does-jquery-work-for-both-html-and-xml-documents/",
    "title": {
      "rendered": "Does jQuery work for both HTML and XML documents?"
    },
    "content": {
      "rendered": "\n<p>No. jQuery works only for HTML documents.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>No. jQuery works only for HTML documents.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5917"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5917"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5917/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5918,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5917/revisions/5918"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5917"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5917"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5917"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5919,
    "date": "2021-06-27T07:01:54",
    "date_gmt": "2021-06-27T07:01:54",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5919"
    },
    "modified": "2021-06-27T07:01:54",
    "modified_gmt": "2021-06-27T07:01:54",
    "slug": "what-are-the-jquery-functions-used-to-provide-effects",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-are-the-jquery-functions-used-to-provide-effects/",
    "title": {
      "rendered": "What are the jQuery functions used to provide effects?"
    },
    "content": {
      "rendered": "\n<p>Some of methods are listed below which provides the effect:</p>\n\n\n\n<ol><li><strong>toggle()</strong> :<ul><li>This function is used to check the visibility of selected elements to <strong>toggle</strong> between <code>hide()</code> and <code>show()</code> for the selected elements where:<ul><li><code>show()</code> is run when the element is hidden.</li><li><code>hide()</code> is run when the element is visible.</li></ul></li><li><strong>Syntax</strong>: <code>$(selector).toggle(speed, easing, callback)</code></li></ul></li><li><strong>slideDown()</strong> :<ul><li>This function is used to either check the visibility of selected elements or to show the hidden elements. We can use this function on the following types of hidden elements:<ul><li>Elements that are hidden using jQuery methods.</li><li>Elements that are hidden using <code>display: none</code> in the element’s CSS properties.</li></ul></li><li><strong>Syntax</strong>: <code>$(selector).slideDown( speed, easing, callback )</code></li></ul></li><li><strong>fadeOut()</strong>:<ul><li>This function is used to <strong>change the level of opacity</strong> for element of choice from visible to hidden. When used, the fadded element will not occupy any space in DOM.</li><li><strong>Syntax</strong>: <code>$(selector).fadeOut( speed, easing, callback )</code></li></ul></li><li><strong>fadeToggle()</strong>:<ul><li>This is used for toggling between the <code>fadeIn()</code> and <code>fadeOut()</code> methods.<ul><li>If elements are faded in state, fadeToggle() will fade out those elements.</li><li>If elements are faded out, fadeToggle() will fade in those elements.</li></ul></li><li><strong>Syntax</strong>: <code>$(selector).fadeToggle(speed, easing, callback)</code></li></ul></li><li><strong>animate():</strong><ul><li>The method performs custom animation of a set of CSS properties. This method changes an element from one state to another with CSS styles.</li><li>The CSS property value is changed gradually, to create an animated effect.</li><li>Syntax: <code>(selector).animate({styles},speed,easing,callback)</code> where “styles” is a required field that specifies one or more CSS properties/values to animate. The properties needs to be mentioned in camel casing style.</li></ul><ul><li>The parameters “speed”, “easing” and “callback” in the syntaxes of the above methods represent:<ul><li><strong>speed</strong>: Optional parameter and used for specifying the speed of the effect. The default value is 400 millisecond. The possible value of speed are “slow”, “fast” or some number in milliseconds.</li><li><strong>easing</strong>: Again optional parameter which is used for specifying the speed of element to different types of animation. The default value is “swing”. The possible value of easing are “swing” and “linear”.</li><li><strong>callback</strong>: Optional parameter. The callback function specified here is executed <strong>after</strong> the effect method is completed. </li></ul></li></ul></li></ol>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Some of methods are listed below which provides the effect: toggle() : This function is used to check the visibility of selected elements to toggle between hide() and show() for the selected elements where: show() is run when the element is hidden. hide() is run when the element is visible. Syntax: $(selector).toggle(speed, easing, callback) slideDown() : This function is used to either check the visibility of [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5919"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5919"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5919/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5920,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5919/revisions/5920"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5919"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5919"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5919"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5921,
    "date": "2021-06-27T07:02:17",
    "date_gmt": "2021-06-27T07:02:17",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5921"
    },
    "modified": "2021-06-27T07:02:17",
    "modified_gmt": "2021-06-27T07:02:17",
    "slug": "what-is-the-use-of-css-method-in-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-is-the-use-of-css-method-in-jquery/",
    "title": {
      "rendered": "What is the use of css() method in jQuery?"
    },
    "content": {
      "rendered": "\n<p>The <code>css()</code> method is used to <strong>change style property</strong> of the selected element.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The css() method is used to change style property of the selected element.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5921"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5921"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5921/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5922,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5921/revisions/5922"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5921"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5921"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5921"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5923,
    "date": "2021-06-27T07:02:36",
    "date_gmt": "2021-06-27T07:02:36",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5923"
    },
    "modified": "2021-06-27T07:02:36",
    "modified_gmt": "2021-06-27T07:02:36",
    "slug": "what-are-events-in-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-are-events-in-jquery/",
    "title": {
      "rendered": "What are events in jQuery?"
    },
    "content": {
      "rendered": "\n<p>User actions on a webpage are called events and handling responses to those is called event handling. jQuery provides simple methods for attaching event handlers to selected elements. When an event occurs, the provided function is executed.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>User actions on a webpage are called events and handling responses to those is called event handling. jQuery provides simple methods for attaching event handlers to selected elements. When an event occurs, the provided function is executed.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5923"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5923"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5923/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5924,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5923/revisions/5924"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5923"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5923"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5923"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5925,
    "date": "2021-06-27T07:02:52",
    "date_gmt": "2021-06-27T07:02:52",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5925"
    },
    "modified": "2021-06-27T07:02:52",
    "modified_gmt": "2021-06-27T07:02:52",
    "slug": "what-is-the-significance-of-jquery-length",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-is-the-significance-of-jquery-length/",
    "title": {
      "rendered": "What is the significance of jQuery.length?"
    },
    "content": {
      "rendered": "\n<p><code>jQuery.length</code> property is used to <strong>count number of the elements</strong> of the jQuery object.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>jQuery.length property is used to count number of the elements of the jQuery object.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5925"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5925"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5925/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5926,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5925/revisions/5926"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5925"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5925"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5925"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5927,
    "date": "2021-06-27T07:03:49",
    "date_gmt": "2021-06-27T07:03:49",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5927"
    },
    "modified": "2021-06-27T07:03:49",
    "modified_gmt": "2021-06-27T07:03:49",
    "slug": "what-is-jquery-click-event",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-is-jquery-click-event/",
    "title": {
      "rendered": "What is jQuery click event?"
    },
    "content": {
      "rendered": "\n<ul><li>jQuery click event happens when we click on an HTML element.</li><li>jQuery provides a method <code>click()</code> method that aids to trigger the click event.</li><li>For example <code>$(“p”).click()</code> will trigger the click event whenever the elements with paragraph tag is clicked on a browser page.</li><li><strong>Syntax</strong>:</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>$(selector).click(function(){\r\n  //code that runs when the click event is triggered\r\n});\r</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>jQuery click event happens when we click on an HTML element. jQuery provides a method click() method that aids to trigger the click event. For example $(“p”).click() will trigger the click event whenever the elements with paragraph tag is clicked on a browser page. Syntax:</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5927"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5927"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5927/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5928,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5927/revisions/5928"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5927"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5927"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5927"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5929,
    "date": "2021-06-27T07:04:17",
    "date_gmt": "2021-06-27T07:04:17",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5929"
    },
    "modified": "2021-06-27T07:05:56",
    "modified_gmt": "2021-06-27T07:05:56",
    "slug": "can-you-tell-something-about-jquery-each-method",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/can-you-tell-something-about-jquery-each-method/",
    "title": {
      "rendered": "Can you tell something about jQuery each() method?"
    },
    "content": {
      "rendered": "\n<ul><li>The each() method in jQuery allows us to loop through different datasets such as arrays or objects (even DOM objects).</li><li>It can be used to loop through a number of DOM objects from the same selectors.</li><li>For example, if you want to add a width=“600” to all the images in a page then we select all images and loop through each of them and add&nbsp;<code>width = \"600\"</code>&nbsp;to each tag. We can write the code as below:</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>$(\"img\").each(function(im){\n    $(this).attr(\"width\",\"600\")\n});\n</code></pre>\n\n\n\n<ul><li>$ is a jQuery object definer. In the above syntax, “this” is a DOM object and we can apply jQuery functions to only jQuery objects which is why we convert the DOM object to jQuery object by wrapping it inside the&nbsp;<code>$</code>&nbsp;definer.</li><li>We can also use each() to loop through the arrays of data and get the index and the value of the position of data inside the array.</li><li>For example,</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>var list = &#91;\"InterviewBit\", \"jQuery\", \"Questions\"];\r\n$.each(list, function(index, value){\r\n    console.log(index + \" \"+ value);\r\n})\r\n</code></pre>\n\n\n\n<p>The above code prints</p>\n\n\n\n<pre class=\"wp-block-code\"><code>0 InterviewBit\r\n1 jQuery\r\n2 Questions\r\n</code></pre>\n\n\n\n<p>The above code prints:</p>\n\n\n\n<pre class=\"wp-block-code\"><code>name - InterviewBit\r\ntype - jQuery\r\n</code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The each() method in jQuery allows us to loop through different datasets such as arrays or objects (even DOM objects). It can be used to loop through a number of DOM objects from the same selectors. For example, if you want to add a width=“600” to all the images in a page then we select [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5929"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5929"
        }
      ],
      "version-history": [
        {
          "count": 3,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5929/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5933,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5929/revisions/5933"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5929"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5929"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5929"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5934,
    "date": "2021-06-27T07:06:14",
    "date_gmt": "2021-06-27T07:06:14",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5934"
    },
    "modified": "2021-06-27T07:06:14",
    "modified_gmt": "2021-06-27T07:06:14",
    "slug": "what-is-the-difference-between-javascript-and-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-is-the-difference-between-javascript-and-jquery/",
    "title": {
      "rendered": "What is the difference between javascript and jquery?"
    },
    "content": {
      "rendered": "\n<ul><li>JavaScript is an interpreted language written in C and is combination of ECMAScript and DOM where jQuery is a JavaScript library developed to run things faster and make things simplified for JavaScript. jQuery doesnt have the ECMAScript.</li><li>JavaScript requires long lines of code to code a functionality where in case of jQuery, just import the library and call the functions which would reduce the programmer’s effort of coding.</li><li>JavaScript doesnt have the cross browser compatible functionality which is why a developer has to write code manually to implement the functionality. Whereas the cross browser code compatibility is inbuilt in jQuery.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>JavaScript is an interpreted language written in C and is combination of ECMAScript and DOM where jQuery is a JavaScript library developed to run things faster and make things simplified for JavaScript. jQuery doesnt have the ECMAScript. JavaScript requires long lines of code to code a functionality where in case of jQuery, just import the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5934"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5934"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5934/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5935,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5934/revisions/5935"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5934"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5934"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5934"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5936,
    "date": "2021-06-27T07:06:32",
    "date_gmt": "2021-06-27T07:06:32",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5936"
    },
    "modified": "2021-06-27T07:06:32",
    "modified_gmt": "2021-06-27T07:06:32",
    "slug": "what-are-the-selectors-in-jquery-how-many-types-of-selectors-in-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-are-the-selectors-in-jquery-how-many-types-of-selectors-in-jquery/",
    "title": {
      "rendered": "What are the selectors in jQuery? How many types of selectors in jQuery?"
    },
    "content": {
      "rendered": "\n<p>In order to work with any element on the web page, we would first need to find it. Selectors find the HTML elements in jQuery. Some of the most commonly used and basic selectors are:</p>\n\n\n\n<ul><li class=\"\">Name: Used to select all elements which matches the given element Name.</li><li class=\"\">#ID: Used to select a single element which matches with the given ID</li><li class=\"\">.Class: Used to select all elements which match with the given Class.</li><li class=\"\">Universal (*): Used to select all elements available in a DOM.</li><li class=\"\">Multiple Elements E, F, G: Used to selects the combined results of all the specified selectors E, F or G.</li><li class=\"\">Attribute Selector: Used to select elements based on its attribute value.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In order to work with any element on the web page, we would first need to find it. Selectors find the HTML elements in jQuery. Some of the most commonly used and basic selectors are: Name: Used to select all elements which matches the given element Name. #ID: Used to select a single element which [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5936"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5936"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5936/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5937,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5936/revisions/5937"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5936"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5936"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5936"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5938,
    "date": "2021-06-27T07:06:50",
    "date_gmt": "2021-06-27T07:06:50",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5938"
    },
    "modified": "2021-06-27T07:06:50",
    "modified_gmt": "2021-06-27T07:06:50",
    "slug": "explain-how-css-classes-can-be-manipulated-in-html-using-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/explain-how-css-classes-can-be-manipulated-in-html-using-jquery/",
    "title": {
      "rendered": "Explain how CSS classes can be manipulated in HTML using jQuery."
    },
    "content": {
      "rendered": "\n<ul><li>Query provides several methods to manipulate the CSS classes assigned to HTML elements. The most important methods are addClass(), removeClass() and toggleClass().</li><li><strong>addClass()</strong>: This method adds one or more classes to the selected elements.<ul><li>Syntax:&nbsp;<code>$(selector).addClass(className);</code></li><li class=\"\">You can also add multiple classes to the selector. Syntax:<code>$(selector).addClass(class1, class2);</code></li></ul></li><li><strong>removeClass()</strong>: Similar to adding class, you can also remove the classes from the elements by using this method.<ul><li class=\"\">The removeClass() method can remove a single class, multiple classes, or all classes at once from the selected elements.</li><li class=\"\">Syntax:<ul><li class=\"\">For removing one class:&nbsp;<code>$(selector).removeClass(class1);</code></li><li class=\"\">For removing multiple class:&nbsp;<code>$(selector).removeClass(class1, class2, class 3);</code></li><li class=\"\">For removing all classes at once:&nbsp;<code>$(selector).removeClass()</code></li></ul></li></ul></li><li><strong>toggleClass()</strong>: This method is used for adding or removing one or more classes from the selected elements in such a way that if the selected element already has the class, then it is removed. Else if an element does not have the specified class, then it is added i.e. it&nbsp;<code>toggles</code>&nbsp;the application of classes.<ul><li class=\"\">Syntax:&nbsp;<code>$(selector).toggleClass(className);</code></li></ul></li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Query provides several methods to manipulate the CSS classes assigned to HTML elements. The most important methods are addClass(), removeClass() and toggleClass(). addClass(): This method adds one or more classes to the selected elements. Syntax:&nbsp;$(selector).addClass(className); You can also add multiple classes to the selector. Syntax:$(selector).addClass(class1, class2); removeClass(): Similar to adding class, you can also remove [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5938"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5938"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5938/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5939,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5938/revisions/5939"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5938"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5938"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5938"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5940,
    "date": "2021-06-27T07:07:34",
    "date_gmt": "2021-06-27T07:07:34",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5940"
    },
    "modified": "2021-06-27T07:07:34",
    "modified_gmt": "2021-06-27T07:07:34",
    "slug": "how-to-perform-jquery-ajax-requests",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/how-to-perform-jquery-ajax-requests/",
    "title": {
      "rendered": "How to perform jQuery AJAX requests?"
    },
    "content": {
      "rendered": "\n<ul><li>jQuery provides the <code>ajax()</code> method to perform an AJAX (asynchronous HTTP) request.</li><li>Syntax: <code>$.ajax({name:value, name:value, ... })</code>. The parameters specify one or more value of name-value pairs.<ul><li>url : this name specifies the URL to send the request to. Default is the current page.</li><li>success(result,status,xhr) : success callback function which runs when the request succeeds</li><li>error(xhr,status,error) : A function to run if the request fails.</li><li>async : Boolean value that indicates whether the request should be handled asynchronous or not. Default value is true.</li><li>complete(xhr,status) : A function to run when the request is completed (after success and error functions are handled)</li><li>xhr : A function used for creating the <code>XMLHttpRequest</code> object</li></ul></li><li>Example:</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>$.ajax({\r\n  url: \"resourceURL\", \r\n  async: false, \r\n  success: function(result){\r\n    $(\"div\").html(result);\r\n  },  \r\n  error: function(xhr){\r\n    alert(\"An error occured: \" + xhr.status + \" \" + xhr.statusText);\r\n  }\r\n});\r\n</code></pre>\n\n\n\n<p></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>jQuery provides the ajax() method to perform an AJAX (asynchronous HTTP) request. Syntax: $.ajax({name:value, name:value, &#8230; }). The parameters specify one or more value of name-value pairs. url : this name specifies the URL to send the request to. Default is the current page. success(result,status,xhr) : success callback function which runs when the request succeeds error(xhr,status,error) : A [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5940"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5940"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5940/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5941,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5940/revisions/5941"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5940"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5940"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5940"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5942,
    "date": "2021-06-27T07:08:18",
    "date_gmt": "2021-06-27T07:08:18",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5942"
    },
    "modified": "2021-06-27T07:08:18",
    "modified_gmt": "2021-06-27T07:08:18",
    "slug": "what-does-the-following-code-do",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-does-the-following-code-do/",
    "title": {
      "rendered": "What does the following code do?"
    },
    "content": {
      "rendered": "\n<pre class=\"wp-block-code\"><code>$( \"div#firstDiv, div.firstDiv, ol#items > &#91;name$='firstDiv']\" )\r\n</code></pre>\n\n\n\n<ul><li>The given code is an example of getting elements that satisfy multiple selectors at once. The function returns a jQuery object having the results of the query.</li><li>The given code does a query to retrieve those&nbsp;<code>&lt;div&gt;</code>&nbsp;element with the id value&nbsp;<code>firstDiv</code>&nbsp;along with all&nbsp;<code>&lt;div&gt;</code>&nbsp;elements that has the class value&nbsp;<code>firstDiv</code>&nbsp;and all elements that are children of the&nbsp;<code>&lt;ol id=\"items\"&gt;</code>&nbsp;element and whose name attribute ends with the string&nbsp;<code>firstDiv</code>.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The given code is an example of getting elements that satisfy multiple selectors at once. The function returns a jQuery object having the results of the query. The given code does a query to retrieve those&nbsp;&lt;div&gt;&nbsp;element with the id value&nbsp;firstDiv&nbsp;along with all&nbsp;&lt;div&gt;&nbsp;elements that has the class value&nbsp;firstDiv&nbsp;and all elements that are children of the&nbsp;&lt;ol id=&#8221;items&#8221;&gt;&nbsp;element [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5942"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5942"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5942/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5943,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5942/revisions/5943"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5942"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5942"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5942"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5944,
    "date": "2021-06-27T07:09:20",
    "date_gmt": "2021-06-27T07:09:20",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5944"
    },
    "modified": "2021-06-27T07:09:20",
    "modified_gmt": "2021-06-27T07:09:20",
    "slug": "consider-the-following-code-that-exists-in-following-html-with-the-css",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/consider-the-following-code-that-exists-in-following-html-with-the-css/",
    "title": {
      "rendered": "Consider the following code that exists in following HTML with the CSS:"
    },
    "content": {
      "rendered": "\n<pre class=\"wp-block-code\"><code>&lt;div id=\"expand\">&lt;/div>\r\n\r\n&lt;style>\r\n  div#expand{\r\n    width: 50px;\r\n    height: 50px;\r\n    background-color: gray;\r\n  }\r\n&lt;/style>\r\n</code></pre>\n\n\n\n<ul><li><strong>Write jQuery code to animate the #expand div, expanding it from 50 * 50 pixels to 300 * 300 pixels within five seconds.</strong></li><li>We can do this by using the animate() function. We first need to have access to the div element which has id value of expand and then apply animate function on the element as follows:</li></ul>\n\n\n\n<pre class=\"wp-block-code\"><code>$(\"#expand\").animate(\r\n  {\r\n    width: \"300px\",\r\n    height: \"300px\",\r\n  },\r\n  5000 \r\n);\r\n</code></pre>\n\n\n\n<p></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Write jQuery code to animate the #expand div, expanding it from 50 * 50 pixels to 300 * 300 pixels within five seconds. We can do this by using the animate() function. We first need to have access to the div element which has id value of expand and then apply animate function on the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5944"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5944"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5944/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5945,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5944/revisions/5945"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5944"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5944"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5944"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5946,
    "date": "2021-06-27T07:10:59",
    "date_gmt": "2021-06-27T07:10:59",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5946"
    },
    "modified": "2021-06-27T07:10:59",
    "modified_gmt": "2021-06-27T07:10:59",
    "slug": "what-does-the-following-code-do-2",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-does-the-following-code-do-2/",
    "title": {
      "rendered": "What does the following code do?"
    },
    "content": {
      "rendered": "\n<pre class=\"wp-block-code\"><code>$( \"div\" ).css( \"width\", \"500px\" )\r\n          .add( \"p\" )\r\n          .css( \"background-color\", \"yellow\" );\r\n</code></pre>\n\n\n\n<ul><li>The given code first selects all the&nbsp;<code>&lt;div&gt;</code>&nbsp;elements and applies width of 500px to them and adds all the&nbsp;<code>&lt;p&gt;</code>&nbsp;elements to the elements selection after which the code can finally change the background color to yellow for all the&nbsp;<code>&lt;div&gt;</code>&nbsp;and&nbsp;<code>&lt;p&gt;</code>&nbsp;elements</li><li>The given code is an example of method chaining in jQuery which is used to accomplish a couple of things in one single instruction.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The given code first selects all the&nbsp;&lt;div&gt;&nbsp;elements and applies width of 500px to them and adds all the&nbsp;&lt;p&gt;&nbsp;elements to the elements selection after which the code can finally change the background color to yellow for all the&nbsp;&lt;div&gt;&nbsp;and&nbsp;&lt;p&gt;&nbsp;elements The given code is an example of method chaining in jQuery which is used to accomplish a couple [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5946"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5946"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5946/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5947,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5946/revisions/5947"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5946"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5946"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5946"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5948,
    "date": "2021-06-27T07:11:20",
    "date_gmt": "2021-06-27T07:11:20",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5948"
    },
    "modified": "2021-06-27T07:11:20",
    "modified_gmt": "2021-06-27T07:11:20",
    "slug": "can-you-explain-the-difference-between-jquery-get-and-jquery-ajax",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/can-you-explain-the-difference-between-jquery-get-and-jquery-ajax/",
    "title": {
      "rendered": "Can you explain the difference between jQuery.get() and jQuery.ajax()?"
    },
    "content": {
      "rendered": "\n<ul><li><code>jQuery.ajax()</code>&nbsp;allows the creation of highly-customized AJAX requests, with options for how long to wait for a response, what to do once the request is successful, how to handle a failure scenarios, whether the request to be sent is blocking (synchronous) or non-blocking (asynchronous), what format to expect as the response, and many more customizable options.</li><li><code>jQuery.get()</code>&nbsp;is uses&nbsp;<code>jQuery.ajax()</code>&nbsp;underneath to create an AJAX request typically meant for simple retrieval of information.<ul><li class=\"\">There are various other pre-built AJAX requests given by jQuery such as:<ul><li class=\"\"><code>jQuery.post()</code>&nbsp;for performing post requests</li><li class=\"\"><code>jQuery.getScript()</code>&nbsp;meant for loading and then executing a JavaScript file from the server using GET request.</li><li class=\"\"><code>jQuery.getJSON()</code>&nbsp;for loading JSON-encoded data from the server using a GET HTTP request.</li></ul></li></ul></li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>jQuery.ajax()&nbsp;allows the creation of highly-customized AJAX requests, with options for how long to wait for a response, what to do once the request is successful, how to handle a failure scenarios, whether the request to be sent is blocking (synchronous) or non-blocking (asynchronous), what format to expect as the response, and many more customizable options. [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5948"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5948"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5948/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5949,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5948/revisions/5949"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5948"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5948"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5948"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5950,
    "date": "2021-06-27T07:11:47",
    "date_gmt": "2021-06-27T07:11:47",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5950"
    },
    "modified": "2021-06-27T07:11:47",
    "modified_gmt": "2021-06-27T07:11:47",
    "slug": "which-of-the-two-lines-of-code-below-is-more-efficient-and-why",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/which-of-the-two-lines-of-code-below-is-more-efficient-and-why/",
    "title": {
      "rendered": "Which of the two lines of code below is more efficient and why?"
    },
    "content": {
      "rendered": "\n<ul><li>The code document.getElementById( &#8220;interviewBit&#8221; ); is more efficient because its the pure JavaScript version.</li><li>The reason being jQuery is built on top of JavaScript and internally uses its methods to make DOM manipulation easier. This introduces some performance overhead. We need to remember that jQuery is not always better than pure JavaScript and we need to use it only if it adds advantage to our project.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The code document.getElementById( &#8220;interviewBit&#8221; ); is more efficient because its the pure JavaScript version. The reason being jQuery is built on top of JavaScript and internally uses its methods to make DOM manipulation easier. This introduces some performance overhead. We need to remember that jQuery is not always better than pure JavaScript and we need [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5950"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5950"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5950/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5951,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5950/revisions/5951"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5950"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5950"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5950"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5952,
    "date": "2021-06-27T07:12:04",
    "date_gmt": "2021-06-27T07:12:04",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5952"
    },
    "modified": "2021-06-27T07:12:04",
    "modified_gmt": "2021-06-27T07:12:04",
    "slug": "can-you-write-a-jquery-code-selector-that-needs-to-be-used-for-querying-all-elements-whose-id-ends-with-string-ib",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/can-you-write-a-jquery-code-selector-that-needs-to-be-used-for-querying-all-elements-whose-id-ends-with-string-ib/",
    "title": {
      "rendered": "Can you write a jQuery code selector that needs to be used for querying all elements whose ID ends with string “IB”?"
    },
    "content": {
      "rendered": "\n<ul><li>We can use the following selector:&nbsp;<code>$(\"[id$='IB']\")</code></li></ul>\n\n\n\n<p></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>We can use the following selector:&nbsp;$(&#8220;[id$=&#8217;IB&#8217;]&#8221;)</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5952"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5952"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5952/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5953,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5952/revisions/5953"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5952"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5952"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5952"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5954,
    "date": "2021-06-27T07:12:22",
    "date_gmt": "2021-06-27T07:12:22",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5954"
    },
    "modified": "2021-06-27T07:12:22",
    "modified_gmt": "2021-06-27T07:12:22",
    "slug": "explain-the-promise-method-in-jquery",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/explain-the-promise-method-in-jquery/",
    "title": {
      "rendered": "Explain the .promise() method in jQuery."
    },
    "content": {
      "rendered": "\n<ul><li>The&nbsp;<code>.promise()</code>&nbsp;method returns a dynamically generated promise that is resolved when&nbsp;<strong>all actions</strong>&nbsp;of a certain type bound to the collection, queued or not,&nbsp;<strong>have ended.</strong></li><li>The method takes two optional arguments:<ul><li class=\"\"><strong>type</strong>&nbsp;&#8211; The default type is “fx” which indicates that the returned promise is resolved only when all animations of the selected elements have been completed.</li><li class=\"\"><strong>target</strong>&nbsp;&#8211; If a target object is specified,&nbsp;<code>.promise()</code>&nbsp;will attach to promise to that specified object and then return it rather than creating a new one.</li></ul></li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The&nbsp;.promise()&nbsp;method returns a dynamically generated promise that is resolved when&nbsp;all actions&nbsp;of a certain type bound to the collection, queued or not,&nbsp;have ended. The method takes two optional arguments: type&nbsp;&#8211; The default type is “fx” which indicates that the returned promise is resolved only when all animations of the selected elements have been completed. target&nbsp;&#8211; If [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5954"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5954"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5954/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5955,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5954/revisions/5955"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5954"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5954"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5954"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5956,
    "date": "2021-06-27T07:13:06",
    "date_gmt": "2021-06-27T07:13:06",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5956"
    },
    "modified": "2021-06-27T07:13:06",
    "modified_gmt": "2021-06-27T07:13:06",
    "slug": "consider-the-below-code-snippet-and-assume-that-there-are-5-div-elements-on-the-page-what-is-the-difference-between-the-start-and-end-times-displayed",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/consider-the-below-code-snippet-and-assume-that-there-are-5-div-elements-on-the-page-what-is-the-difference-between-the-start-and-end-times-displayed/",
    "title": {
      "rendered": "Consider the below code snippet and assume that there are 5&nbsp;<code>&lt;div&gt;</code>&nbsp;elements on the page. What is the difference between the start and end times displayed?"
    },
    "content": {
      "rendered": "\n<pre class=\"wp-block-code\"><code>function getMinsSeconds() {\r\n  var dt = new Date();\r\n  return dt.getMinutes()+\":\"+dt.getSeconds();\r\n}\r\n\r\n$( \"input\" ).on( \"click\", function() {\r\n  $( \"p\" ).append( \"Start: \" + getMinsSeconds() + \"&lt;br />\" );\r\n  $( \"div\" ).each(function( i ) {\r\n        $( this ).fadeOut( 1000 * ( i * 2 ) );\r\n  });\r\n  $( \"div\" ).promise().done(function() {\r\n        $( \"p\" ).append( \"End: \" + getMinsSeconds() + \"&lt;br />\" );\r\n  });\r\n});\r\n</code></pre>\n\n\n\n<ul><li>For the above code, the difference between the start and end times will be&nbsp;<strong>10 seconds</strong>.</li><li>This is because&nbsp;<code>.promise()</code>&nbsp;will wait for all&nbsp;<code>&lt;div&gt;</code>&nbsp;animations (here, all&nbsp;<code>fadeOut()</code>&nbsp;calls) to complete, the last one will complete 10 seconds (i.e. 5 * 2 = 10 seconds) after the&nbsp;<code>fadeOut()</code>&nbsp;starts.</li></ul>\n\n\n\n<p></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>For the above code, the difference between the start and end times will be&nbsp;10 seconds. This is because&nbsp;.promise()&nbsp;will wait for all&nbsp;&lt;div&gt;&nbsp;animations (here, all&nbsp;fadeOut()&nbsp;calls) to complete, the last one will complete 10 seconds (i.e. 5 * 2 = 10 seconds) after the&nbsp;fadeOut()&nbsp;starts.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5956"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5956"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5956/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5957,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5956/revisions/5957"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5956"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5956"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5956"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5959,
    "date": "2021-06-27T07:13:26",
    "date_gmt": "2021-06-27T07:13:26",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5959"
    },
    "modified": "2021-06-27T07:13:26",
    "modified_gmt": "2021-06-27T07:13:26",
    "slug": "can-you-tell-the-difference-between-prop-and-attrs",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/can-you-tell-the-difference-between-prop-and-attrs/",
    "title": {
      "rendered": "Can you tell the difference between prop() and attr()s?"
    },
    "content": {
      "rendered": "\n<ul><li>Both&nbsp;<code>prop()</code>&nbsp;and&nbsp;<code>attr()</code>&nbsp;can be used to get or set the value of the specified property of an element attribute.</li><li>The&nbsp;<code>attr()</code>&nbsp;gives the&nbsp;<strong>default value</strong>&nbsp;of a property whereas&nbsp;<code>prop()</code>&nbsp;returns its&nbsp;<strong>current value</strong>.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Both&nbsp;prop()&nbsp;and&nbsp;attr()&nbsp;can be used to get or set the value of the specified property of an element attribute. The&nbsp;attr()&nbsp;gives the&nbsp;default value&nbsp;of a property whereas&nbsp;prop()&nbsp;returns its&nbsp;current value.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5959"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5959"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5959/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5960,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5959/revisions/5960"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5959"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5959"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5959"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5961,
    "date": "2021-06-27T07:14:07",
    "date_gmt": "2021-06-27T07:14:07",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5961"
    },
    "modified": "2021-06-27T07:14:07",
    "modified_gmt": "2021-06-27T07:14:07",
    "slug": "what-are-all-the-ways-to-include-jquery-in-a-page",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-are-all-the-ways-to-include-jquery-in-a-page/",
    "title": {
      "rendered": "What are all the ways to include jQuery in a page?"
    },
    "content": {
      "rendered": "\n<p>Following are the ways to include jQuery in a page:</p>\n\n\n\n<ul><li>Local copy inside script tag</li><li>Remote copy of jQuery.com</li><li>Remote copy of Ajax API</li><li>Local copy of script manager control</li><li>Embedded script using client script object</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Following are the ways to include jQuery in a page: Local copy inside script tag Remote copy of jQuery.com Remote copy of Ajax API Local copy of script manager control Embedded script using client script object</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5961"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5961"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5961/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5962,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5961/revisions/5962"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5961"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5961"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5961"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 5963,
    "date": "2021-06-27T07:14:27",
    "date_gmt": "2021-06-27T07:14:27",
    "guid": {
      "rendered": "https://computerprogramming.foobrdigital.com/?p=5963"
    },
    "modified": "2021-06-27T07:14:27",
    "modified_gmt": "2021-06-27T07:14:27",
    "slug": "what-is-the-use-of-jquery-ajax-method",
    "status": "publish",
    "type": "post",
    "link": "https://computerprogramming.foobrdigital.com/what-is-the-use-of-jquery-ajax-method/",
    "title": {
      "rendered": "What is the use of jQuery.ajax method ()?"
    },
    "content": {
      "rendered": "\n<p>jQuery.ajax method is used for asynchronous HTTP requests.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>jQuery.ajax method is used for asynchronous HTTP requests.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [115],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5963"
        }
      ],
      "collection": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/comments?post=5963"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5963/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 5964,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/posts/5963/revisions/5964"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/media?parent=5963"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/categories?post=5963"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://computerprogramming.foobrdigital.com/wp-json/wp/v2/tags?post=5963"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  }
]
