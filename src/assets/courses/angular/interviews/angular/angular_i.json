[
  {
    "id": 2958,
    "date": "2020-10-21T12:20:15",
    "date_gmt": "2020-10-21T12:20:15",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2958"
    },
    "modified": "2020-11-18T07:15:49",
    "modified_gmt": "2020-11-18T07:15:49",
    "slug": "what-is-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-angular/",
    "title": {
      "rendered": "What is Angular?"
    },
    "content": {
      "rendered": "\n<p>Angular is a TypeScript-based open-source web application framework, developed and maintained by Google. It offers an easy and powerful way of building front-end web-based applications.</p>\n\n\n\n<p>Angular integrates a range of features like declarative templates, dependency injection, end-to-end tooling, etc. that facilitates web application development.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Angular is a TypeScript-based open-source web application framework, developed and maintained by Google. It offers an easy and powerful way of building front-end web-based applications. Angular integrates a range of features like declarative templates, dependency injection, end-to-end tooling, etc. that facilitates web application development.</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2958"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2958"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2958/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2959,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2958/revisions/2959"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2958"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2958"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2958"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2960,
    "date": "2020-10-21T12:20:48",
    "date_gmt": "2020-10-21T12:20:48",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2960"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "why-was-angular-introduced-as-a-client-side-framework",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/why-was-angular-introduced-as-a-client-side-framework/",
    "title": {
      "rendered": "Why was Angular introduced as a client-side framework?"
    },
    "content": {
      "rendered": "\n<p>raditionally, VanillaJS and jQuery were used by developers to develop dynamic websites. As the websites became more complex with added features and functionality, it was hard for the developers to maintain the code. Moreover, there was no provision of data handling facilities across the views by jQuery. So, Angular was built to address these issues, thus, making it easier for the developers by dividing code into smaller bits of information that are known as Components in Angular.&nbsp;</p>\n\n\n\n<p>Client-side frameworks permit the development of advanced web applications like SPAs which, if developed by VanillaJS, is a slower process.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>raditionally, VanillaJS and jQuery were used by developers to develop dynamic websites. As the websites became more complex with added features and functionality, it was hard for the developers to maintain the code. Moreover, there was no provision of data handling facilities across the views by jQuery. So, Angular was built to address these issues, [&hellip;]</p>\n",
      "protected": false
    },
    "author": 1,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2960"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/1"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2960"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2960/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2961,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2960/revisions/2961"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2960"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2960"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2960"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2969,
    "date": "2020-10-21T12:35:00",
    "date_gmt": "2020-10-21T12:35:00",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2969"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-is-the-purpose-of-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-the-purpose-of-angular/",
    "title": {
      "rendered": "What Is the Purpose of Angular?"
    },
    "content": {
      "rendered": "\n<p>The purpose of using Angular is to create fast, dynamic, and scalable web applications with ease, using components and directives.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The purpose of using Angular is to create fast, dynamic, and scalable web applications with ease, using components and directives.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2969"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2969"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2969/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2977,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2969/revisions/2977"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2969"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2969"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2969"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2975,
    "date": "2020-10-21T12:35:20",
    "date_gmt": "2020-10-21T12:35:20",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2975"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-are-the-essential-building-blocks-of-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-the-essential-building-blocks-of-angular/",
    "title": {
      "rendered": "What Are the Essential Building Blocks of Angular?"
    },
    "content": {
      "rendered": "\n<ol><li>The concept of Angular is based around Components, which is the first building block. Components follow tree structures where the App component is the root component. A component encapsulates the logic of the view, data, and the HTML mark-up. Every app must have at least one part. The more the parts of smaller sizes, the better is the readability of the code.</li><li>Module, the second most crucial building block is a container that groups related components. The default module in an application is the app module. Blades should be small in size and have related components.</li></ol>\n\n\n\n<ol><li>The concept of Angular is based around Components, which is the first building block. Components follow tree structures where the App component is the root component. A component encapsulates the logic of the view, data, and the HTML mark-up. Every app must have at least one part. The more the parts of smaller sizes, the better is the readability of the code.</li><li>Module, the second most crucial building block is a container that groups related components. The default module in an application is the app module. Blades should be small in size and have related components.</li></ol>\n\n\n\n<p>The other essential building blocks of Angular are:</p>\n\n\n\n<ul><li><strong>Templates:</strong>&nbsp;Templates are written in HTML and contain Angular elements and attributes. Models provide a dynamic view to the user by combining information from the controller and view and rendering it.</li><li><strong>Directives:</strong>&nbsp;Directives allow developers to add new HTML syntax, that is application-specific. The behavior is essentially added to the existing DOM elements.</li><li><strong>Services:</strong>&nbsp;Rather than calling the Http service, Angular allows for the creation of new service classes. When new Services are created in Angular, they can be used by different components.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The concept of Angular is based around Components, which is the first building block. Components follow tree structures where the App component is the root component. A component encapsulates the logic of the view, data, and the HTML mark-up. Every app must have at least one part. The more the parts of smaller sizes, the [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2975"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2975"
        }
      ],
      "version-history": [
        {
          "count": 2,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2975/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2979,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2975/revisions/2979"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2975"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2975"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2975"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2973,
    "date": "2020-10-21T12:35:49",
    "date_gmt": "2020-10-21T12:35:49",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2973"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "tell-us-the-difference-between-angular-and-angularjs",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/tell-us-the-difference-between-angular-and-angularjs/",
    "title": {
      "rendered": "Tell Us the Difference Between Angular and Angularjs"
    },
    "content": {
      "rendered": "\n<p>Here are the differences between both –</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>AngularJS</strong></td><td><strong>Angular</strong></td></tr><tr><td>Based on JavaScript</td><td>Based on TypeScript</td></tr><tr><td>Based on the MVC design pattern</td><td>Based on components, modules, and directives</td></tr><tr><td>No support for mobile app</td><td>Supports mobile</td></tr><tr><td>Can’t build SEO friendly applications</td><td>SEO friendly applications can be easily created</td></tr><tr><td>Dependency Injection tokens can only be strings. Also, only the injector is present.</td><td>DI Tokens can be of any type, for example, strings or class. Angular follows a tree-hierarchy for injectors starting with the root injector, and a nozzle for each component henceforth.</td></tr><tr><td>No support or backward compatibility</td><td>Backward compatibility can be done without issues. Also, there is a lot of support documentation for the same.</td></tr><tr><td>Uses $routeprovider.when() for routing</td><td>Routing is done using @RouteConfig[()]</td></tr><tr><td>Requires specific ng directive for each of property, event, and image</td><td>For event binding, () is used and for image or property binding [] is used</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Here are the differences between both – AngularJS Angular Based on JavaScript Based on TypeScript Based on the MVC design pattern Based on components, modules, and directives No support for mobile app Supports mobile Can’t build SEO friendly applications SEO friendly applications can be easily created Dependency Injection tokens can only be strings. Also, only [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2973"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2973"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2973/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2980,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2973/revisions/2980"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2973"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2973"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2973"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2971,
    "date": "2020-10-21T12:36:06",
    "date_gmt": "2020-10-21T12:36:06",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2971"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "mention-some-of-the-features-of-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/mention-some-of-the-features-of-angular/",
    "title": {
      "rendered": "Mention Some of the Features of Angular"
    },
    "content": {
      "rendered": "\n<p>Some important features are –</p>\n\n\n\n<ul><li>Component-based architecture – applications are written as a set of independent components.</li><li>Parts can be created, tested, integrated using Angular CLI.</li><li>Great support for complex animations without writing much code.</li><li>Because of the component router, Angular supports automatic code-splitting. Hence only the code required to render a particular view is loaded.</li><li>Cross-platform application development.</li><li>Template syntax for creating UI views.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Some important features are – Component-based architecture – applications are written as a set of independent components. Parts can be created, tested, integrated using Angular CLI. Great support for complex animations without writing much code. Because of the component router, Angular supports automatic code-splitting. Hence only the code required to render a particular view is [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2971"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2971"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2971/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2981,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2971/revisions/2981"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2971"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2971"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2971"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2976,
    "date": "2020-10-21T12:36:23",
    "date_gmt": "2020-10-21T12:36:23",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2976"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "discuss-some-advantages-of-using-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/discuss-some-advantages-of-using-angular/",
    "title": {
      "rendered": "Discuss Some Advantages of Using Angular"
    },
    "content": {
      "rendered": "\n<p>There are many advantages apart from the fact that Angular gives us a break from the MVC pattern, as it follows a Component-based structure. Here are some more critical benefits –</p>\n\n\n\n<ul><li>Supports two-way data binding.</li><li>Supports validations and template syntax (both angular and static).</li><li>We can add custom animations, directives, and services.</li><li>The event handling process is seamless.</li><li>Hierarchical Dependency Injection structure (Parent-child).</li><li>Provision to facilitate RESTful services and client-server communication.</li></ul>\n\n\n\n<p>As a follow-up, the interviewer(s) may ask you more about any of the above advantages. One or two lines should be sufficient. We will answer each as you read further questions.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>There are many advantages apart from the fact that Angular gives us a break from the MVC pattern, as it follows a Component-based structure. Here are some more critical benefits – Supports two-way data binding. Supports validations and template syntax (both angular and static). We can add custom animations, directives, and services. The event handling [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2976"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2976"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2976/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2982,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2976/revisions/2982"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2976"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2976"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2976"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2968,
    "date": "2020-10-21T12:36:41",
    "date_gmt": "2020-10-21T12:36:41",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2968"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "can-you-think-of-any-disadvantages-of-using-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/can-you-think-of-any-disadvantages-of-using-angular/",
    "title": {
      "rendered": "Can You Think of Any Disadvantages of Using Angular?"
    },
    "content": {
      "rendered": "\n<p>Not as a disadvantage, but in some scenarios, Angular may not be the right fit. For example, for short-term projects or light-weight websites that have more static content do not require a complex framework like Angular. Same way, apps that have a microservice design approach will find too many unused features if they use Angular since it is a complete solution. There is less flexibility with the developer to choose additional tools.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Not as a disadvantage, but in some scenarios, Angular may not be the right fit. For example, for short-term projects or light-weight websites that have more static content do not require a complex framework like Angular. Same way, apps that have a microservice design approach will find too many unused features if they use Angular [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2968"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2968"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2968/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2983,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2968/revisions/2983"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2968"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2968"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2968"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2970,
    "date": "2020-10-21T12:37:02",
    "date_gmt": "2020-10-21T12:37:02",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2970"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-is-angular-cli-how-do-you-use-it",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-angular-cli-how-do-you-use-it/",
    "title": {
      "rendered": "What Is Angular CLI? How Do You Use It?"
    },
    "content": {
      "rendered": "\n<p>Angular CLI automates the end-to-end development process. The app&#8217;s initialization, configuration, and development process become straightforward and easy. With a CLI (Command Line Interface), we can create a new project, add new features, and run tests (unit tests and end-to-end tests) by just typing a few simple commands. This way, development and testing processes both become faster.</p>\n\n\n\n<p>For example,</p>\n\n\n\n<p>To create a new application, we should type –Plain Text</p>\n\n\n\n<p>1</p>\n\n\n\n<pre class=\"wp-block-preformatted\">ng new &lt;appname&gt; [options]</pre>\n\n\n\n<p>2</p>\n\n\n\n<pre class=\"wp-block-preformatted\">to create a class using CLI (in Angular 7), we have to type –</pre>\n\n\n\n<p>3</p>\n\n\n\n<pre class=\"wp-block-preformatted\">ng generate class MySampleClass [options]</pre>\n\n\n\n<p>4</p>\n\n\n\n<pre class=\"wp-block-preformatted\">to generate a component,</pre>\n\n\n\n<p>5</p>\n\n\n\n<pre class=\"wp-block-preformatted\">ng g c &lt;componentname&gt;</pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Angular CLI automates the end-to-end development process. The app&#8217;s initialization, configuration, and development process become straightforward and easy. With a CLI (Command Line Interface), we can create a new project, add new features, and run tests (unit tests and end-to-end tests) by just typing a few simple commands. This way, development and testing processes both [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2970"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2970"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2970/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2984,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2970/revisions/2984"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2970"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2970"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2970"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2972,
    "date": "2020-10-21T12:37:20",
    "date_gmt": "2020-10-21T12:37:20",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2972"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-are-directives-in-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-directives-in-angular/",
    "title": {
      "rendered": "What Are Directives in Angular?"
    },
    "content": {
      "rendered": "\n<p>With directives, developers can write application-specific custom HTML syntax. The new language is written in the DOM, and the Angular compiler executes the directive functions when it finds a new HTML syntax. There are three types of directives – attribute, component, structural.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>With directives, developers can write application-specific custom HTML syntax. The new language is written in the DOM, and the Angular compiler executes the directive functions when it finds a new HTML syntax. There are three types of directives – attribute, component, structural.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2972"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2972"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2972/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2985,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2972/revisions/2985"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2972"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2972"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2972"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2974,
    "date": "2020-10-21T12:38:05",
    "date_gmt": "2020-10-21T12:38:05",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2974"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "mention-an-example-of-the-structural-directive",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/mention-an-example-of-the-structural-directive/",
    "title": {
      "rendered": "Mention an Example of the Structural Directive"
    },
    "content": {
      "rendered": "\n<p>Structural directives change the structure of DOM. Examples, *ngIf and *ngFor. Usage example.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;div *ngIf = “product” class=”name”>{{product.name}}&lt;/div></code></pre>\n\n\n\n<p>Same way.</p>\n\n\n\n<pre class=\"wp-block-code\"><code>&lt;ul> &lt;li *ngFor = “Show product list”>{{product.name}}&lt;/li> &lt;/ul> </code></pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Structural directives change the structure of DOM. Examples, *ngIf and *ngFor. Usage example. Same way.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2974"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2974"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2974/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2986,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2974/revisions/2986"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2974"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2974"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2974"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2967,
    "date": "2020-10-21T12:38:23",
    "date_gmt": "2020-10-21T12:38:23",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2967"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "how-is-dependency-injection-di-done-in-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/how-is-dependency-injection-di-done-in-angular/",
    "title": {
      "rendered": "How Is Dependency Injection (DI) Done in Angular?"
    },
    "content": {
      "rendered": "\n<p>In Angular, a class asks for services or objects when it is instantiated, which means if a class is invoked, it doesn’t create any objects, rather it depends on an external source to instantiate objects, services, or parameters. In this process, an injectable service is created and registered. Injectors can be configured in three different ways,</p>\n\n\n\n<ul><li>@Injectable() decorator for the service.</li><li>@NgModule for NgModule.</li><li>@Component for the component.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In Angular, a class asks for services or objects when it is instantiated, which means if a class is invoked, it doesn’t create any objects, rather it depends on an external source to instantiate objects, services, or parameters. In this process, an injectable service is created and registered. Injectors can be configured in three different [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2967"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2967"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2967/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2987,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2967/revisions/2987"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2967"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2967"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2967"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2966,
    "date": "2020-10-21T12:38:42",
    "date_gmt": "2020-10-21T12:38:42",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2966"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-are-templates-in-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-templates-in-angular/",
    "title": {
      "rendered": "What Are Templates in Angular?"
    },
    "content": {
      "rendered": "\n<p>The template is simply an HTML view where binding controls can display data to the properties of the Angular component. Templates can be defined inline using the template property as –</p>\n\n\n\n<p>Template:</p>\n\n\n\n<p><code>&lt;div&gt;My sample Template&lt;/div&gt;&nbsp;</code></p>\n\n\n\n<p>Or can be called from a different HTML file by using @Component decorator’s URL property –</p>\n\n\n\n<p><code>templateUrl: 'app/app.component.html'&nbsp;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The template is simply an HTML view where binding controls can display data to the properties of the Angular component. Templates can be defined inline using the template property as – Template: &lt;div&gt;My sample Template&lt;/div&gt;&nbsp; Or can be called from a different HTML file by using @Component decorator’s URL property – templateUrl: &#8216;app/app.component.html&#8217;&nbsp;</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2966"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2966"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2966/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2988,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2966/revisions/2988"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2966"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2966"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2966"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2965,
    "date": "2020-10-21T12:39:07",
    "date_gmt": "2020-10-21T12:39:07",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2965"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "how-are-angular-expressions-different-from-javascript-expressions",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/how-are-angular-expressions-different-from-javascript-expressions/",
    "title": {
      "rendered": "How Are Angular Expressions Different From Javascript Expressions?"
    },
    "content": {
      "rendered": "\n<p>Both are similar and can have operators, variables, and literals. However, some differences between both are –</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Angular expressions</strong></td><td><strong>JavaScript expressions</strong></td></tr><tr><td>Conditions, exceptions, and loops (control statements) cannot be used</td><td>All the control statements can be used</td></tr><tr><td>Regular expressions cannot be used</td><td>Regex is widely used</td></tr><tr><td>Filters can be used within the expression itself so that data is formatted before being displayed</td><td>Such a concept doesn’t exist</td></tr><tr><td>Expressions are evaluated against a scope object</td><td>Expressions are evaluated against the global window</td></tr><tr><td>Expression evaluation forgives to undefined or null</td><td>If there are issues in evaluating an expression or property, JS generates ReferenceError or TypeError.</td></tr><tr><td>Functions cannot be declared</td><td>Any number of functions can be declared</td></tr><tr><td>New, comma, bitwise, void operators cannot be used.</td><td>These are possible</td></tr></tbody></table></figure>\n\n\n\n<p>You can mention any 3-4 to the examiner. If they specifically ask, you can say that particular point of difference.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Both are similar and can have operators, variables, and literals. However, some differences between both are – Angular expressions JavaScript expressions Conditions, exceptions, and loops (control statements) cannot be used All the control statements can be used Regular expressions cannot be used Regex is widely used Filters can be used within the expression itself so [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2965"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2965"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2965/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2989,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2965/revisions/2989"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2965"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2965"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2965"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2964,
    "date": "2020-10-21T12:39:26",
    "date_gmt": "2020-10-21T12:39:26",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2964"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "explain-the-architecture-of-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/explain-the-architecture-of-angular/",
    "title": {
      "rendered": "Explain the Architecture of Angular"
    },
    "content": {
      "rendered": "\n<p>As we have seen in Question 2, Components, modules, templates, etc. are the main building blocks of Angular. All of these are again based on NgModules, which provide compilation context for components. When asked in the interview, you can talk about the essential building blocks and then draw the following diagram (source: angular documentation) to depict the relationship between each –</p>\n\n\n\n<p>You can see that the view is contained in the template, and properties are bound from components to the template. The DI services are injected by the injector into the parts as required. Directives are added to the model. Modules contain the core logic like services, values, functions, and components.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>As we have seen in Question 2, Components, modules, templates, etc. are the main building blocks of Angular. All of these are again based on NgModules, which provide compilation context for components. When asked in the interview, you can talk about the essential building blocks and then draw the following diagram (source: angular documentation) to depict [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2964"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2964"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2964/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2990,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2964/revisions/2990"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2964"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2964"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2964"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2963,
    "date": "2020-10-21T12:39:45",
    "date_gmt": "2020-10-21T12:39:45",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2963"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "tell-us-some-differences-between-component-and-directive",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/tell-us-some-differences-between-component-and-directive/",
    "title": {
      "rendered": "Tell Us Some Differences Between Component and Directive"
    },
    "content": {
      "rendered": "\n<p>The component is a specific type of directive, that has a view.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Component</strong></td><td><strong>Directive</strong></td></tr><tr><td>To register component, Annotation used is @Component</td><td>@Directive is used to register a directive</td></tr><tr><td>The primary purpose of ingredients is to break the complex application into smaller, more manageable parts (components)</td><td>Purpose of the `directive is to create new custom components that are reusable</td></tr><tr><td>Each DOM element can have only one component</td><td>Any number of directives can be used in one DOM element</td></tr><tr><td>Component mandatorily requires @View decorator, template, or template URL to specify the view.</td><td>A directive has nothing to do with views</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The component is a specific type of directive, that has a view. Component Directive To register component, Annotation used is @Component @Directive is used to register a directive The primary purpose of ingredients is to break the complex application into smaller, more manageable parts (components) Purpose of the `directive is to create new custom components [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2963"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2963"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2963/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 2991,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2963/revisions/2991"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2963"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2963"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2963"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3022,
    "date": "2020-10-23T04:54:50",
    "date_gmt": "2020-10-23T04:54:50",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3022"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "mention-some-of-the-features-of-angular-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/mention-some-of-the-features-of-angular-2/",
    "title": {
      "rendered": "Mention Some of the Features of Angular"
    },
    "content": {
      "rendered": "\n<p>&nbsp;Some important features are –</p>\n\n\n\n<ul><li>Component-based architecture – applications are written as a set of independent components.</li><li>Parts can be created, tested, integrated using Angular CLI.</li><li>Great support for complex animations without writing much code.</li><li>Because of the component router, Angular supports automatic code-splitting. Hence only the code required to render a particular view is loaded.</li><li>Cross-platform application development.</li><li>Template syntax for creating UI views.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>&nbsp;Some important features are – Component-based architecture – applications are written as a set of independent components. Parts can be created, tested, integrated using Angular CLI. Great support for complex animations without writing much code. Because of the component router, Angular supports automatic code-splitting. Hence only the code required to render a particular view is [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3022"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3022"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3022/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3027,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3022/revisions/3027"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3022"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3022"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3022"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3026,
    "date": "2020-10-23T04:55:03",
    "date_gmt": "2020-10-23T04:55:03",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3026"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "discuss-some-advantages-of-using-angular-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/discuss-some-advantages-of-using-angular-2/",
    "title": {
      "rendered": "Discuss Some Advantages of Using Angular"
    },
    "content": {
      "rendered": "\n<p>There are many advantages apart from the fact that Angular gives us a break from the MVC pattern, as it follows a Component-based structure. Here are some more critical benefits –</p>\n\n\n\n<ul><li>Supports two-way data binding.</li><li>Supports validations and template syntax (both angular and static).</li><li>We can add custom animations, directives, and services.</li><li>The event handling process is seamless.</li><li>Hierarchical Dependency Injection structure (Parent-child).</li><li>Provision to facilitate RESTful services and client-server communication.</li></ul>\n\n\n\n<p>As a follow-up, the interviewer(s) may ask you more about any of the above advantages. One or two lines should be sufficient. We will answer each as you read further questions.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>There are many advantages apart from the fact that Angular gives us a break from the MVC pattern, as it follows a Component-based structure. Here are some more critical benefits – Supports two-way data binding. Supports validations and template syntax (both angular and static). We can add custom animations, directives, and services. The event handling [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3026"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3026"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3026/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3028,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3026/revisions/3028"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3026"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3026"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3026"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3025,
    "date": "2020-10-23T04:56:02",
    "date_gmt": "2020-10-23T04:56:02",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3025"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "can-you-think-of-any-disadvantages-of-using-angular-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/can-you-think-of-any-disadvantages-of-using-angular-2/",
    "title": {
      "rendered": "Can You Think of Any Disadvantages of Using Angular?"
    },
    "content": {
      "rendered": "\n<p> Not as a disadvantage, but in some scenarios, Angular may not be the right fit. For example, for short-term projects or light-weight websites that have more static content do not require a complex framework like Angular. Same way, apps that have a microservice design approach will find too many unused features if they use Angular since it is a complete solution. There is less flexibility with the developer to choose additional tools.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p> Not as a disadvantage, but in some scenarios, Angular may not be the right fit. For example, for short-term projects or light-weight websites that have more static content do not require a complex framework like Angular. Same way, apps that have a microservice design approach will find too many unused features if they use Angular [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3025"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3025"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3025/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3029,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3025/revisions/3029"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3025"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3025"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3025"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3023,
    "date": "2020-10-23T04:56:21",
    "date_gmt": "2020-10-23T04:56:21",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3023"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-is-angular-cli-how-do-you-use-it-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-angular-cli-how-do-you-use-it-2/",
    "title": {
      "rendered": "What Is Angular CLI? How Do You Use It?"
    },
    "content": {
      "rendered": "\n<p>Angular CLI automates the end-to-end development process. The app&#8217;s initialization, configuration, and development process become straightforward and easy. With a CLI (Command Line Interface), we can create a new project, add new features, and run tests (unit tests and end-to-end tests) by just typing a few simple commands. This way, development and testing processes both become faster.</p>\n\n\n\n<p>For example,</p>\n\n\n\n<p>To create a new application, we should type –Plain Text</p>\n\n\n\n<p>1</p>\n\n\n\n<pre class=\"wp-block-preformatted\">ng new &lt;appname&gt; [options]</pre>\n\n\n\n<p>2</p>\n\n\n\n<pre class=\"wp-block-preformatted\">to create a class using CLI (in Angular 7), we have to type –</pre>\n\n\n\n<p>3</p>\n\n\n\n<pre class=\"wp-block-preformatted\">ng generate class MySampleClass [options]</pre>\n\n\n\n<p>4</p>\n\n\n\n<pre class=\"wp-block-preformatted\">to generate a component,</pre>\n\n\n\n<p>5</p>\n\n\n\n<pre class=\"wp-block-preformatted\">ng g c &lt;componentname&gt;</pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Angular CLI automates the end-to-end development process. The app&#8217;s initialization, configuration, and development process become straightforward and easy. With a CLI (Command Line Interface), we can create a new project, add new features, and run tests (unit tests and end-to-end tests) by just typing a few simple commands. This way, development and testing processes both [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3023"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3023"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3023/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3030,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3023/revisions/3030"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3023"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3023"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3023"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3024,
    "date": "2020-10-23T04:57:05",
    "date_gmt": "2020-10-23T04:57:05",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3024"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-are-directives-in-angular-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-directives-in-angular-2/",
    "title": {
      "rendered": "What Are Directives in Angular?"
    },
    "content": {
      "rendered": "\n<p>With directives, developers can write application-specific custom HTML syntax. The new language is written in the DOM, and the Angular compiler executes the directive functions when it finds a new HTML syntax. There are three types of directives – attribute, component, structural.</p>\n\n\n\n<h4>Question: Mention an Example of the Structural Directive</h4>\n\n\n\n<p><strong>Answer:</strong>&nbsp;Structural directives change the structure of DOM. Examples, *ngIf and *ngFor. Usage example.</p>\n\n\n\n<p><code>&lt;div *ngIf = “product” class=”name”&gt;{{product.name}}&lt;/div&gt;</code></p>\n\n\n\n<p>Same way.</p>\n\n\n\n<p><code>&lt;ul&gt; &lt;li *ngFor = “Show product list”&gt;{{product.name}}&lt;/li&gt; &lt;/ul&gt;&nbsp;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>With directives, developers can write application-specific custom HTML syntax. The new language is written in the DOM, and the Angular compiler executes the directive functions when it finds a new HTML syntax. There are three types of directives – attribute, component, structural. Question: Mention an Example of the Structural Directive Answer:&nbsp;Structural directives change the structure [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3024"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3024"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3024/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3031,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3024/revisions/3031"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3024"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3024"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3024"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3021,
    "date": "2020-10-23T04:57:19",
    "date_gmt": "2020-10-23T04:57:19",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3021"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "how-is-dependency-injection-di-done-in-angular-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/how-is-dependency-injection-di-done-in-angular-2/",
    "title": {
      "rendered": "How Is Dependency Injection (DI) Done in Angular?"
    },
    "content": {
      "rendered": "\n<p>In Angular, a class asks for services or objects when it is instantiated, which means if a class is invoked, it doesn’t create any objects, rather it depends on an external source to instantiate objects, services, or parameters. In this process, an injectable service is created and registered. Injectors can be configured in three different ways,</p>\n\n\n\n<ul><li>@Injectable() decorator for the service.</li><li>@NgModule for NgModule.</li><li>@Component for the component.</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>In Angular, a class asks for services or objects when it is instantiated, which means if a class is invoked, it doesn’t create any objects, rather it depends on an external source to instantiate objects, services, or parameters. In this process, an injectable service is created and registered. Injectors can be configured in three different [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3021"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3021"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3021/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3032,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3021/revisions/3032"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3021"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3021"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3021"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3019,
    "date": "2020-10-23T04:57:38",
    "date_gmt": "2020-10-23T04:57:38",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3019"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-are-templates-in-angular-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-templates-in-angular-2/",
    "title": {
      "rendered": "What Are Templates in Angular?"
    },
    "content": {
      "rendered": "\n<p>The template is simply an HTML view where binding controls can display data to the properties of the Angular component. Templates can be defined inline using the template property as –</p>\n\n\n\n<p>Template:</p>\n\n\n\n<p><code>&lt;div&gt;My sample Template&lt;/div&gt;&nbsp;</code></p>\n\n\n\n<p>Or can be called from a different HTML file by using @Component decorator’s URL property –</p>\n\n\n\n<p><code>templateUrl: 'app/app.component.html'&nbsp;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The template is simply an HTML view where binding controls can display data to the properties of the Angular component. Templates can be defined inline using the template property as – Template: &lt;div&gt;My sample Template&lt;/div&gt;&nbsp; Or can be called from a different HTML file by using @Component decorator’s URL property – templateUrl: &#8216;app/app.component.html&#8217;&nbsp;</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3019"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3019"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3019/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3033,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3019/revisions/3033"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3019"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3019"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3019"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3018,
    "date": "2020-10-23T04:57:51",
    "date_gmt": "2020-10-23T04:57:51",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3018"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "how-are-angular-expressions-different-from-javascript-expressions-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/how-are-angular-expressions-different-from-javascript-expressions-2/",
    "title": {
      "rendered": "How Are Angular Expressions Different From Javascript Expressions?"
    },
    "content": {
      "rendered": "\n<p>&nbsp;Both are similar and can have operators, variables, and literals. However, some differences between both are –</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Angular expressions</strong></td><td><strong>JavaScript expressions</strong></td></tr><tr><td>Conditions, exceptions, and loops (control statements) cannot be used</td><td>All the control statements can be used</td></tr><tr><td>Regular expressions cannot be used</td><td>Regex is widely used</td></tr><tr><td>Filters can be used within the expression itself so that data is formatted before being displayed</td><td>Such a concept doesn’t exist</td></tr><tr><td>Expressions are evaluated against a scope object</td><td>Expressions are evaluated against the global window</td></tr><tr><td>Expression evaluation forgives to undefined or null</td><td>If there are issues in evaluating an expression or property, JS generates ReferenceError or TypeError.</td></tr><tr><td>Functions cannot be declared</td><td>Any number of functions can be declared</td></tr><tr><td>New, comma, bitwise, void operators cannot be used.</td><td>These are possible</td></tr></tbody></table></figure>\n\n\n\n<p>You can mention any 3-4 to the examiner. If they specifically ask, you can say that particular point of difference.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>&nbsp;Both are similar and can have operators, variables, and literals. However, some differences between both are – Angular expressions JavaScript expressions Conditions, exceptions, and loops (control statements) cannot be used All the control statements can be used Regular expressions cannot be used Regex is widely used Filters can be used within the expression itself so [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3018"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3018"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3018/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3034,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3018/revisions/3034"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3018"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3018"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3018"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3017,
    "date": "2020-10-23T04:58:13",
    "date_gmt": "2020-10-23T04:58:13",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3017"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "explain-the-architecture-of-angular-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/explain-the-architecture-of-angular-2/",
    "title": {
      "rendered": "Explain the Architecture of Angular"
    },
    "content": {
      "rendered": "\n<p>As we have seen in Question 2, Components, modules, templates, etc. are the main building blocks of Angular. All of these are again based on NgModules, which provide compilation context for components. When asked in the interview, you can talk about the essential building blocks and then draw the following diagram (source: angular documentation) to depict the relationship between each –</p>\n\n\n\n<p>You can see that the view is contained in the template, and properties are bound from components to the template. The DI services are injected by the injector into the parts as required. Directives are added to the model. Modules contain the core logic like services, values, functions, and components.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>As we have seen in Question 2, Components, modules, templates, etc. are the main building blocks of Angular. All of these are again based on NgModules, which provide compilation context for components. When asked in the interview, you can talk about the essential building blocks and then draw the following diagram (source: angular documentation) to depict [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3017"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3017"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3017/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3035,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3017/revisions/3035"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3017"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3017"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3017"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3020,
    "date": "2020-10-23T04:58:29",
    "date_gmt": "2020-10-23T04:58:29",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3020"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "tell-us-some-differences-between-component-and-directive-2",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/tell-us-some-differences-between-component-and-directive-2/",
    "title": {
      "rendered": "Tell Us Some Differences Between Component and Directive"
    },
    "content": {
      "rendered": "\n<p>The component is a specific type of directive, that has a view.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Component</strong></td><td><strong>Directive</strong></td></tr><tr><td>To register component, Annotation used is @Component</td><td>@Directive is used to register a directive</td></tr><tr><td>The primary purpose of ingredients is to break the complex application into smaller, more manageable parts (components)</td><td>Purpose of the `directive is to create new custom components that are reusable</td></tr><tr><td>Each DOM element can have only one component</td><td>Any number of directives can be used in one DOM element</td></tr><tr><td>Component mandatorily requires @View decorator, template, or template URL to specify the view.</td><td>A directive has nothing to do with views</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The component is a specific type of directive, that has a view. Component Directive To register component, Annotation used is @Component @Directive is used to register a directive The primary purpose of ingredients is to break the complex application into smaller, more manageable parts (components) Purpose of the `directive is to create new custom components [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3020"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3020"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3020/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3036,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3020/revisions/3036"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3020"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3020"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3020"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3015,
    "date": "2020-10-23T04:58:40",
    "date_gmt": "2020-10-23T04:58:40",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3015"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-is-the-primary-language-used-in-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-the-primary-language-used-in-angular/",
    "title": {
      "rendered": "What Is the Primary Language Used in Angular?"
    },
    "content": {
      "rendered": "\n<p>Angular is based on TypeScript and HTML. HTML is used for the template, and TypeScript (a superset of JavaScript) is used for components.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Angular is based on TypeScript and HTML. HTML is used for the template, and TypeScript (a superset of JavaScript) is used for components.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3015"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3015"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3015/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3037,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3015/revisions/3037"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3015"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3015"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3015"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3016,
    "date": "2020-10-23T04:59:00",
    "date_gmt": "2020-10-23T04:59:00",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3016"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-is-data-binding-and-what-are-the-different-categories-of-data-binding",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-data-binding-and-what-are-the-different-categories-of-data-binding/",
    "title": {
      "rendered": "What Is Data Binding, and What Are the Different Categories of Data Binding?"
    },
    "content": {
      "rendered": "\n<p>Data binding is used to connect the application data and DOM i.e. components with the template. They can be categorized based on the direction of the data flow.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Data flow Direction</strong></td><td><strong>Type</strong></td><td><strong>Description</strong></td></tr><tr><td>From source to view (one-way)</td><td>Interpolation &#8211; Attribute, style, class, property</td><td>Interpolates values calculated from application data into HTML</td></tr><tr><td>From lightview to the source (one-way)</td><td>Event</td><td>Enables applications to respond to users in the target environment</td></tr><tr><td>View-source-view (two-way)</td><td>Two-way</td><td>Changes in the application state automatically get reflected in the view and vice-versa. For this type of binding, ngModel directive is used.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Data binding is used to connect the application data and DOM i.e. components with the template. They can be categorized based on the direction of the data flow. Data flow Direction Type Description From source to view (one-way) Interpolation &#8211; Attribute, style, class, property Interpolates values calculated from application data into HTML From lightview to [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3016"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3016"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3016/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3038,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3016/revisions/3038"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3016"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3016"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3016"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3014,
    "date": "2020-10-23T04:59:13",
    "date_gmt": "2020-10-23T04:59:13",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3014"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "explain-the-differences-between-one-way-binding-and-two-way-binding",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/explain-the-differences-between-one-way-binding-and-two-way-binding/",
    "title": {
      "rendered": "Explain the Differences Between One-Way Binding and Two-Way Binding"
    },
    "content": {
      "rendered": "\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>One-way binding</strong></td><td><strong>Two-way binding</strong></td></tr><tr><td>The view doesn’t change or update automatically whenever there is a change in the data model. Custom code needs to be manually written to reflect changes.</td><td>UI or view is continuously updated automatically as the data model changes. The process is similar to the synchronization process.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>One-way binding Two-way binding The view doesn’t change or update automatically whenever there is a change in the data model. Custom code needs to be manually written to reflect changes. UI or view is continuously updated automatically as the data model changes. The process is similar to the synchronization process.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3014"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3014"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3014/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3039,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3014/revisions/3039"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3014"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3014"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3014"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3013,
    "date": "2020-10-23T04:59:25",
    "date_gmt": "2020-10-23T04:59:25",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3013"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-are-the-various-filters-supported-by-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-the-various-filters-supported-by-angular/",
    "title": {
      "rendered": "What Are the Various Filters Supported by Angular?"
    },
    "content": {
      "rendered": "\n<figure class=\"wp-block-table\"><table><tbody><tr><td>Filter name</td><td>Description</td></tr><tr><td>Uppercase</td><td>Convert string to uppercase</td></tr><tr><td>Lowercase</td><td>Convert string to lowercase</td></tr><tr><td>Date</td><td>Convert date to the specified format</td></tr><tr><td>Currency</td><td>Convert the number to currency format</td></tr><tr><td>Number</td><td>Format number into a string</td></tr><tr><td>Orderby</td><td>Orders an array by specific expression</td></tr><tr><td>limitTo</td><td>Limits array into the specified number of elements; string to specified number of characters</td></tr><tr><td>JSON</td><td>Format object to JSON string</td></tr><tr><td>Filter</td><td>A select a subset of items from the array</td></tr></tbody></table></figure>\n\n\n\n<p>You can mention few of them and show an example as well –</p>\n\n\n\n<p><code>&lt;p&gt;Amount: {{ amount | currency }}&lt;/p&gt;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Filter name Description Uppercase Convert string to uppercase Lowercase Convert string to lowercase Date Convert date to the specified format Currency Convert the number to currency format Number Format number into a string Orderby Orders an array by specific expression limitTo Limits array into the specified number of elements; string to specified number of characters [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3013"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3013"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3013/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3040,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3013/revisions/3040"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3013"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3013"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3013"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3012,
    "date": "2020-10-23T04:59:45",
    "date_gmt": "2020-10-23T04:59:45",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3012"
    },
    "modified": "2020-11-18T07:15:48",
    "modified_gmt": "2020-11-18T07:15:48",
    "slug": "what-are-ngmodules-differentiate-between-javascript-modules-and-ngmodules",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-ngmodules-differentiate-between-javascript-modules-and-ngmodules/",
    "title": {
      "rendered": "What Are Ngmodules? Differentiate Between Javascript Modules and Ngmodules"
    },
    "content": {
      "rendered": "\n<p>NgModule was introduced after Angular 2, to enable developers to declare all the relationships in one place with metadata. Thus, in short, NgModules are built from metadata that describes components, services, directives, pipes etc… Angular then creates a component factory, a class that creates components.</p>\n\n\n\n<p>Difference between JS modules and NgModules –</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>JS modules</td><td>NgModules</td></tr><tr><td>Bounds all the classes</td><td>Bounds only declarable classes</td></tr><tr><td>All the member classes are defined in a single file</td><td>The module’s classes are listed in the @NgModule.declarations list</td></tr><tr><td>Cant extend the entire application with services</td><td>The entire application can be extended with services using @NgModules.providers list to add providers</td></tr><tr><td>Can import or export any kind of classes</td><td>It can import or export only those declarable classes that it owns or imports from other modules.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>NgModule was introduced after Angular 2, to enable developers to declare all the relationships in one place with metadata. Thus, in short, NgModules are built from metadata that describes components, services, directives, pipes etc… Angular then creates a component factory, a class that creates components. Difference between JS modules and NgModules – JS modules NgModules [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3012"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3012"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3012/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3041,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3012/revisions/3041"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3012"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3012"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3012"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3011,
    "date": "2020-10-23T05:00:06",
    "date_gmt": "2020-10-23T05:00:06",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3011"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-are-ngif-and-ngfor-can-you-show-a-small-example-to-use-them",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-ngif-and-ngfor-can-you-show-a-small-example-to-use-them/",
    "title": {
      "rendered": "What Are ngIf and ngFor? Can You Show a Small Example to Use Them?"
    },
    "content": {
      "rendered": "\n<p>Just like if and for in other languages, ngIf and ngFor are used as control statements. Example –</p>\n\n\n\n<p>&lt;p *ngIf=&#8221;display&#8221;&gt;Show this only if the Boolean &#8220;display&#8221; is true&lt;/p&gt;</p>\n\n\n\n<p>Where the display is a boolean with the value true or false. Learn more about ngIf.</p>\n\n\n\n<p>ngFor is used to loop through and display elements of an array (set of data).</p>\n\n\n\n<p><code>&lt;tr *ngFor=\"let student of students; let i = index\"&gt; &lt;td&gt;{{student.name}}</code></p>\n\n\n\n<p><code>&lt;/td&gt; &lt;td&gt;{{i}}&lt;/td&gt; &lt;/tr&gt;</code></p>\n\n\n\n<p>The second part (i=index) is optional and only needed if you want to display the index.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Just like if and for in other languages, ngIf and ngFor are used as control statements. Example – &lt;p *ngIf=&#8221;display&#8221;&gt;Show this only if the Boolean &#8220;display&#8221; is true&lt;/p&gt; Where the display is a boolean with the value true or false. Learn more about ngIf. ngFor is used to loop through and display elements of an array (set [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3011"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3011"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3011/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3042,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3011/revisions/3042"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3011"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3011"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3011"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3010,
    "date": "2020-10-23T05:12:31",
    "date_gmt": "2020-10-23T05:12:31",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3010"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "which-is-the-latest-version-of-angular-what-are-the-new-features-in-it",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/which-is-the-latest-version-of-angular-what-are-the-new-features-in-it/",
    "title": {
      "rendered": "Which Is the Latest Version of Angular? What Are the New Features in It?"
    },
    "content": {
      "rendered": "\n<p>The latest version is Angular 8. Some features are –</p>\n\n\n\n<ul><li>Support for TypeScript 3.4.</li><li>Dynamic import for lazy routes.</li><li>Web workers.</li><li>Differential loading for application code.</li><li>Introduction of Angular Ivy – improved payload size, backward compatibility, faster re-build time, easier debugging etc…</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The latest version is Angular 8. Some features are – Support for TypeScript 3.4. Dynamic import for lazy routes. Web workers. Differential loading for application code. Introduction of Angular Ivy – improved payload size, backward compatibility, faster re-build time, easier debugging etc…</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3010"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3010"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3010/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3043,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3010/revisions/3043"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3010"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3010"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3010"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3009,
    "date": "2020-10-23T05:14:10",
    "date_gmt": "2020-10-23T05:14:10",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3009"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-is-a-component",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-a-component/",
    "title": {
      "rendered": "What Is a Component?"
    },
    "content": {
      "rendered": "\n<p>The component is a logical piece of code. The component consists of the template (that contains the HTML (or URL) that needs to be rendered), class (class that defines properties and methods that supports the view) and metadata (defined using decorator).</p>\n\n\n\n<p>Example –</p>\n\n\n\n<p><code>@Component ({ selector: 'my-app', template: ` &lt;div&gt; &lt;h1&gt;{{appTitle}}&lt;/h1&gt;&nbsp;</code></p>\n\n\n\n<p><code>&lt;div&gt;What is your name?&lt;/div&gt; &lt;/div&gt;, })</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The component is a logical piece of code. The component consists of the template (that contains the HTML (or URL) that needs to be rendered), class (class that defines properties and methods that supports the view) and metadata (defined using decorator). Example – @Component ({ selector: &#8216;my-app&#8217;, template: ` &lt;div&gt; &lt;h1&gt;{{appTitle}}&lt;/h1&gt;&nbsp; &lt;div&gt;What is your name?&lt;/div&gt; [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3009"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3009"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3009/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3044,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3009/revisions/3044"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3009"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3009"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3009"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3008,
    "date": "2020-10-23T05:14:35",
    "date_gmt": "2020-10-23T05:14:35",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3008"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "is-there-a-way-to-convert-the-typescript-code-into-javascript-code",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/is-there-a-way-to-convert-the-typescript-code-into-javascript-code/",
    "title": {
      "rendered": "Is There a Way to Convert the Typescript Code Into Javascript Code?"
    },
    "content": {
      "rendered": "\n<p>Yes, converting TypeScript into JavaScript is called as transpilation.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Yes, converting TypeScript into JavaScript is called as transpilation.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3008"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3008"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3008/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3045,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3008/revisions/3045"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3008"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3008"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3008"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3007,
    "date": "2020-10-23T05:14:58",
    "date_gmt": "2020-10-23T05:14:58",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3007"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-is-the-digest-cycle",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-the-digest-cycle/",
    "title": {
      "rendered": "What Is the Digest Cycle?"
    },
    "content": {
      "rendered": "\n<p>Digest cycle is the process of monitoring watchlist to track the changes in the value of the watch variable. The digest cycle is implicitly triggered, but we can also trigger it manually using $apply() function.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Digest cycle is the process of monitoring watchlist to track the changes in the value of the watch variable. The digest cycle is implicitly triggered, but we can also trigger it manually using $apply() function.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3007"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3007"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3007/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3046,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3007/revisions/3046"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3007"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3007"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3007"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3005,
    "date": "2020-10-23T06:10:52",
    "date_gmt": "2020-10-23T06:10:52",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3005"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "can-you-create-a-parameterized-pipe-in-the-above-example",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/can-you-create-a-parameterized-pipe-in-the-above-example/",
    "title": {
      "rendered": "Can You Create a Parameterized Pipe in the Above Example?"
    },
    "content": {
      "rendered": "\n<p>Yes,</p>\n\n\n\n<p><code>&lt;p&gt;Price is {{ price | currency : “USD$” : 0.00 }}&lt;/p&gt;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Yes, &lt;p&gt;Price is {{ price | currency : “USD$” : 0.00 }}&lt;/p&gt;</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3005"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3005"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3005/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3050,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3005/revisions/3050"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3005"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3005"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3005"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3004,
    "date": "2020-10-23T06:11:02",
    "date_gmt": "2020-10-23T06:11:02",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3004"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "explain-how-you-can-chain-pipes",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/explain-how-you-can-chain-pipes/",
    "title": {
      "rendered": "Explain How You Can Chain Pipes"
    },
    "content": {
      "rendered": "\n<p>We can add any number of filters using pipes &#8211;</p>\n\n\n\n<p><code>&lt;p&gt;Average is {{ average | uppercase | number}}&lt;/p&gt;&nbsp;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>We can add any number of filters using pipes &#8211; &lt;p&gt;Average is {{ average | uppercase | number}}&lt;/p&gt;&nbsp;</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3004"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3004"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3004/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3051,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3004/revisions/3051"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3004"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3004"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3004"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3003,
    "date": "2020-10-23T06:11:23",
    "date_gmt": "2020-10-23T06:11:23",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3003"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "is-it-possible-to-create-a-custom-pipe-how",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/is-it-possible-to-create-a-custom-pipe-how/",
    "title": {
      "rendered": "Is It Possible to Create a Custom Pipe? How?"
    },
    "content": {
      "rendered": "\n<p>Yes, we can create custom pipes.</p>\n\n\n\n<ul><li>Pipe metadata @Pipe decorator can be imported from core Angular library</li><li>Pipe is a class that is decorated with the above metadata (@Pipe({name: &#8216;myCustomPipe&#8217;}))</li><li>The next step is to define the transformation. For this, the pipe class should implement the method transform() of the PipeTransform class.</li><li>Specify the pipe name in the main code</li></ul>\n\n\n\n<p><code>&lt;p&gt;Size: {{number | myCustomPipe: 'Error'}}&lt;/p&gt;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Yes, we can create custom pipes. Pipe metadata @Pipe decorator can be imported from core Angular library Pipe is a class that is decorated with the above metadata (@Pipe({name: &#8216;myCustomPipe&#8217;})) The next step is to define the transformation. For this, the pipe class should implement the method transform() of the PipeTransform class. Specify the pipe [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3003"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3003"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3003/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3052,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3003/revisions/3052"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3003"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3003"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3003"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3002,
    "date": "2020-10-23T06:11:36",
    "date_gmt": "2020-10-23T06:11:36",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3002"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-is-the-purpose-of-an-async-pipe",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-the-purpose-of-an-async-pipe/",
    "title": {
      "rendered": "What Is the Purpose of an Async Pipe?"
    },
    "content": {
      "rendered": "\n<p>Async pipe subscribes to a promise or an observable, and returns the latest value. If a new value is emitted, the pipe marks the component that needs to be checked for any changes.</p>\n\n\n\n<p><code>&lt;code&gt;observable|async&lt;/code&gt;&nbsp;</code></p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Async pipe subscribes to a promise or an observable, and returns the latest value. If a new value is emitted, the pipe marks the component that needs to be checked for any changes. &lt;code&gt;observable|async&lt;/code&gt;&nbsp;</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3002"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3002"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3002/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3053,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3002/revisions/3053"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3002"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3002"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3002"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3001,
    "date": "2020-10-23T06:11:56",
    "date_gmt": "2020-10-23T06:11:56",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3001"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-is-the-difference-between-pure-and-impure-pipe",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-the-difference-between-pure-and-impure-pipe/",
    "title": {
      "rendered": "What Is the Difference Between Pure and Impure Pipe?"
    },
    "content": {
      "rendered": "\n<p><strong>Answer:</strong></p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td><strong>Pure pipe</strong></td><td><strong>Impure pipe</strong></td></tr><tr><td>Doesn’t get affected by internal state</td><td>Can produce different output for the same input based on the internal state</td></tr><tr><td>Can be shared with many different instances</td><td>It cannot be shared because the internal state can be affected by any factors.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Answer: Pure pipe Impure pipe Doesn’t get affected by internal state Can produce different output for the same input based on the internal state Can be shared with many different instances It cannot be shared because the internal state can be affected by any factors.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3001"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3001"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3001/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3054,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3001/revisions/3054"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3001"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3001"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3001"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 3000,
    "date": "2020-10-23T06:12:05",
    "date_gmt": "2020-10-23T06:12:05",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=3000"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "explain-the-importance-of-httpclient",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/explain-the-importance-of-httpclient/",
    "title": {
      "rendered": "Explain the Importance of HttpClient."
    },
    "content": {
      "rendered": "\n<p>HttpClient is a simplified Http API for Angular applications. It gives better observable APIs, better error handling mechanisms, testability, request and response interception, typed request and response objects. The HttpClientAPI rests on the XMLHttpRequest interface exposed by the browsers.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>HttpClient is a simplified Http API for Angular applications. It gives better observable APIs, better error handling mechanisms, testability, request and response interception, typed request and response objects. The HttpClientAPI rests on the XMLHttpRequest interface exposed by the browsers.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3000"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=3000"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3000/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3055,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/3000/revisions/3055"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=3000"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=3000"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=3000"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2999,
    "date": "2020-10-23T06:12:27",
    "date_gmt": "2020-10-23T06:12:27",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2999"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "how-does-angular-router-work",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/how-does-angular-router-work/",
    "title": {
      "rendered": "How Does Angular Router Work?"
    },
    "content": {
      "rendered": "\n<p>Angular router interprets a browser URL as commands to navigate to a client-generated view. The router is bound to the links on a page. This way Angular knows to navigate the application view to the required page when a user clicks on it.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Angular router interprets a browser URL as commands to navigate to a client-generated view. The router is bound to the links on a page. This way Angular knows to navigate the application view to the required page when a user clicks on it.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2999"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2999"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2999/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3056,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2999/revisions/3056"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2999"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2999"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2999"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2998,
    "date": "2020-10-23T06:12:38",
    "date_gmt": "2020-10-23T06:12:38",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2998"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-are-the-router-navigation-events",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-the-router-navigation-events/",
    "title": {
      "rendered": "What Are the Router Navigation Events?"
    },
    "content": {
      "rendered": "\n<p>&nbsp;Router navigation events help track the lifecycle of a route. These are –</p>\n\n\n\n<ul><li>NavigationStart,</li><li>RouteConfigLoadStart,</li><li>RouteConfigLoadEnd,</li><li>RoutesRecognized,</li><li>GuardsCheckStart,</li><li>ChildActivationStart,</li><li>ActivationStart,</li><li>GuardsCheckEnd,</li><li>ResolveStart,</li><li>ResolveEnd,</li><li>ActivationEnd</li><li>ChildActivationEnd</li><li>NavigationEnd,</li><li>NavigationCancel,</li><li>NavigationError</li><li>Scroll</li></ul>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>&nbsp;Router navigation events help track the lifecycle of a route. These are – NavigationStart, RouteConfigLoadStart, RouteConfigLoadEnd, RoutesRecognized, GuardsCheckStart, ChildActivationStart, ActivationStart, GuardsCheckEnd, ResolveStart, ResolveEnd, ActivationEnd ChildActivationEnd NavigationEnd, NavigationCancel, NavigationError Scroll</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2998"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2998"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2998/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3057,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2998/revisions/3057"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2998"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2998"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2998"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2997,
    "date": "2020-10-23T06:12:46",
    "date_gmt": "2020-10-23T06:12:46",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2997"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "is-the-routing-module-mandatory-for-an-application",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/is-the-routing-module-mandatory-for-an-application/",
    "title": {
      "rendered": "Is the Routing Module Mandatory for an Application?"
    },
    "content": {
      "rendered": "\n<p>No, routing module can be totally skipped if there are simple configurations.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>No, routing module can be totally skipped if there are simple configurations.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2997"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2997"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2997/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3058,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2997/revisions/3058"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2997"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2997"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2997"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2996,
    "date": "2020-10-23T06:13:06",
    "date_gmt": "2020-10-23T06:13:06",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2996"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-is-a-wildcard-route",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-is-a-wildcard-route/",
    "title": {
      "rendered": "What Is a Wildcard Route?"
    },
    "content": {
      "rendered": "\n<p>Wildcard route has the path that consists of two asterisks (**) that can match any URL. It is helpful when a URL doesn’t match any of the predefined routes. Instead of throwing error, we can use a wildcard route and defining a component for the same.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>Wildcard route has the path that consists of two asterisks (**) that can match any URL. It is helpful when a URL doesn’t match any of the predefined routes. Instead of throwing error, we can use a wildcard route and defining a component for the same.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2996"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2996"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2996/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3059,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2996/revisions/3059"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2996"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2996"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2996"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2995,
    "date": "2020-10-23T06:13:18",
    "date_gmt": "2020-10-23T06:13:18",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2995"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "explain-the-lifecycle-hooks",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/explain-the-lifecycle-hooks/",
    "title": {
      "rendered": "Explain the Lifecycle Hooks"
    },
    "content": {
      "rendered": "\n<p>The set of processes that Angular goes through from initiation through end together are called as lifecycle hooks.</p>\n\n\n\n<figure class=\"wp-block-table\"><table><tbody><tr><td>ngOnChanges</td><td>This method is called when the value of a data-bound property changes</td></tr><tr><td>ngOnInit</td><td>This is called whenever the initialization of the directive/component happens.</td></tr><tr><td>ngDoCheck</td><td>This method is for detecting and taking action on changes that Angular won&#8217;t detect on its own.</td></tr><tr><td>ngAfterContentInit</td><td>This is called in response after Angular projects any external content into the component&#8217;s view.</td></tr><tr><td>ngAfterContentChecked</td><td>This is called in response after Angular checks the content projected into the component.</td></tr><tr><td>ngAfterViewInit</td><td>This is called in response after Angular initializes the component&#8217;s views and child views.</td></tr><tr><td>ngAfterViewChecked</td><td>This is called in response after Angular checks the component&#8217;s views and child views.</td></tr><tr><td>ngOnDestroy</td><td>This is the clean-up done before Angular destroys the directive/component.</td></tr></tbody></table></figure>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>The set of processes that Angular goes through from initiation through end together are called as lifecycle hooks. ngOnChanges This method is called when the value of a data-bound property changes ngOnInit This is called whenever the initialization of the directive/component happens. ngDoCheck This method is for detecting and taking action on changes that Angular [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2995"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2995"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2995/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3060,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2995/revisions/3060"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2995"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2995"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2995"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2994,
    "date": "2020-10-23T06:13:41",
    "date_gmt": "2020-10-23T06:13:41",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2994"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "how-are-animations-done-in-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/how-are-animations-done-in-angular/",
    "title": {
      "rendered": "How Are Animations Done in Angular?"
    },
    "content": {
      "rendered": "\n<p>To use the animation module, it has to be enabled. For this, the BrowserAnimationModule has to be imported.Plain Text</p>\n\n\n\n<pre class=\"wp-block-preformatted\"></pre>\n\n\n\n<p>1</p>\n\n\n\n<pre class=\"wp-block-preformatted\">import { BrowserAnimationsModule } from '@angular/platform-browser/animations'; After this, import the required animation functions into the component files. Example, import { state, animate, transition, // ... } from '@angular/animations';</pre>\n\n\n\n<p>Next, add the animation metadata property within the @Component() decorator in the component file.Plain Text</p>\n\n\n\n<pre class=\"wp-block-preformatted\"></pre>\n\n\n\n<p>1</p>\n\n\n\n<pre class=\"wp-block-preformatted\">@Component({ selector: 'app-root', templateUrl: 'app.component.html', animations: [ // animation triggers go here ] })</pre>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To use the animation module, it has to be enabled. For this, the BrowserAnimationModule has to be imported.Plain Text 1 import { BrowserAnimationsModule } from &#8216;@angular/platform-browser/animations&#8217;; After this, import the required animation functions into the component files. Example, import { state, animate, transition, // &#8230; } from &#8216;@angular/animations&#8217;; Next, add the animation metadata property within [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2994"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2994"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2994/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3061,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2994/revisions/3061"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2994"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2994"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2994"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2993,
    "date": "2020-10-23T06:13:54",
    "date_gmt": "2020-10-23T06:13:54",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2993"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "what-are-the-special-transition-states",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/what-are-the-special-transition-states/",
    "title": {
      "rendered": "What Are the Special Transition States?"
    },
    "content": {
      "rendered": "\n<p> Special transition states are wildcard (*) and void. Wildcard matches any animation state. The void state is used to configure transitions for elements entering or leaving a page.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p> Special transition states are wildcard (*) and void. Wildcard matches any animation state. The void state is used to configure transitions for elements entering or leaving a page.</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2993"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2993"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2993/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3062,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2993/revisions/3062"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2993"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2993"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2993"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  },
  {
    "id": 2992,
    "date": "2020-10-23T06:14:32",
    "date_gmt": "2020-10-23T06:14:32",
    "guid": {
      "rendered": "http://angular.foobrdigital.com/?p=2992"
    },
    "modified": "2020-11-18T07:15:47",
    "modified_gmt": "2020-11-18T07:15:47",
    "slug": "how-can-you-disable-all-the-animations-in-angular",
    "status": "publish",
    "type": "post",
    "link": "https://angular.foobrdigital.com/how-can-you-disable-all-the-animations-in-angular/",
    "title": {
      "rendered": "How Can You Disable All the Animations in Angular?"
    },
    "content": {
      "rendered": "\n<p>To disable all the animations, place the @.disabled host binding on the topmost Angular component.</p>\n\n\n\n<ol><li>Explain the steps to create a reusable animation.</li></ol>\n\n\n\n<p>To create an animation that can be reused, use the animation() method and define the animation in a separate .ts file. Declare this animation as a const export variable. This can be then imported and reused in any app components that use the useAnimation() API. Check an example on the Angular website.</p>\n",
      "protected": false
    },
    "excerpt": {
      "rendered": "<p>To disable all the animations, place the @.disabled host binding on the topmost Angular component. Explain the steps to create a reusable animation. To create an animation that can be reused, use the animation() method and define the animation in a separate .ts file. Declare this animation as a const export variable. This can be [&hellip;]</p>\n",
      "protected": false
    },
    "author": 2,
    "featured_media": 0,
    "comment_status": "open",
    "ping_status": "open",
    "sticky": false,
    "template": "",
    "format": "standard",
    "meta": [],
    "categories": [101, 106],
    "tags": [],
    "_links": {
      "self": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2992"
        }
      ],
      "collection": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts"
        }
      ],
      "about": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/types/post"
        }
      ],
      "author": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/users/2"
        }
      ],
      "replies": [
        {
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/comments?post=2992"
        }
      ],
      "version-history": [
        {
          "count": 1,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2992/revisions"
        }
      ],
      "predecessor-version": [
        {
          "id": 3063,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/posts/2992/revisions/3063"
        }
      ],
      "wp:attachment": [
        {
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/media?parent=2992"
        }
      ],
      "wp:term": [
        {
          "taxonomy": "category",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/categories?post=2992"
        },
        {
          "taxonomy": "post_tag",
          "embeddable": true,
          "href": "https://angular.foobrdigital.com/wp-json/wp/v2/tags?post=2992"
        }
      ],
      "curies": [
        {
          "name": "wp",
          "href": "https://api.w.org/{rel}",
          "templated": true
        }
      ]
    }
  }
]
