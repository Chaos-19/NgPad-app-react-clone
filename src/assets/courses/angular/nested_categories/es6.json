[
  {
    "id": 198,
    "count": 10,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/1-new-es6-syntax/",
    "name": "New ES6 syntax",
    "slug": "1-new-es6-syntax",
    "taxonomy": "category",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Learn about new es6 syntax like how to declare a variable and more.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  },
  {
    "id": 199,
    "count": 2,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/2-destructuring/",
    "name": "Destructuring",
    "slug": "2-destructuring",
    "taxonomy": "category",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Learn about ES6 Destructuring. Which means to break down a complex structure into simpler parts. With destructuring, you can extract smaller fragments from objects and arrays.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  },
  {
    "id": 200,
    "count": 1,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/3-es6-modules/",
    "name": "ES6 modules",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Learn about ES6 modules, which help us to modularize the code simply by partitioning the entire code into modules that can be imported from anywhere.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  },
  {
    "id": 201,
    "count": 3,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/4-es6-class/",
    "name": "ES6 class",
    "slug": "4-es6-class",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Learn about ES6 Classes and how to utilize them in JavaScript development.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  },
  {
    "id": 202,
    "count": 2,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/5-arrow-functions/",
    "name": "Arrow Functions",
    "slug": "5-arrow-functions",
    "taxonomy": "category",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Arrow functions were introduced in ES6. Arrow functions allow us to write shorter function syntax.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  },
  {
    "id": 203,
    "count": 1,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/6-symbol/",
    "name": "Symbol",
    "slug": "6-symbol",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Symbols are new primitive type introduced in ES6.  Just like Number, String, Boolean, they can be created using the factory function Symbol() which returns a Symbol.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  },
  {
    "id": 204,
    "count": 3,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/7-iterators-generators/",
    "name": "Iterators &amp; Generators",
    "slug": "7-iterators-generators",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Iterator is an object which allows us to access a collection of objects one at a time.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  },
  {
    "id": 205,
    "count": 5,
    "description": "",
    "link": "https://angular.foobrdigital.com/category/free-main/basics-free-main/es6-basics-free-main/8-promises/",
    "name": "Promises",
    "slug": "8-promises",

    "lang": "javascript",
    "postID": "angular/how-to-guides",
    "courseInfo": "Promises allows you to very easily deal with asynchronous code without resolving to multiple levels of callback functions.",
    "code": "#include <iostream>\r\n\r\nint main()\r\n{\r\n    std::cout << \"Hello, world!\\n\";\r\n}",
    "compileLang": "27",
    "compileExt": "python",
    "isNested": false,
    "icon": "assets/icons/es6.svg"
  }
]
